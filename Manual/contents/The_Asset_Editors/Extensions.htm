<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>The Extension Editor</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../assets/css/default.css" type="text/css" />
  <script src="../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how the extension editor works" />
  <meta name="rh-index-keywords" content="Extension Editor" />
  <meta name="search-keywords" content="extensions,extension editor" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">The Extension Editor</span></h1>
  <p>An <strong>extension package</strong> can be used to add a number of additional functions and <a class="glossterm" data-glossterm="constant" href="#">constant</a><span class="glossextra">s</span> to the GameMaker Language (GML) and easily transfer them between projects. Extension functions can also be linked to external <a class="glossterm" data-glossterm="SDK" href="#">SDK</a><span class="glossextra">s</span> or <a class="glossterm" data-glossterm="source code" href="#">source code</a> written in other languages (like Java for Android, Objective-C for iOS, etc.), which can be used to expand your game&#39;s functionality (usually used for implementing third party APIs, such as for ads, in-app purchases, and more).</p>
  <p><img alt="Extensions Properties" class="center" src="../assets/Images/Asset_Editors/Editor_Extensions.png" /></p>
  <p>Extensions can be used for creating a library of functions that you use frequently across all your projects, so instead of having to import the same scripts into every project, you can simply add one extension asset that holds a collection of your favourite functions and constants. Such functions can also be specific to a certain platform, and you can easily choose which platforms an extension can be used on.</p>
  <p>For a step-by-step example on creating an extension, see: <a data-xref="{title}" href="Extension_Creation/Creating_An_Extension.htm">Creating An Extension</a></p>
  <p>To disable extensions based on target platform, see: <a data-xref="{title}" href="Extension_Creation/Disabling_Extensions.htm">How to Disable Extensions?</a></p>
  <h2 id="importing_extensions">Importing Extensions</h2>
  <p>Normally 3rd party extensions will be from the <a href="https://marketplace.gamemaker.io">GameMaker Marketplace</a>, and those you have subscribed to will then be listed in the <a href="../Introduction/The_Marketplace.htm">Marketplace Library</a> window which can be installed from there. If you did not get your extension package from the Marketplace, you can still add it to a project by right-clicking <img alt="RMB Icon" class="icon" src="../assets/Images/Icons/Icon_RMB.png" /> anywhere in <a data-xref="{title}" href="../Introduction/The_Asset_Browser.htm">The Asset Browser</a> and selecting <em>Add Existing</em>, then browsing to the location of the extension to select it.</p>
  <p class="note"><span data-conref="../assets/snippets/Tag_note.hts"> </span> If you have a <span class="inline">.yymps</span>/<span class="inline">.yymp</span>/<span class="inline">.gmez</span> package, you can drag it into the IDE to import it, or go under the &quot;Tools&quot; menu and select &quot;Import Local Package&quot;.</p>
  <h2 id="target_platforms">Target Platforms</h2>
  <p>Once you have added an extension to the Asset Browser, you should give it a name and a version number and also set which platforms you want to export it to. By unchecking selected platforms, you can tell <span data-keyref="GameMaker Name">GameMaker</span> to not export the extension as part of the executable for those platforms. You should also ensure that the extension properties match up with the selected target platform(s), and select compatible export targets for the extension files based on the following:</p>
  <ul class="colour">
    <li class="dropspot"><strong>All targets</strong>: GML extensions. These are extensions made using the GameMaker Language (GML) and are compatible with all target platforms. (<em></em><em>Note that this is the only extension type that the GX.games target currently supports.</em>)</li>
    <li class="dropspot"><strong>Windows and Xbox</strong>: You can use Windows <span class="inline">DLL</span> files (Dynamic Link Libraries). Please note that if you have checked the &quot;Use x64 Windows Runtime&quot; in the <a href="../Settings/Game_Options/Windows.htm">Windows Game Options</a>, then all DLLs for the project <strong>must be 64-bit compatible</strong>. 32-bit DLLs will not work with a 64-bit executable.</li>
    <li class="dropspot"><strong>macOS</strong>: The macOS target can use the standard <span class="inline">DyLib</span> files for extensions.</li>
    <li class="dropspot"><strong>Ubuntu (Linux)</strong>: For the Ubuntu target you need to make sure that your extension uses <span class="inline">.so</span> files.</li>
    <li class="dropspot"><strong>HTML5</strong>: These platforms can use <span class="inline">JavaScript</span> extensions.</li>
    <li class="dropspot"><strong>Android</strong>: This platform requires an extension to be written in <span class="inline">Java</span> or an <span class="inline">Android Framework SDK</span>.</li>
    <li class="dropspot"><strong>iOS</strong> / <strong> tvOS</strong>: Extensions for this platform are written in Objective C and require an <span class="inline">*.mm</span> and an <span class="inline">*.h</span> file, or if using any frameworks, a pre-compiled native <span class="inline">*.a</span> file.</li>
    <li class="dropspot"><strong>PlayStation</strong>: For PlayStation your extensions should be <span class="inline">PRX</span> files, with each target requiring a different <span class="inline">PRX</span> to conform to specifications of the target (PS3, PS4 or PS5). If working on a PSVita, the extension should be <span class="inline">SUPRX</span> instead.</li>
  </ul>
  <p class="note"><span data-conref="../assets/snippets/Tag_note.hts"> </span> Some extensions are required to follow specific naming conventions for <span data-keyref="GameMaker Name">GameMaker</span> to correctly identify the platform and CPU architecture they are designed for. Please see <a data-xref="{text}" href="Extension_Creation/Creating_An_Extension.htm#h">Naming Conventions</a> for more information.</p>
  <p>Since an extension can have various associated files, it&#39;s possible to create a single extension for multiple platforms, in which case you want to specify <em>all </em>the compatible platforms in the main extension editor (i.e.: tick the checkbox beside them) and then in the individual file properties for each part of the extension, set the platform that those files should be exported to.</p>
  <p>To change the target platform for a specific extension file or placeholder you must first open the extension properties (double click <img alt="LMB Icon" class="icon" src="../assets/Images/Icons/Icon_LMB.png" /> the extension in <a data-xref="{title}" href="../Introduction/The_Asset_Browser.htm">The Asset Browser</a>), and then once in the extension properties select the resource file from the right that you want to edit. In the window that opens, you can select the platforms to which that specific file is exported:</p>
  <p class="dropspot"><img alt="Extension Target Platforms" class="center" src="../assets/Images/Asset_Editors/Editor_Extensions_Targets.png" /></p>
  <h2 id="extension_options">Extension Options</h2>
  <p>An extension you&#39;re using may have options, which will be displayed at the bottom of the Extension Editor window:</p>
  <p><img class="center" src="../assets/Images/Asset_Editors/Editor_Extensions_Options_UserFacing.png" />These will be different depending on the extension, and not all of them may have options. Look at the documentation of the extension you&#39;re using for information on its options.</p>
  <p>To set up options for your own extension, see: <a data-xref="{text}" href="Extension_Creation/Creating_An_Extension.htm#h1">Creating Extension Options</a></p>
  <h2 id="uncompress_on_build">Uncompress on Build</h2>
  <p>The &quot;Uncompress on build&quot; option can be used for compressed archive files that are intended for a specific target platform. If this option is enabled, the contents of that archive will be extracted into the Included Files directory of the built package, but only after being copied over to the target platform.</p>
  <p>For example, if you enable this for a <span class="inline">.zip</span> file in your extension and then start a <strong>macOS </strong>build from Windows, that <span class="inline">.zip</span> archive will be copied over as-is from Windows to macOS and will then be uncompressed during compilation on the target platform (which, in this context, is macOS).</p>
  <h2 id="calling_extension_functions">Calling Extension Functions</h2>
  <p>Once you have set up your extension, you can use the functions and constants for it just as you would the built-in functions and constants used in the GameMaker Language. If your game is cross-platform (for example, it is designed to run on Windows and Android targets), then you should use the <a href="../GameMaker_Language/GML_Reference/OS_And_Compiler/OS_And_Compiler.htm">OS constants and functions</a> to check the current platform before calling extension specific functions to prevent issues, for example:</p>
  <p class="code">switch (os_type)<br />
    {<br />
        case os_android:<br />
            call_android_extension_function(x, y, z);<br />
        break;<br />
    <br />
        case os_windows:<br />
            call_windows_extension_function(x, y, z);<br />
        break;<br />
    }
  </p>
  <p>Note that for different platforms your extensions can share function names, so if you have an extension with distinct files to (for example) pop up a message on Windows and for Android, both extension files can share the same function names as long as they are both set to export only to their respective platforms.</p>
  <p>If you want to create your own extensions, then you can find the basic required information from the following pages:</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="Extension_Creation/Creating_An_Extension.htm">Creating An Extension</a></li>
    <li><a data-xref="{title}" href="Extension_Creation/Android_Extensions.htm">Android Extensions</a></li>
    <li><a href="Extension_Creation/iOS_Extensions.htm">iOS / tvOS Extensions</a></li>
    <li><a data-xref="{title}" href="Extension_Creation/HTML5_Extensions.htm">HTML5 Code Injection</a></li>
    <li><a data-xref="{title}" href="Extension_Creation/Extended_Examples.htm">Source Examples</a></li>
  </ul>
  <p> </p>
  <h1>Official 3rd Party Extensions</h1>
  <p>Legacy versions of <span data-keyref="GameMaker Name">GameMaker</span> had a lot of 3rd party functionality built in, but this was inefficient and difficult to maintain, since if any specific functionality was changed by the third party, then the whole <span data-keyref="GameMaker Name">GameMaker</span> <a class="glossterm" data-glossterm="IDE" href="#">IDE</a> and <a class="glossterm" data-glossterm="Runtime" href="#">Runtime</a> would have to be updated. So, current versions have adopted the use of extensions packages to add third-party support to your games. This means that you can add only those extra functions that you require and that you can even adapt and edit them to suit your specific needs.</p>
  <p>Most of these extensions will be downloaded and installed for you when you select a specific <a href="../Settings/Game_Options.htm">Game Options</a> (like Facebook or Google Mobile Ads, for example), but you can find further information on them from the appropriate section for each platform on the GameMaker Knowledge Base:</p>
  <ul class="colour">
    <li><a href="https://help.gamemaker.io/hc/en-us/categories/204246668-GameMaker"><span data-keyref="GameMaker Name">GameMaker</span> Platforms And Setup</a></li>
  </ul>
  <p>You can find the extensions themselves from the following Marketplace page:</p>
  <ul class="colour">
    <li><a href="https://marketplace.gamemaker.io/publishers/23/yoyo-games">Official Marketplace Assets</a></li>
  </ul>
  <p>Note that these extensions come with a demo and a help file (in <span class="inline">*.pdf</span> format) that explain how to use them, and as such their functions are not covered in this manual.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="The_Asset_Editors.htm">The Asset Editors</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="Fonts.htm">The Font Editor</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Extensions
Extension Editor
Android Extensions
iOS Extensions
-->
  <!-- TAGS
extension_editor
-->
</body>
</html>