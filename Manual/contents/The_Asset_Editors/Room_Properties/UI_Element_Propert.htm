<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>UI Element Properties</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Page covering the various UI Element properties" />
  <meta name="rh-index-keywords" content="Rooms - UI Element Properties" />
  <meta name="search-keywords" content="ui,ui layer,flex,flex panels,gui layer" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">UI Element Properties</span></h1>
  <p>The Element List displays all UI layers and all parts of a UI layer, including Flex Panels and assets:</p>
  <p><img class="center" src="../../assets/Images/Asset_Editors/UILayers/UIL_ElementList.png" />You can select a UI layer, Flex Panel or Asset Element in the Element List and its properties will be shown in <a data-xref="{title}" href="../../IDE_Tools/The_Inspector.htm">The Inspector</a>.</p>
  <p>Besides being able to change the Element name and associated asset (if any), there are other properties which are described below for each type of Element.</p>
  <p>These properties are represented at runtime by the <a data-xref="{title}" href="../../GameMaker_Language/GML_Reference/Flex_Panels/Flex_Panels_Styling.htm">Flex Panel Struct Members</a>.</p>
  <h2>UI Layer Properties</h2>
  <p><img class="center" src="../../assets/Images/Asset_Editors/UILayers/UIL_Properties.png" />A UI layer contains the following main properties:</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">UI Layer Main Properties</a></p>
  <div class="droptext" data-targetname="drop-down">
    <h3>Game View</h3>
    <p>You can choose between &quot;<strong>Display</strong>&quot; and &quot;<strong>Viewports</strong>&quot;. With &quot;<strong>Display</strong>&quot;, the layer contents will be rendered directly to the game screen. With &quot;<strong>Viewports</strong>&quot;, the layer contents will be rendered separately for each active viewport in the game. Details about the rendering order are given in the section above for &quot;<strong>Runtime Draw Order</strong>&quot;.</p>
    <p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"> </span> Viewports must be enabled for UI layers to be drawn to viewports and viewport settings must be consistent between rooms for UI layers to behave the same. See: <a data-xref="{text}" href="Room_Properties.htm#h">Cameras And Viewports</a>, <span class="inline2"><a data-xref="{title}" href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/Cameras_And_Viewports/view_enabled.htm">view_enabled</a></span>, <span class="inline2"><a data-xref="{title}" href="../../GameMaker_Language/GML_Reference/Cameras_And_Display/Cameras_And_Viewports/view_visible.htm">view_visible</a></span></p>
  </div>
  <p>A UI layer also contains the following flex properties:</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">UI Layer Flex Properties</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <h3>Direction</h3>
    <p><strong></strong>The flex direction, i.e. in which direction the child items should be laid out. &quot;<strong>Column</strong>&quot; displays them from top-to-bottom, &quot;<strong>Row</strong>&quot; displays them from left-to-right, and there are reverse options.</p>
    <h3 style="text-align: left;">Align Items</h3>
    <p style="text-align: left; "><strong></strong>This controls how the non-absolute children of a container are aligned along its cross axis (i.e. the direction perpendicular to the flex direction). You can stretch the children to fit the size of the cross axis, or align them to the start, end or centre.</p>
    <h3>Justify Content</h3>
    <p><strong></strong>This controls how the non-absolute children of a flex container are aligned along its main axis (i.e. the flex direction). You can align them to the start, end or centre, or align them from start to end with various spacing options.</p>
    <h3>Layout Direction</h3>
    <p><strong></strong>The layout direction of this panel and its children. You can choose to inherit from the parent container or choose between Left to Right and Right to Left.</p>
    <h3>Wrap</h3>
    <p><strong></strong>This controls what happens when children in the container have overflown on the main axis. You can enable wrapping on the cross axis in case of overflow.</p>
    <h3>Align Content</h3>
    <p><strong></strong>If wrapping is enabled, any items overflowing along the main axis will be laid out across new lines on the cross axis. This property controls how those wrapped lines are distributed along the cross axis.</p>
    <h3>Spacing</h3>
    <p><strong></strong>This lets you set the margin and padding for the panel (margin will not be available for UI layers). Clicking on any side in the border preview will allow you to edit its size, allowing you to also set all sides at once using the <img class="icon" data-cke-saved-src="../../assets/Images/Icons/Icon_Link.png" src="../../assets/Images/Icons/Icon_Link.png" /> button. You can also set the horizontal and vertical gap used by the children of the container.</p>
  </div>
  <p>The above flex properties are also present in Flex Panels.</p>
  <h2>Flex Panel Properties</h2>
  <p><img class="center" src="../../assets/Images/Asset_Editors/UILayers/UIL_FlexProperties.png" />A Flex Panel contains flex and spacing properties, which are the same as described in the previous section for &quot;<strong>UI Layer Flex Properties</strong>&quot;.</p>
  <p>In addition to that, Flex Panels show these extra properties:</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Flex Panel Properties</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <h3>Size</h3>
    <p><strong></strong>The width and height of the panel. You can set the units to either pixels, percentage of the <a data-xref="{text}" href="../../GameMaker_Language/GML_Reference/Flex_Panels/Flex_Panels.htm#h">Containing Block</a> or automatic, which allows the panel to be automatically resized based on its contents (e.g. size of a Sprite placed inside it).</p>
    <p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"> </span> If the size of a Flex Panel is set to &quot;Auto&quot; and it contains Asset Elements as well as other Flex Panels inside it, the Asset Elements are ignored when the size of the panel is calculated and only the Flex Panels contribute to the size.</p>
    <h3>Min/Max Size</h3>
    <p><strong></strong>Set the minimum and maximum size of the panel in either pixels or a percentage.</p>
    <h3>Grow/Shrink</h3>
    <p><strong></strong>The grow and shrink values determine how a panel is sized in a container in relation to its siblings. A higher grow value will allow it to be larger in relation to other growing/shrinking panels in its container, and a higher shrink value will make it smaller.</p>
    <h3>Clip Contents</h3>
    <p><strong></strong>Enable this to clip drawing any contents under this container that exceed its current size. This is useful for windows that may contain more items that it can display at once</p>
    <h3>Position</h3>
    <p>Set the position type of the panel:</p>
    <ul class="colour">
      <li style="text-align: left; "><strong>Relative (default)</strong>: This panel will participate in the flow of its parent container and will take up space in it. Offsets will be relative to the panel&#39;s position within the flow.</li>
      <li style="text-align: left; "><strong>Absolute</strong>: This panel is removed from the flow of its parent and will not take up space. Offsets will be relative to the <a data-xref="{text}" href="../../GameMaker_Language/GML_Reference/Flex_Panels/Flex_Panels.htm#h">Containing Block</a> which may not be its direct parent.</li>
      <li style="text-align: left; "><strong>Static</strong>: The panel will behave like relative except it will ignore offsets and will not form a <a data-xref="{text}" href="../../GameMaker_Language/GML_Reference/Flex_Panels/Flex_Panels.htm#h">Containing Block</a> for its children.</li>
    </ul>
    <p style="text-align: left; ">Changing the position type of an <strong>Absolute</strong> panel to <strong>Relative</strong> or <strong>Static</strong> will reset its offset values.</p>
    <ul class="colour">
    </ul>
    <h3 style="text-align: left;">Align Self</h3>
    <p style="text-align: left; ">This controls how this panel is aligned within its container on its cross-axis. This is a way of overriding the &quot;<strong>Align Items</strong>&quot; property set for the parent but only for this individual panel.</p>
    <h3>Offset</h3>
    <p><strong></strong>Set the offset for this panel from its left, right, top and bottom edges.</p>
  </div>
  <h2>Asset Element Properties</h2>
  <p><img class="center" src="../../assets/Images/Asset_Editors/UILayers/UIL_ElementProps.png" />For elements of all asset types, you can change the alignment, set the anchor for rotation, change the position, scale, rotation, colour, frame and animation speed..</p>
  <h3>Fill Container</h3>
  <p>The &quot;<strong>Fill Container</strong>&quot; settings allow the element to be stretched to fit its containing Flex Panel either on one of the axes or both axes. You can choose whether to maintain aspect ratio or not.</p>
  <p>These settings can be set to stretch and maintain aspect ratio by default through the <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Room_Editor_Preferences.htm">Preferences</a>.</p>
  <h3>Extra Options</h3>
  <p>You will see some extra options based on the asset type:</p>
  <ul class="colour">
    <li><strong>Sprites</strong>: You can choose to tile the sprite horizontally, vertically or in both directions.</li>
    <li><strong>Objects</strong>: You can modify the Variable Definitions of the instance and apply Creation Code.</li>
    <li><strong>Text (Fonts)</strong>: You can set text properties such as alignment, various spacing values and wrapping</li>
  </ul>
  <p>You can also double-click on an Asset Element in the Room Canvas to open its properties window.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Rooms.htm">The Room Editor</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="../../Settings/The_Room_Manager.htm">The Room Manager</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2025 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
UI Element Properties
-->
  <!-- TAGS
rooms_uil_element
-->
</body>
</html>