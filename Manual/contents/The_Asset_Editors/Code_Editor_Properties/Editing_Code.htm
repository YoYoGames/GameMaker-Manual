<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Editing Code</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing how to use the code editor windows
" />
  <meta name="rh-index-keywords" content="Code Editor - Editing" />
  <meta name="search-keywords" content="edit code,code editor,autocomplete" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Editing Code</h1>
  <p class="note"><span data-conref="../../assets/snippets/Tag_note.hts"> </span> This page covers the <span data-keyref="Code_Editor1_Name">Legacy Code Editor</span> for <a href="../Scripts.htm">Script assets</a>. You can enable the new <span data-keyref="Code_Editor2_Name">Code Editor</span> from the <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Text_Editor_2_Preferences.htm">preferences</a>. Read about the <a href="../The_Text_Editor.htm">editor here</a>, and its <a href="Editing_Text.htm">code editing capabilities here</a>.</p>
  <p>When you start to use the Text Editor, it&#39;s simply a case of typing the code you want to have for the document, following the correct GML <a class="glossterm" data-glossterm="syntax" href="#">syntax</a>. While you do this, you will get help from the <strong>auto-complete</strong> window:</p>
  <p><img alt="Script Editor Code Complete" class="center" src="../../assets/Images/Asset_Editors/Editor_Scripts_CodeComplete.png" />This window will pop up while you are writing your code (normally after a slight pause, but this can be set in the <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Text_Editor_Preferences.htm">Preferences</a>) and give you a selection of &quot;best-fit&quot; answers in alphabetical order.</p>
  <p>While using the code editor you can click <img alt="LMB Icon" class="icon" height="24" src="../../assets/Images/Icons/Icon_LMB.png" width="21" /> and drag the mouse to select a row of code or hold down <img alt="Alt Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Alt.png" width="55" /> then click <img alt="LMB Icon" class="icon" height="24" src="../../assets/Images/Icons/Icon_LMB.png" width="21" /> and drag to select columns of code. Anything selected in this way can then be <em>copied</em>, <em>cut </em>and <em>pasted </em>using the standard keyboard shortcuts of <img alt="Control Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png" width="55" /> / <img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55" /> + &quot; <span class="inline">C</span>&quot;, <img alt="Control Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png" width="55" /> / <img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55" /> + &quot;<span class="inline">X</span>&quot; and <img alt="Control Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png" width="55" /> / <img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55" /> + &quot;<span class="inline">V</span>&quot;.</p>
  <p>It is worth noting that you can <strong>comment </strong>your code in various ways. Commenting your code is very important for maintaining productivity as it keeps things clear and separates sections of code in such a way that it is obvious what each part does and why it is there. It also means that if you are working in a team then you can leave notes for other members and that they will know exactly what you have done or what a specific section of code is for. Even if you are a solo developer, leaving comments in your code is important, especially if you have to leave the project and come back to it at a later date.</p>
  <p>Commenting your code is simple, as you just have to use &quot;<span class="inline">//</span>&quot; before any line of text or you can comment out whole paragraphs by using &quot;<span class="inline">/* text here */</span>&quot;. There are even two keyboard shortcuts to comment and un-comment selected lines of code: <img alt="Control Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png" width="55" /> / <img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55" /> + &quot;<span class="inline">K</span>&quot; to comment, and <img alt="Control Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Ctrl.png" width="55" /> / <img alt="CMD Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Cmd.png" width="55" /> + <img alt="Shift Icon" class="icon" height="20" src="../../assets/Images/Icons/Icon_Shift.png" width="55" /> + &quot;<span class="inline">K</span>&quot; to un-comment. The following image illustrates code written using both these methods as well as some <strong>JS Doc</strong> comments (explained in more detail below):</p>
  <p><img alt="Script Editor Comments" class="center" src="../../assets/Images/Asset_Editors/Editor_Scripts_Comments.png" />Scripts can also have certain JSDoc style comments added to define the properties of the functions they contain so that when you use the functions in your code they show up in auto-complete along with their arguments and other details. You can find out more about this from the section <a href="JSDoc_Script_Comments.htm">JSDoc Script Comments</a> for more information.</p>
  <p>By default all code that is written will have <strong>code folding</strong> icons beside each set of matching braces <span class="inline">{}</span>. These take the form of a little plus <span class="inline">+</span> or minus <span class="inline">-</span> icons, and clicking on these will &quot;fold&quot; the code within the matching braces so that it takes up less visual space.</p>
  <p>You can also manually set code folding regions using the special <span class="inline">#region</span> tags to mark a section of code. How this works is that you add a <span class="inline">#region</span> tag (along with any comment text) to the top of a section of code and then add a corresponding <span class="inline">#endregion</span> tag to the bottom of the section and then you can &quot;fold&quot; the code, ie: hide it away so you can cut down on the number of lines of code visible in the editor at any one time:</p>
  <p><img alt="Script Editor Code Regions" class="center" src="../../assets/Images/Asset_Editors/Editor_Scripts_CodeRegion.gif" />The actual code looks something like this:</p>
  <p class="code">#region This is an example region<br />
    <br />
    width = sprite_get_width(sprite);<br />
    height = sprite_get_height(sprite);<br />
    xoff = sprite_get_xoffset(sprite);<br />
    yoff = sprite_get_yoffset(sprite);<br />
    <br />
    #endregion Further comment here if required
  </p>
  <p>As you might have noticed, parts of the script text are coloured. The script editor &quot;knows&quot; about existing objects, built-in variables and functions, etc... and colour codes them accordingly. Colour-coding helps a lot in avoiding mistakes as you can see immediately if you have misspelled some name or used a keyword as a variable, or have a syntax error. However, if you don&#39;t like the colour coding, in the <a href="../../Setting_Up_And_Version_Information/IDE_Preferences/Text_Editor_Preferences.htm">Preferences</a> you can switch it on and off (you can also use <span class="inline">F10</span> to toggle it on or off in the editor) as well as customise the colours that are used.</p>
  <p>You can right-click <img alt="RMB Icon" class="icon" height="24" src="../../assets/Images/Icons/Icon_RMB.png" width="21" /> anywhere in the editor too to open up the following menu:</p>
  <p><img alt="Script Editor Menu" class="center" src="../../assets/Images/Asset_Editors/Editor_Scripts_RMB_Menu.png" />Apart from the regular functions you&#39;d expect to cut, copy and paste lines of code you also have the option to comment or un-comment any selected text, add or remove indents, as well split the code window into 1, 2 or 3 separate panes (note that the options relating to <span class="inline">#regions</span> will not be available if you have not defined any in the code being edited).</p>
  <p>The last option for splitting into panes will split the actual window into different parts where you can then drag a script or event and have it show alongside the other ones for comparing and editing.</p>
  <p><img alt="Script Editor Panes" class="center" src="../../assets/Images/Asset_Editors/Editor_Scripts_Panes.png" />This is exceptionally useful for comparing two scripts or for viewing connected scripts at the same time, without needing another window or having to switch constantly between tabs.</p>
  <p>The other options in this menu are to toggle a breakpoint for use with the <a href="../../IDE_Tools/The_Debugger.htm">Debugger</a>, and to convert the GML code into GML Visual or vice versa. Note that if converting code to GML Visual, then it will <em>not </em>create individual actions for each line of code, but rather use a single code action to hold everything that was previously in the event or script.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Scripts.htm">The Script Editor</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="Feather_Features.htm">Code Completion</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Editing Code
Code Editor
Autocomplete
Split Panes
Regions
#region
#endregion
-->
  <!-- TAGS
code_editor
-->
</body>
</html>