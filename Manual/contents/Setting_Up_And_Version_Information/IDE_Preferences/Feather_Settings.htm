<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Feather</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../assets/css/default.css" type="text/css" />
  <script src="../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="The Feather Preferences" />
  <meta name="rh-index-keywords" content="Prefs - Feather Settings" />
  <meta name="search-keywords" content="Feather Settings, Feather Options, Feather Preferences, Feather Prefs" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">Feather</span></h1>
  <p>Feather provides intelligent code completion and improved syntax checking in your <a href="../../GameMaker_Language/GameMaker_Language_Index.htm">GML Code</a> scripts, along with smart refactoring options.</p>
  <p>This page contains information on the following parts of Feather:</p>
  <div class="minitoc" data-minitoc-targetid="drop-down" data-type="minitoc" style="">
    <p class="minitoc-caption" data-close-text="" data-expanded="true" data-open-text="Contents" data-type="minitoc-caption" href="#" style="">Mini TOC (placeholder)</p>
    <ol class="minitoc-list" data-from-selector="h2" data-to-selector="h4" data-type="minitoc-list" style="">
      <li>Heading</li>
    </ol>
  </div>
  <div class="seealso" data-type="seealso" style="">
    <p class="seealso-caption" data-close-text="" data-expanded="true" data-open-text="See Also" data-type="seealso-caption" style="">See Also (placeholder)</p>
    <ol class="seealso-list" data-keywords="" data-type="seealso-list" style="">
      <li><a class="seealso-list-item" href="#">Topic List</a></li>
    </ol>
  </div>
  <h2 id="s1">Base Options</h2>
  <p><img class="center" src="../../assets/Images/Setup_And_Version/Preferences/Feather/FeatherPrefs_Base.png" />The base Feather Settings contain the following options:</p>
  <ul class="colour">
    <li id="enable_feather"><strong>Enable Feather</strong>: Enable or disable Feather here. When disabled, no Feather features will be available throughout the IDE.</li>
    <li><strong>Document Parse Delay</strong>: The amount of time Feather waits to check your script after you make a change to it.</li>
    <li><strong>Compact Tooltips</strong>: Enabling this will remove certain tooltip information that appears when hovering over keywords, such as parameter descriptions for functions, ultimately making your tooltips smaller.</li>
    <li><strong>The maximum number of struct fields that are displayed by tooltips</strong>: When you hover over a struct reference, a tooltip displays the variables inside that struct, up to the number entered here.</li>
    <li><strong>Refactor references to asset name when asset is renamed in Asset Browser</strong>: Enabling this will ensure that when you rename an asset in <a data-xref="{title}" href="../../Introduction/The_Asset_Browser.htm">The Asset Browser</a>, any mentions of it in your code are also edited so those references don&#39;t break.</li>
    <li><strong>Prefer multiline JSDoc comment style when creating from Quick Fix</strong>: When you generate <a data-xref="{title}" href="../../The_Asset_Editors/Code_Editor_Properties/JSDoc_Script_Comments.htm">JSDoc Script Comments</a> for a function through the <a data-xref="{text}" href="../../The_Asset_Editors/Code_Editor_Properties/Feather_Features.htm#h1">Quick Fixes</a> menu, the generated JSDoc will either use single-line or multi-line <a href="../../GameMaker_Language/GML_Overview/Commenting_Code.htm">comments</a>, depending on this option.</li>
    <li><strong>Enable Strict Type mode</strong>: When this is enabled, Feather is stricter about ensuring you use the correct data types in your code.</li>
    <li><strong>Do not analyze project for Room Instances with auto-generated names</strong>: Enabling this will make Feather not analyse the project for newly added instances. Feather will however analyse your project again when you rename a room instance to a name that&#39;s different from its original auto-generated name.</li>
    <li><strong>Do not analyze Room Instances</strong>: When this is enabled, Feather will never analyse any Instance Creation Code or reparse the project for new room instances, even when you rename them.</li>
  </ul>
  <h2 id="s2">Highlighting</h2>
  <p><img class="center" src="../../assets/Images/Setup_And_Version/Preferences/Feather/FeatherPrefs_Highlighting.png" style="cursor: nesw-resize;" /></p>
  <p>This section contains settings for changing the colours used for underlining part of your code to mark an error, warning or suggestion:</p>
  <ul class="colour">
    <li><strong>Error Colour</strong>: The colour used for errors.</li>
    <li><strong>Warning Colour</strong>: The colour used for warnings.</li>
    <li><strong>Suggestion Colour</strong>: The colour used for suggestions.</li>
  </ul>
  <h2 id="s3">Message Severity</h2>
  <p><img class="center" src="../../assets/Images/Setup_And_Version/Preferences/Feather/FeatherPrefs_Severity.png" />This section contains all the rules Feather uses for checking your code, and lets you adjust the severity of each rule.</p>
  <h3 id="message_severity_profile">Profile</h3>
  <p>In this dropdown box you can choose between a couple of presets for the syntax checker. The following profiles are available: </p>
  <ul class="Disc">
    <li><strong>None</strong>: This profile will show no error messages.</li>
    <li><strong>SyntaxErrors</strong>: If you use this profile, syntax errors will be shown, together with what is shown in the <strong>None</strong> profile.</li>
    <li><strong>TypeErrors</strong>: This profile also shows type errors in addition to the <strong>SyntaxErrors </strong>profile.</li>
    <li><strong>All</strong>: This profile shows everything that Feather can analyze.</li>
  </ul>
  <h3 id="message_severity_gm_rules">GM* Rules</h3>
  <p>You can set a rule as an &quot;<strong>Error</strong>&quot;, &quot;<strong>Warn</strong>&quot; or &quot;<strong>Suggestion</strong>&quot;, which affects the way that rule-breaking code is reported to you in the Code Editor and the Feather Messages window.</p>
  <p>You can set a rule to &quot;<strong>Ignore</strong>&quot; which will ignore all instances of that rule being broken.</p>
  <p>All rules starting from &quot;<strong>GM1000</strong>&quot; check your syntax for possible fatal errors, and those starting from &quot;<strong>GM2000</strong>&quot; are best-practice rules that help you prevent bugs in your game.</p>
  <h2 id="s4">Naming Rules</h2>
  <p><img class="center" src="../../assets/Images/Setup_And_Version/Preferences/Feather/FeatherPrefs_NamingRules.png" />This section allows you to set naming rules for assets, variables and various other parts of <span data-keyref="GML_Code">GML Code</span>.</p>
  <p>The GM2017 rule under &quot;Message Severity&quot; must be enabled for naming rules to take effect. By default, it&#39;s disabled.</p>
  <p>The settings in this section are as follows:</p>
  <ul class="colour">
    <li><strong>Identifier Blocklist</strong>: This is a space-separated list of identifiers that will be ignored for all naming rules.<br />
      <br />
      For example, say you have a rule to use <span class="inline2">obj_</span> as a prefix for objects, but you want your objects <span class="inline2">manager</span> and <span class="inline2">network</span> to remain as-is and not use the <span class="inline2">obj_</span> prefix.<br />
      <br />
      In that case, you would write <span class="inline2">manager network</span> into the <strong>Identifier Blocklist</strong> field. Feather will ignore those objects <em>and</em> any other identifiers (variables, enums, parameters, etc.) with the same names.
    </li>
    <li><strong>&lt;identifier&gt; Naming Rule</strong>: You can set naming rules for each type of identifier in the list, such as assets, macros, enums, function parameters, variables, etc.<br />
      <br />
      Each naming rule drop-down has the following options:
      <ul>
        <li><strong>Naming Style</strong>: Choose the naming style for the identifier. Your options are:
          <ul>
            <li><strong>Unconstrained</strong>: No formatting is forced on this type of identifier.</li>
            <li><strong>UpperCamelCase</strong>: <em>MyHealth, ObjGrappleHook</em></li>
            <li><strong>lowerCamelCase</strong>: <em>myHealth, objGrappleHook</em></li>
            <li><strong>ALL_UPPER</strong>: <em>MY_HEALTH, OBJ_GRAPPLE_HOOK</em></li>
            <li><strong>all_lower</strong>: <em>my_health, obj_grapple_hook</em></li>
          </ul>
        </li>
        <li><strong>Prefix</strong>: Text that should appear before the identifier name, which may be <span class="inline2">obj_</span> for objects, <span class="inline2">_</span> for local variables, etc. depending on your preferences.</li>
        <li><strong>Suffix</strong>: Text that should appear after the identifier name.</li>
        <li><strong>Preserve trailing and leading underscores</strong>: If enabled, preserves underscores around your asset&#39;s name even after suggestions.<br />
          <br />
          With this, you can use asset names such as <span class="inline2">__objCamera</span>, keeping any leading and trailing underscores where they are.
        </li>
      </ul>
    </li>
  </ul>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../IDE_Preferences.htm">IDE Preferences</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="Marketplace_Preferences.htm">Marketplace Preferences</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Preferences - Feather Settings
-->
  <!-- TAGS
prefs_feather
-->
</body>
</html>