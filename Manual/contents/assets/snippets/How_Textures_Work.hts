<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <meta name="topic-comment" content="This is placed on the main Texture Groups page and the Dynamic Textures page" />
  <title>How_Textures_Work</title>
  <link rel="stylesheet" type="text/css" href="../css/default.css" />
</head>
<body>
  <p>A Texture Group is loaded into RAM when the game starts, unless it&#39;s a <a href="../../Settings/Texture_Information/Dynamic_Textures.htm">Dynamic Texture Group</a>, which is loaded later.</p>
  <p>While in RAM, the Texture Group stays compressed, as it was on disk.</p>
  <p>When an image from a Texture Group is drawn or one of the <a href="../../GameMaker_Language/GML_Reference/Drawing/Textures/texture_prefetch.htm">pre-fetch</a> functions is run, all texture pages of the Texture Group are loaded into <a class="glossterm" data-glossterm="VRAM" href="#">VRAM</a>. For most texture group formats the texture is first decompressed before being loaded into VRAM. If you&#39;re using a <strong>Custom</strong> texture group format, however, the texture is decompressed in real time on the GPU.</p>
  <p class="note"><span data-conref="Tag_note.hts"> </span>Â Texture decompression is asynchronous on all platforms except GX.games, which might cause stutters as textures are decompressed in-game. To avoid this, ensure your textures are prefetched during loading screens or other inactive parts of your game.</p>
  <p>You can <a href="../../GameMaker_Language/GML_Reference/Drawing/Textures/texture_flush.htm">flush</a> a Texture Group to remove it from VRAM (this doesn&#39;t remove them from RAM).</p>
</body>
</html>