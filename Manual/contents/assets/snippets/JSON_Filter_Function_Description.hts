<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <meta name="topic-comment" content="" />
  <title>JSON_Filter_Function_Description</title>
  <link rel="stylesheet" type="text/css" href="../css/default.css" />
</head>
<body>
  <h3>Filter Function <span data-conref="Tag_optional.hts"> </span></h3>
  <p>The function optionally takes a <span data-keyref="Type_Function"><a href="../../GameMaker_Language/GML_Overview/Script_Functions.htm" target="_blank">Function</a></span>, which runs once for each value in the structure, including all nested structs/arrays and all the values inside them.</p>
  <p>It takes two arguments <span class="inline2">(key, value)</span> where <span class="inline2">key</span> is the struct key name (<span data-keyref="Type_String"><a href="../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">String</a></span>) or array index (<span data-keyref="Type_Real"><a href="../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span>), and <span class="inline2">value</span> is what&#39;s stored in that key/index.</p>
  <p>The filter function must always return a value. It can return a new value, which replaces the key&#39;s value in the final converted format returned by <span class="inline3_func"><span data-field="title" data-format="lower-alpha">json_filter_function_description</span></span>. If no new value should be returned for a particular key, the function must return the original <span class="inline2">value</span>.</p>
  <p class="note"><span data-conref="Tag_note.hts"> </span> When overriding a key&#39;s value in the filter function (using <a data-xref="{title}" href="../../GameMaker_Language/GML_Overview/Language_Features/return.htm">return</a>), make sure you check its type first, as the filter function runs for the root structure and any nested structures as well, meaning accidentally overriding them will result in a broken final structure. See <strong>Example 3</strong> at the bottom.</p>
</body>
</html>