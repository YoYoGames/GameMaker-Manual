<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>new</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the new function" />
  <meta name="rh-index-keywords" content="new" />
  <meta name="search-keywords" content="new" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">new</span></h1>
  <p>The <span class="inline">new</span> operator can be used to create a struct with a function which is called with the given arguments. The function can then populate the struct with variables from the arguments - much like the create event of an instance will set the initial variables for the instance - and then the <span class="inline">new</span> operator will return the struct. Before using this operator it is important to note that the function given <i>must be flagged as a <span class="inline">constructor</span> function</i> otherwise the <span class="inline">new</span> operator will not create the struct (the code example below shows this, and for more information, please see the page on <a href="../Structs.htm">Structs</a>).</p>
  <p class="note"><span class="note">NOTE</span> You can check a struct to find out which function was used to create it using the runtime function <a href="../../GML_Reference/Variable_Functions/instanceof.htm"><span class="inline">instanceof()</span></a>.</p>
  <p>This operator has the following syntax:</p>
  <p class="code"><span>&lt;variable&gt; = </span>new &lt;function&gt; (&lt;argument&gt;, &lt;argument&gt;, ...);</p>
  <p>When you use the new operator along with a function, it will return a struct reference which is stored in the given variable, permitting you to access the struct and any variables that were created within it by the function.</p>
  <p>The following example shows a function that has been defined to use as a constructor:</p>
  <p class="code">function init_struct(_a, _b, _c) constructor<br />
    {<br />
        a = _a;<br />
        b = _b;<br />
        c = _c;<br />
    }</p>
  <p>This function can then be used along with the <span class="inline">new</span> operator to create a struct and populate it with the variables set to the values of the arguments used in the function, like this:</p>
  <p class="code">mystruct = new init_struct(10, 100, &quot;Hello World&quot;);</p>
  <p>It is important to note that calling new on any function that has <em>not</em> been flagged as a constructor will cause a <a href="../../../Additional_Information/Errors/Runner_Errors.htm">runtime exception</a>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Language_Features.htm">Language Features</a></div>
        <div style="float:right">Next: <a href="delete.htm">delete</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
new
-->
  <!-- TAGS
new
-->
</body>
</html>