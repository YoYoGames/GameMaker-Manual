<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>exit</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the exit function" />
  <meta name="rh-index-keywords" content="exit" />
  <meta name="search-keywords" content="exit" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>The <span class="inline">exit</span> statement has the following syntax:</p>
  <p class="code">exit;</p>
  <p><span class="inline">exit</span> simply ends the execution of the current <a href="../Script_Functions.htm">script function</a>, <a href="../Method_Variables.htm">method</a>, or <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm">event</a>. Note there is a slight difference in use here depending on the scope:</p>
  <ul class="colour">
    <li>If you use <span class="inline">exit</span> in a script function or method it will simply exit the function and return to the code that called the function.</li>
    <li>If you use <span class="inline">exit</span> in a code block within an object&#39;s event, it will exit <i>the entire event</i> even if there are various separate code blocks after <span class="inline">exit</span> has been called.</li>
    <li>If you use <span class="inline">exit</span> in a parent event and call that event using <a href="../../GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><span class="inline">event_inherited()</span></a> in a child object, only the parent event will exit and the child&#39;s event (which called <span class="inline">event_inherited()</span>) will continue.</li>
  </ul>
  <p>When used in an event, <span class="inline">exit</span> is typically used to avoid an instance running any further code when a specific condition has been met (or not). The code below outlines an example of how it could be used, in this case within a Collision Event, although it can be used in any event.</p>
  <p class="code">if (!visible)<br />
    {<br />
        exit;<br />
    }<br />
    <br />
    other.hp -= attack;<br />
    other.coins -= 4;<br />
    coins += 4;
  </p>
  <p>The above code checks if the current instance is not visible, in that case it exits the code block, otherwise it goes ahead and runs the rest of the code.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> It does not end the execution of the game. For that you need to use the function <span style="font-size:1px;"><a href="../../GML_Reference/General_Game_Control/game_end.htm"><span class="inline">game_end()</span></a></span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Language_Features.htm">Language Features</a></div>
        <div style="float:right">Next: <a href="with.htm">with</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
exit
-->
  <!-- TAGS
exit
-->
</body>
</html>