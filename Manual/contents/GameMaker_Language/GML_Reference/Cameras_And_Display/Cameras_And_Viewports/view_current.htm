<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>view_current</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for view_current" />
  <meta name="rh-index-keywords" content="view_current" />
  <meta name="search-keywords" content="view_current" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">view_current</span></h1>
  <p>This <b>read-only</b> variable holds the index of the current viewport being rendered, or 0 outside of the regular <a data-xref="{title}" href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">Draw Events</a>.</p>
  <p>The value will change during the Draw event when you have various views as the Draw event is called <i>once for each viewport in succession</i>. So when (for example) you are using viewport[0] and viewport[1] in your game room, the <a data-xref="{title}" href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">Draw Events</a> for <i>ALL</i> instances will be run twice, once for each port, and with this variable you can check to see what view is currently being drawn. In general, this is used to only render specific details to a single viewport when multiple are visible in the room at the same time. See the example code below.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">view_current</span></p>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span> (viewport index from 0 to 7 in the regular Draw events, 0 otherwise)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">if (view_current == 0)<br />
    {<br />
        var _xx = camera_get_view_x(view_camera[0]);<br />
        var _yy = camera_get_view_y(view_camera[0]);<br />
        draw_text(_xx + 32, _yy + 32, &quot;Player 1&quot;);<br />
    }<br />
    else<br />
    {<br />
        var _xx = camera_get_view_x(view_camera[1]);<br />
        var _yy = camera_get_view_y(view_camera[1]);<br />
        draw_text(_xx + 32, _yy + 32, &quot;Player 2&quot;);<br />
    }</p>
  <p>The above code checks to see which view is currently being drawn and then draws a different text to each view based on the return value.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Cameras_And_View_Ports.htm">Cameras And Viewports</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="view_enabled.htm">view_enabled</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2025 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
view_current
-->
  <!-- TAGS
view_current
-->
</body>
</html>