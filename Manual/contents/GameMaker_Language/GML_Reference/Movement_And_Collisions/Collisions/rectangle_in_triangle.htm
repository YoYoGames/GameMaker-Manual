<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>rectangle_in_triangle</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion rectangle_in_triangle" />
  <meta name="rh-index-keywords" content="rectangle_in_triangle" />
  <meta name="search-keywords" content="rectangle_in_triangle" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>rectangle_in_triangle</h1>
  <p>This function will check a rectangular area that you define to see if it is either not in collision, completely within the destination bounds, or if it is simply touching, a defined triangular area. If they are not touching at all the function will return 0, if the source is completely within the destination it will return 1, and if they are simply overlapping then it will return 2. The image below illustrates this:</p>
  <p><img alt="Rectangle triangle collision example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_triangle.png" /></p>
  <h4>Syntax:</h4>
  <p class="code">rectangle_in_triangle(sx1, sy1, sx2, sy2, dx1, dy1, dx2, dy2, dx3, dy3);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>sx1</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the left side of the source rectangle.</td>
     </tr>
      <tr>
        <td>sy1</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the top side of the source rectangle.</td>
     </tr>
      <tr>
        <td>sx2</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the right side of the source rectangle.</td>
     </tr>
      <tr>
        <td>sy2</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the bottom side of the source rectangle.</td>
     </tr>
      <tr>
        <td>x1</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the first side of the triangle to check.</td>
     </tr>
      <tr>
        <td>y1</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the first side of the triangle to check.</td>
     </tr>
      <tr>
        <td>x2</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the second side of the triangle to check.</td>
     </tr>
      <tr>
        <td>y2</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the second side of the triangle to check.</td>
     </tr>
      <tr>
        <td>x3</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the third side of the triangle to check.</td>
     </tr>
      <tr>
        <td>y3</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the third side of the triangle to check.</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var inst = instance_nearest(x, y, obj_Player);<br />
    if (instance_exists(inst)) <br />
    {<br />
        var x1 = x + lengthdir_x(100, image_angle - 45);<br />
        var y1 = y + lengthdir_y(100, image_angle - 45);<br />
        var x2 = x + lengthdir_x(100, image_angle + 45);<br />
        var y2 = y + lengthdir_y(100, image_angle + 45);<br />
        if (rectangle_in_triangle(inst.bbox_left, inst.bbox_top, inst.bbox_right, inst.bbox_bottom, x, y, x1, y1, x2, y2) == 1) <br />
        {<br />
            can_see = true;<br />
        }<br />
    }</p>
  <p>The above code uses the <span class="inline">rectangle_in_triangle</span> function as a &quot;cone of vision&quot; to check for an instance of &quot;obj_player&quot;. If the full bounding box is within the given triangular area, it will set a variable to <span class="inline">true</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Collisions.htm">Collisions</a></div>
        <div style="float:right">Next: <a href="rectangle_in_circle.htm">rectangle_in_circle</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
rectangle_in_triangle
-->
  <!-- TAGS
rectangle_in_triangle
-->
</body>
</html>