<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>rectangle_in_circle</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page that gives an overview of the funtion rectangle_in_circle" />
  <meta name="rh-index-keywords" content="rectangle_in_circle" />
  <meta name="search-keywords" content="rectangle_in_circle" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>rectangle_in_circle</h1>
  <p>This function will check a rectangular area that you define to see if it is either not in collision, completely within the destination bounds, or if it is simply touching, a defined circular area. If they are not touching at all the function will return 0, if the source is completely within the destination it will return 1, and if they are simply overlapping then it will return 2. The image below illustrates this:</p>
  <p><img alt="Rectangle circle collision example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_circle.png" /></p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">rectangle_in_circle(sx1, sy1, sx2, sy2, x, y, rad);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>sx1</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the left side of the source rectangle.</td>
     </tr>
      <tr>
        <td>sy1</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the top side of the source rectangle.</td>
     </tr>
      <tr>
        <td>sx2</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the right side of the source rectangle.</td>
     </tr>
      <tr>
        <td>sy2</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the bottom side of the source rectangle.</td>
     </tr>
      <tr>
        <td>x</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the centre of the circle</td>
     </tr>
      <tr>
        <td>y</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the centre of the circle.</td>
     </tr>
      <tr>
        <td>rad</td><td><span data-keyref="Type_Real"></span></td>
        <td>The radius around the center point in which to check for a collision.</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">inst = instance_nearest(x, y, obj_Bullet);<br />
    if (instance_exists(inst)) <br />
    {<br />
        if (rectangle_in_circle(inst.x - 5, inst.y - 5, inst.x + 5, inst.y + 5, x, y - 25, 20) &gt; 0) <br />
        {<br />
            hit = true;<br />
        }<br />
    }</p>
  <p>The above code uses the <span class="inline">rectangle_in_circle</span> function to check for a collision within a circular area and the rectangle around a found instance. If there is a collision (either an edge overlap or encompassed) then a variable will be set to <span class="inline">true</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Collisions.htm">Collisions</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="Collision_Compatibility_Mode.htm">Collision Compatibility Mode</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
rectangle_in_circle
-->
  <!-- TAGS
rectangle_in_circle
-->
</body>
</html>