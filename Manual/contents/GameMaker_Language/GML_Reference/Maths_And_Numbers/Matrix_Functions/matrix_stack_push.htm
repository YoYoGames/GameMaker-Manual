<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>matrix_stack_push</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for matrix_stack_push" />
  <meta name="rh-index-keywords" content="matrix_stack_push" />
  <meta name="search-keywords" content="matrix_stack_push" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>This function is used to push a new matrix to the top of the current matrix stack. It will first multiply the given matrix with the matrix currently at the top of the stack, and then push the resulting matrix to the stack.</p>
  <div data-conref="../../../../assets/snippets/Note_Matrix_Stack_Size.hts"> </div>
  <p>This function is useful for applying multiple matrix transformations to your visuals without having to manually multiply various matrices together.</p>
  <p>For example, you can have a base matrix pushed onto the stack that draws graphics into a certain rectangular area (say, a window). After drawing some graphics using that matrix, you can push another matrix onto the stack for drawing graphics inside a sub-area (like a button in the window). After drawing something in that sub-area, you can call <span class="inline"><a href="matrix_stack_pop.htm">matrix_stack_pop()</a></span> to remove its matrix from the stack and continue drawing visuals into the main window area.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">matrix_stack_push(matrix);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>matrix</td>
        <td><span data-keyref="Type_Array_Matrix"><a href="Matrix_Functions.htm" target="_blank">Matrix Array</a></span></td>
        <td>The matrix to push to the stack</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var m1 = matrix_build(66, 145, 0, 0, 0, 0, 1, 1, 1);<br />
    var m2 = matrix_build(0, 0, 0, 0, 0, image_angle * 6, 1, 1, 1) ;<br />
    matrix_stack_push(m1);<br />
    matrix_stack_push(m2);<br />
    matrix_set(matrix_world, matrix_stack_top());<br />
    draw_sprite(spr_tyre, 0, 0, 0);<br />
    matrix_stack_pop();<br />
    matrix_stack_pop();</p>
  <p>The above code will build two new matrices and then push them onto the matrix stack. The world matrix is then set to the top of the stack, a sprite is drawn and the transforms are then popped from the stack.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Matrix_Functions.htm">Matrix Functions</a></div>
        <div style="float:right">Next: <a href="matrix_stack_pop.htm">matrix_stack_pop</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
matrix_stack_push
-->
  <!-- TAGS
matrix_stack_push
-->
</body>
</html>