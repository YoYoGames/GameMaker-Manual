<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>math_set_epsilon</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for math_set_epsilon" />
  <meta name="rh-index-keywords" content="math_set_epsilon" />
  <meta name="search-keywords" content="math_set_epsilon" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>math_set_epsilon</h1>
  <p>The epsilon is used to determine whether two numbers subject to rounding errors are close enough to be considered &quot;equal&quot;. The default epsilon is <span class="inline2">0.00001</span>.</p>
  <p>This is useful when dealing with floating point maths as it can reduce the &quot;rounding errors&quot; that make certain operations return values that appear incorrect or contrary to what we expect. For example, we may have added a value to the image index of a sprite and expect the result to be a single integer (5), but due to the nature of floating point maths, the actual final value ends up being something like 5.000002, so when we have the following check:</p>
  <p class="code">if (image_index == 5) <br />
    {<br />
        //do something<br />
    }</p>
  <p>The code does not behave as expected and returns <span class="inline">false</span>. However, with the epsilon set to 0.00001, the <span class="inline">image_index</span> value is rounded to the nearest real number that is +/- 0.000001 of the original value, making the above comparison return true.</p>
  <p>Floating point calculations may behave differently depending on the platform your game is running on. The default epsilon of <span class="inline2">0.00001</span> provides a safe range for rounding errors across different platforms.</p>
  <p>The epsilon value will be used for all the following integer <a href="../../../GML_Overview/Expressions_And_Operators.htm">operators</a>:</p>
  <ul class="colour">
    <li><span class="inline">&lt; </span>: Less than</li>
    <li><span class="inline">&gt; </span>: Greater than</li>
    <li><span class="inline">== </span>: Equal to</li>
    <li><span class="inline">&lt;= </span>: Less than or equal to</li>
    <li><span class="inline">&gt;= </span>: Greater than or equal to</li>
    <li><span class="inline">!= </span>: Not equal to</li>
  </ul>
  <p>Note that setting an epsilon value of 0 will disable all rounding, and using a value of 1 will give an error.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">math_set_epsilon(epsilon);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>epsilon</td>
        <td><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The new epsilon value (from 0 to 0.999999999).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">math_set_epsilon(0.0001);</p>
  <p>This will set the epsilon value for all further floating point operations.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Number_Functions.htm">Number Functions</a></div>
        <div style="float:right">Next: <a href="math_get_epsilon.htm">math_get_epsilon</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
math_set_epsilon
-->
  <!-- TAGS
math_set_epsilon
-->
</body>
</html>