<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>


  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>point_distance_3d</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for point_distance_3d" />
  <meta name="rh-index-keywords" content="point_distance_3d" />
  <meta name="search-keywords" content="point_distance_3d" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>This function takes the supplied components of the vector and returns the length (distance) of the vector. It works in exactly the same way as <a href="point_distance.htm"><span class="inline">point_distance()</span></a> but with the addition of factoring in the z value (depth) for use in 3D space.</p>
  <p> </p>
  <h4><b>Syntax:</b></h4>
  <p class="code">point_distance_3d(x1, y1, z1, x2, y2, z2);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>x1</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the first component of the vector</td>
     </tr>
      <tr>
        <td>y1</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the first component of the vector</td>
     </tr>
      <tr>
        <td>z1</td><td><span data-keyref="Type_Real"></span></td>
        <td>The z coordinate of the first component of the vector</td>
     </tr>
      <tr>
        <td>x2</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the second component of the vector</td>
     </tr>
      <tr>
        <td>y2</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the second component of the vector</td>
     </tr>
      <tr>
        <td>z2</td><td><span data-keyref="Type_Real"></span></td>
        <td>The z coordinate of the second component of the vector</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var inst, ex, ey, ez;<br />
    inst = instance_nearest(x, y, enemy);<br />
    if (instance_exists(inst))<br />
    {<br />
        ex = inst.x;<br />
        ey = inst.y;<br />
        ez = inst.z;<br />
        if (point_distance_3d(x, y, z, ex, ey, ez) &lt; 200) <br />
        {<br />
            instance_create_layer(x, y, &quot;Bullets&quot;, obj_Missile)<br />
        }<br />
    }</p>
  <p>The above code will get the x and y and z coordinates of the nearest enemy and then use them to check the distance (length) of the vector formed by them and the player coordinates. If the value is less than 200, the player object will create an instance of &quot;obj_Missile&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Angles_And_Distance.htm">Angles And Distance</a></div>
        <div style="float:right">Next: <a href="distance_to_object.htm">distance_to_object</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
point_distance_3d
-->
  <!-- TAGS
point_distance_3d
-->
</body>
</html>