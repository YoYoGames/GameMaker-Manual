<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>flexpanel_calculate_layout</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="flexpanel_calculate_layout" />
  <meta name="search-keywords" content="flexpanel_calculate_layout" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">flexpanel_calculate_layout</span></h1>
  <p>This function calculates the layout data for the given node and all of its children. The calculated layouts are returned with <span class="inline3_func"><a data-xref="{title}" href="flexpanel_node_layout_get_position.htm">flexpanel_node_layout_get_position</a></span>.</p>
  <p>It is required that you run this function at least once before using the layout positions of a node, otherwise all positions for the node (and its child nodes) will be 0. You may run this function again for re-calculating layouts in case of a resolution change.</p>
  <p>The function takes a <span class="inline2">width</span> and a <span class="inline2">height</span> where the root node is &quot;placed&quot; for layout calculations. For example, if the root node has a <a href="../Flex_Panels_Styling.htm">width</a> of <span class="inline2">&quot;100%&quot;</span>, and the width you pass to this function is <span class="inline2">560</span>, then the width of that root node canvas becomes 560 pixels.</p>
  <p>You can see these dimensions as the final resolution of the canvas where your layout is active, e.g. when making a full-screen interface, these dimensions would be equal to your game window&#39;s size, or for an interface that is housed inside a small window within your game, they would be the dimensions of that window.</p>
  <p>The width or height can be <span class="inline2"><span data-keyref="Type_Undefined"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">undefined</a></span></span>, in which case it will extend indefinitely.</p>
  <p>You must choose whether the <a href="../Flex_Panels_Styling.htm#layout">layout direction</a> is left-to-right or right-to-left by passing a <span data-keyref="Type_Const_FlexPanel_Direction"><a href="Styling_Functions/flexpanel_node_style_set_direction.htm" target="_blank">Flex Panel Layout Direction Constant</a></span>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">flexpanel_calculate_layout</span>(root, width, height, direction);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>root</td>
        <td><span data-keyref="Type_ID_FlexPanel_Node"><a href="flexpanel_create_node.htm" target="_blank">Flex Panel Node</a></span></td>
        <td>The node for which calculations are performed</td>
      </tr>
      <tr>
        <td>width</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span> or <span data-keyref="Type_Undefined"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">undefined</a></span></td>
        <td>The width that the root node is calculated against</td>
      </tr>
      <tr>
        <td>height</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span> or <span data-keyref="Type_Undefined"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">undefined</a></span></td>
        <td>The height that the root node is calculated against</td>
      </tr>
      <tr>
        <td>direction</td>
        <td><span data-keyref="Type_Const_FlexPanel_Direction"><a href="Styling_Functions/flexpanel_node_style_set_direction.htm" target="_blank">Flex Panel Layout Direction Constant</a></span></td>
        <td>The direction to use for all nodes</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">flexpanel_calculate_layout(n_root, room_width, room_height, flexpanel_direction.LTR);</p>
  <p>This calculates the layout for the node <span class="inline2">n_root</span> within the room dimensions, using a left-to-right direction.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="section_index.htm">Flex Panel Functions</a></div>
        <div>Next: <a data-xref="{title}" href="flexpanel_node_set_name.htm">flexpanel_node_set_name</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
flexpanel_calculate_layout
-->
  <!-- TAGS
flexpanel_calculate_layout
-->
</body>
</html>