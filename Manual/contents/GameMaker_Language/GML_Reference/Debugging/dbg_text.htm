<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>dbg_text</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="dbg_text" />
  <meta name="search-keywords" content="dbg_text" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">dbg_text</span></h1>
  <p>This function creates a read-only text label within the current debug section. You can use this to explain surrounding controls.</p>
  <p>Both a <span data-keyref="Type_String"><a href="../../GML_Overview/Data_Types.htm" target="_blank">String</a></span> and a <span data-keyref="Type_DbgRef"><a href="../Variable_Functions/ref_create.htm" target="_blank">Reference</a></span> to a variable containing a string can be passed to the function. The text can be multiline.</p>
  <p>You can also pass an array containing items of either type. The function will create a label for each item in the array.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> See <span class="inline3_func"><a data-xref="{title}" href="dbg_text_input.htm">dbg_text_input</a></span> for a control that allows modifiable text.</p>
  <div data-conref="../../../assets/snippets/Note_Debug_Control_Single_Column.hts"> </div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">dbg_text</span>(ref_or_string_or_array);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>ref_or_string_or_array</td>
        <td><span data-keyref="Type_DbgRef"><a href="../Variable_Functions/ref_create.htm" target="_blank">Reference</a></span> or <span data-keyref="Type_String"><a href="../../GML_Overview/Data_Types.htm" target="_blank">String</a></span> or <span data-keyref="Type_Array"><a href="../../GML_Overview/Arrays.htm" target="_blank">Array</a></span></td>
        <td>A string or a reference to a variable that can be converted to string, returned by <span class="inline3_func"><a data-xref="{title}" href="../Variable_Functions/ref_create.htm">ref_create</a></span>, or an array containing strings or references.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code_heading">Create Event</p>
  <p class="code">text = &quot;text&quot;;<br />
    ref_to_text = ref_create(self, &quot;text&quot;);<br />
    <span data-field="title" data-format="default">dbg_text</span>(ref_to_text);<br />
    <span data-field="title" data-format="default">dbg_text</span>(text);<br />
    <span data-field="title" data-format="default">dbg_text</span>(&quot;More text&quot;);
  </p>
  <p>The above code assigns some text to an <a href="../../GML_Overview/Variables/Instance_Variables.htm">instance variable</a> <span class="inline2">text</span>. It then creates a reference to that variable using <span class="inline3_func"><a data-xref="{title}" href="../Variable_Functions/ref_create.htm">ref_create</a></span> and stores it in <span class="inline2">ref_to_text</span>. Next, it adds three text controls to a new debug view <span data-keyref="DebugView_Name_Default">&quot;Default&quot;</span> that will be created, under a new section <span data-keyref="DebugSection_Name_Default">&quot;Default&quot;</span>. The three calls to <span class="inline3_func"><span data-field="title" data-format="default">dbg_text</span></span> add a text entry in three different ways: the first provides the reference to the <span class="inline2">text</span> variable, the second passes the variable <span class="inline2">text</span> itself (which assigns the <em>value</em> the variable currently has) and the last passes a string directly.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="The_Debug_Overlay.htm">The Debug Overlay</a></div>
        <div>Next: <a data-xref="{title}" href="dbg_text_input.htm">dbg_text_input</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
dbg_text
-->
  <!-- TAGS
dbg_text
-->
</body>
</html>