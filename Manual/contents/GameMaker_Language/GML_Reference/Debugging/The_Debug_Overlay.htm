<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <title>The Debug Overlay</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <meta name="rh-authors" content="Bart Teunis" />
  <meta name="topic-comment" content="Reference page for the debug overlay" />
  <meta name="template" content="../../../assets/masterpages/Manual_Page.htt" />
  <meta name="search-keywords" content="debug,overlay" />
  <meta name="rh-index-keywords" content="The Debug Overlay" />
</head>
<body>
  <h1><span data-field="title" data-format="default">The Debug Overlay</span></h1>
  <p><span data-field="title" data-format="default">The Debug Overlay</span> is an in-game overlay that displays various real-time debug information about your game.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> The Debug Overlay is not supported on the HTML5 target platform.</p>
  <p>It includes the following three windows by default: <strong>FPS</strong> (open by default), <strong>Log</strong>, and <strong>Audio</strong>. Additionally, it displays the <span data-keyref="GameMaker Name">GameMaker</span> version in the top-right corner, along with the version and name of the project.</p>
  <p><span data-field="title" data-format="default">The Debug Overlay</span> can be accessed using the functions <span class="inline3_func"><a data-xref="{title}" href="show_debug_overlay.htm">show_debug_overlay</a></span> and <span class="inline3_func"><a data-xref="{title}" href="show_debug_log.htm">show_debug_log</a></span>, the first opens the overlay with the <strong>FPS</strong> window open, the second with the <strong>Log</strong> window open.</p>
  <p>You can define your own, custom debug views in <span data-field="title" data-format="default">The Debug Overlay</span> using <span class="inline3_func"><a data-xref="{title}" href="dbg_view.htm">dbg_view</a></span>. Debug views can have sections added to them using <span class="inline3_func"><a data-xref="{title}" href="dbg_section.htm">dbg_section</a></span>, which you can add controls to such as sliders, string input boxes, etc. These allow you to change the values of variables through references created using <span class="inline3_func"><a data-xref="{title}" href="../Variable_Functions/ref_create.htm">ref_create</a></span>. The <strong>DebugView</strong> option under the <strong>Debug</strong> menu determines if custom views are visible. All debug views are listed under the <strong>Views</strong> menu and can have their visibility toggled here.</p>
  <p><img class="center" height="381" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_1.png" style="cursor: nesw-resize;" width="1322" /></p>
  <h3>Dragging and Docking Windows</h3>
  <p>All windows of the Debug Overlay can be dragged by clicking and holding <span data-conref="../../../assets/snippets/Icon_Mouse_LMB_Alt.hts"> </span> on the title bar or by performing the same action anywhere else on empty window space.</p>
  <figure><img class="center" height="432" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_docking_builtin_merged.png" width="1175" />
    <figcaption>The built-in windows moved into a single window</figcaption>
  </figure>
  <p>Clicking <span data-conref="../../../assets/snippets/Icon_Mouse_LMB_Alt.hts"> </span> on the title bar and dragging the window allows you to &quot;dock&quot; the window to other windows in a variety of ways: </p>
  <ul class="colour">
    <li>Dock it while splitting the other window in half.</li>
    <li>Dock it as a tabbed window without splitting the other window.</li>
  </ul>
  <p>This works with the built-in windows as well as with custom debug views that you create. The window that you drag onto another one is always added as a tabbed window. Dragging the tab moves a window back into a separate window.</p>
  <p>See the <a href="https://github.com/ocornut/imgui/wiki/Docking#usage-guide">ImGUI documentation on Docking</a> for more information.</p>
  <h2 id="debug">Debug</h2>
  <h3 id="fps">FPS</h3>
  <p>The title bar for this window shows the current number of texture swaps, the number of vertex batches, the current FPS (<span class="inline2"><a data-xref="{title}" href="fps_real.htm">fps_real</a></span>) and a bar showing the stacked time values: </p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_fps.png" /></p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> Texture swaps and vertex batches will never be zero and will normally show values of 2 or 3, since even with an empty room and no objects <span data-keyref="GameMaker Name">GameMaker</span> still has to draw and batch things.</p>
  <p>Inside this window, you have two sections: a graph and a bar.</p>
  <p>The graph displays the FPS (<span class="inline2"><a data-xref="{title}" href="fps_real.htm">fps_real</a></span>) by default, where the horizontal axis is the amount of time passed since the FPS menu was opened, and the vertical axis is the frame time in seconds.</p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_graph_1.png" /></p>
  <p>The <strong>FrameTime</strong> value is the time each frame took to process, in seconds. This value should be less than the time a single frame can take. If the game speed is e.g. set to 60FPS, then every frame can take at most 1/60 = 0.0166... seconds. If it takes any longer than that, it means that <span data-keyref="GameMaker Name">GameMaker</span> is still processing the current frame while it should already be processing the next one. The (real) FPS will drop below the game speed as a result.</p>
  <p>Enable the <strong>Stacked</strong> option to display the time values for specific types of processing that <span data-keyref="GameMaker Name">GameMaker</span> does: </p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_graph_2.png" /></p>
  <p>These are: </p>
  <ul class="colour">
    <li><strong>Garbage Collector</strong>: Time spent by the <a href="../Garbage_Collection/Garbage_Collection.htm">Garbage Collector</a></li>
    <li><strong>IO&amp;YoYo</strong>: Time spent for input/output (<a href="../Game_Input/Keyboard_Input/Keyboard_Input.htm">keyboard</a>, <a href="../Game_Input/Mouse_Input/Mouse_Input.htm">mouse</a>, <a href="../Game_Input/GamePad_Input/Gamepad_Input.htm">gamepads</a>, <a href="../Networking/Networking.htm">networking</a>), and some OS processing</li>
    <li><strong>Update</strong>: Time spent in the update loop of the game (Step events, etc.)</li>
    <li><strong>Draw</strong>: Time spent drawing (Draw events)</li>
    <li><strong>Text</strong>: Time spent by the text in <a data-xref="{title}" href="../Asset_Management/Sequences/Sequences.htm">Sequences</a></li>
    <li><strong>Scroll</strong>: Time spent processing scrolling backgrounds in <a href="../Asset_Management/Rooms/Rooms.htm">rooms</a>, and <a href="../Drawing/Videos/Videos.htm">video</a></li>
  </ul>
  <p>You can click on each value in the top-right corner (next to their coloured boxes) to toggle their visibilities.</p>
  <p>The <strong>History</strong> bar controls the horizontal range that is visible in the graph. You can set this between 1 and 30 seconds.</p>
  <h3 id="log">Log</h3>
  <p>This window displays the Output Log, same as the one that appears in the IDE under <a data-xref="{title}" href="../../../Introduction/The_Output_Window.htm">The Output Window</a>.</p>
  <p>All debug messages that you show using <span class="inline3_func"><a data-xref="{title}" href="show_debug_message.htm">show_debug_message</a></span> and <span class="inline3_func"><a data-xref="{title}" href="../Strings/show_debug_message_ext.htm">show_debug_message_ext</a></span> are also shown here.</p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_console.png" /></p>
  <p>The text field at the bottom of the window allows you to provide basic console input: </p>
  <ul class="Disc">
    <li>You can write a global variable name to print its value, or a global function name to execute it, with space-separated arguments (e.g. <span class="inline2">func arg0 arg1</span>)</li>
    <li>The console stores a history of your last commands. Press the Up and Down arrow keys to go through the previous commands.</li>
    <li>The console also supports autocomplete that you can access by pressing the Tab key, which will be shown when the cursor is on a word with more than 2 characters. Up and Down keys select the option in the dropdown box and Escape closes the autocomplete: </li>
  </ul>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_console_autocomplete.png" /></p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> While you type commands in the console input, <span data-keyref="GameMaker Name">GameMaker</span> continues to trigger events based on the <a data-xref="{title}" href="../Game_Input/Keyboard_Input/Keyboard_Input.htm">Keyboard Input</a> that you provide, meaning your game still receives input.</p>
  <p>The input follows a couple rules: </p>
  <ul class="colour">
    <li>If the first word is a global function, then it will be executed with the arguments given.</li>
    <li>If the first word is a built-in variable, then its value is printed.</li>
  </ul>
  <p>All subsequent words following the first word are converted into values that are passed as arguments to the function, as follows: </p>
  <ul>
    <li>First it tries to interpret it as a global scope value, if one is found, it is passed in as an argument</li>
    <li>If it is an asset name then the reference to that asset is passed</li>
    <li><span class="inline2">true</span> and <span class="inline2">false</span> can be used for boolean values</li>
    <li>If it is a number then a real number is passed</li>
    <li>Any text surrounded by double quotes <span class="inline2">&quot;&quot;</span> is treated as a string</li>
    <li>Anything else not following the above rule is treated as a string</li>
  </ul>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> All scripts are executed within the scope of the <a data-xref="{bookmarkText}" href="../../GML_Overview/Variables/Global_Variables.htm#global">global</a> struct.</p>
  <p>A simple command looks like this: </p>
  <p class="code">show_debug_message &quot;Hello World!&quot;</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_warning.hts"> </span> No parentheses should be added here. If you add them here like you normally would in <span data-keyref="GML_Code">GML Code</span>, the function won&#39;t be executed and a line <span class="inline2">ERROR : unknown command</span> will be shown in the output.</p>
  <p>Finally, you can <strong>Clear</strong> the output and <strong>Copy</strong> its contents to the clipboard.</p>
  <h3 id="audio">Audio</h3>
  <p>This window shows debug information related to the audio playing in your game.</p>
  <p>The graph displays the most recent output buffer on the audio thread. This is the output signal that <span data-keyref="GameMaker Name">GameMaker</span> sends to the audio device, after all mixing and processing.</p>
  <p>The horizontal axis in this graph is the frame number in the buffer, and the vertical axis is the amplitude, typically ranging between -1 and 1.</p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_audio.png" />The list at the bottom shows you each sound &quot;source&quot; that is currently playing, or may potentially play a sound. The columns display the following values:</p>
  <ul class="colour">
    <li><strong>source</strong>: The ID of the source</li>
    <li><strong>buffer</strong>: The ID of the buffer attached to this source</li>
    <li><strong>numProcessed</strong>: The number of queued buffers that the source has played through (which gets cleaned up at certain points)</li>
    <li><strong>numQueued</strong>: The number of buffers that are queued on this source (including processed ones)</li>
    <li><strong>gain</strong>: The source gain as a 16-bit value (0-65535)</li>
    <li><strong>name</strong>: The name of the asset. Dynamically created assets (such as buffer sounds) will not show a name.</li>
    <li><strong>pos</strong>: The current playback position of the source in frames (as a hex value)</li>
  </ul>
  <p>These sources are limited by the <span class="inline3_func"><a data-xref="{title}" href="../Asset_Management/Audio/audio_channel_num.htm">audio_channel_num</a></span> value.</p>
  <p>This window can also be opened with the <span class="inline3_func"><a data-xref="{title}" href="../Asset_Management/Audio/audio_debug.htm">audio_debug</a></span> function.</p>
  <h3 id="memory">Memory</h3>
  <p>This window shows various info related to <span data-keyref="GameMaker Name">GameMaker</span>&#39;s memory usage.</p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_memory.png" /></p>
  <p>The <strong>Memory</strong> section shows the <strong>Allocated memory</strong> by the OS for your game and the <strong>Free memory</strong> that currently remains of it, along with a graph of the evolution through time of both (expressed in game frames).</p>
  <p>Then there is a section on the <a href="../Garbage_Collection/Garbage_Collection.htm">Garbage Collector</a>, which mostly corresponds to the info returned by <span class="inline3_func"><a data-xref="{title}" href="../Garbage_Collection/gc_get_stats.htm">gc_get_stats</a></span>. At the top are two buttons: the <strong>Force Collection</strong> button forces the garbage collector to run, and the <strong>Toggle GC</strong> button enables/disables it. At the bottom of the section is the <strong>GC graph</strong>, which shows the number of objects touched and collected as a function of time (expressed in game frames).</p>
  <h3 id="texture">Texture</h3>
  <p>This window shows all <a data-xref="{title}" href="../../../Settings/Texture_Information/Texture_Pages.htm">Texture Pages</a> used by your game.</p>
  <p>It shows the textures generated by <span data-keyref="GameMaker Name">GameMaker</span> for all <a data-xref="{title}" href="../../../Settings/Texture_Groups.htm">Texture Groups</a>, as well as couple of other textures, such as the fallback texture. Custom <a data-xref="{title}" href="../Drawing/Surfaces/Surfaces.htm">Surfaces</a> that you create as well as the <span class="inline2"><a data-xref="{title}" href="../Drawing/Surfaces/application_surface.htm">application_surface</a></span> are also shown here.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_important.hts"> </span> When you access <a data-xref="{title}" href="../../../Settings/Texture_Information/Dynamic_Textures.htm">Dynamic Textures</a> in the texture viewer that are unloaded and still on disk they will be loaded into memory and VRAM so they can be displayed.</p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_texture.png" /></p>
  <p>Drag the <strong>Texture Index</strong> slider to select the texture. For every texture, the following information is shown: </p>
  <ul class="colour">
    <li><strong>width</strong>: The width of the texture in pixels.</li>
    <li><strong>height</strong>: The height of the texture in pixels.</li>
    <li><strong>group</strong>: The name of the texture group this texture belongs to. Shows <span class="inline2">&lt;unknown&gt;</span> if the texture doesn&#39;t belong to a texture group.</li>
    <li><strong>index in group</strong>: The index of the texture page in its texture group. A texture group can be stored on multiple texture pages when all the visual assets in it don&#39;t fit on a single texture page. Sprites marked as on a <a data-xref="{text}" href="../../../Settings/Texture_Information/Texture_Pages.htm#h">Separate Texture Page</a> also go on their own texture page.</li>
    <li><strong>num mips</strong>: The number of mipmap levels used by this texture. See <a data-xref="{title}" href="../Drawing/Mipmapping/Mipmapping.htm">Mipmapping</a> for more info.</li>
  </ul>
  <h3>FlexPanel</h3>
  <p>This shows the <a data-xref="{text}" href="../Flex_Panels/Flex_Panels.htm#h1">Flex Panel Preview</a> window, with a JSON editor on the left and a preview of the generated layout on the right.</p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_flexpanel.png" /></p>
  <h3 id="debug_view">DebugView</h3>
  <p>This toggles the visibility of all custom debug views created using <span class="inline3_func"><a data-xref="{title}" href="dbg_view.htm">dbg_view</a></span>.</p>
  <h2 id="debug_views">Views</h2>
  <p>This menu lists all the custom debug views that you&#39;ve created using <span class="inline3_func"><a data-xref="{title}" href="dbg_view.htm">dbg_view</a></span>.</p>
  <p>Each menu item shows the name of the debug view with a check mark on the right if the view is set to be visible. Clicking the menu item toggles the visibility of this debug view.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> The Debug menu&#39;s <a href="The_Debug_Overlay.htm#debug_view">DebugView</a> setting must be enabled for any custom debug views to be shown.</p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_custom_views.png" /></p>
  <h3 id="creating_debug_views">Creating Debug Views</h3>
  <p>A custom<em> </em>debug view is created using <span class="inline3_func"><a data-xref="{title}" href="dbg_view.htm">dbg_view</a></span>:</p>
  <p class="code">custom_dbgview = dbg_view(&quot;Custom Debug View&quot;, true);</p>
  <p>The first argument is its name, the second is its visibility. Optional parameters can be passed to customise its position and size.</p>
  <p>Within debug views, you create sections using <span class="inline3_func"><a data-xref="{title}" href="dbg_section.htm">dbg_section</a></span>: </p>
  <p class="code">custom_section = dbg_section(&quot;Custom Section&quot;);</p>
  <p>To these sections you add controls that display and/or modify the value that they&#39;re linked to via a reference created with <span class="inline3_func"><a data-xref="{title}" href="../Variable_Functions/ref_create.htm">ref_create</a></span>.</p>
  <p>References can be created to all kinds of variables. Each control supports a reference to one or more datatypes.</p>
  <p class="note"><span><span data-conref="../../../assets/snippets/Tag_important.hts"> </span> Variables must exist within a <a href="../../GML_Overview/Structs.htm#struct">struct</a> or <a href="../Asset_Management/Instances/Instances.htm">instance</a></span><span> as a debug view is declared once, so local variables <em>cannot</em> be displayed.</span></p>
  <p>Visually, controls are laid out in a grid that has two columns: most controls span two columns, some only a single. Two single column controls can be placed on a single line by calling <span class="inline3_func"><a data-xref="{title}" href="dbg_same_line.htm">dbg_same_line</a></span>: </p>
  <p class="code">button1 = function()<br />
    {<br />
        show_debug_message(&quot;Button1 clicked!&quot;);<br />
    }<br />
    <br />
    ref = ref_create(self, &quot;button1&quot;);<br />
    dbg_text(&quot;This text will go here&quot;);<br />
    dbg_same_line();<br />
    dbg_button(&quot;Button1&quot;, ref);
  </p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> A debug control created before a section is created will be added to a new section named <span data-keyref="DebugSection_Name_Default">&quot;Default&quot;</span>. A debug section that&#39;s created before a debug view is created will be added to a debug view <span data-keyref="DebugView_Name_Default">&quot;Default&quot;</span>.</p>
  <p>The above lines of code will show the following window in <span data-field="title" data-format="default">The Debug Overlay</span>: </p>
  <p><img class="center" src="../../../assets/Images/Scripting_Reference/GML/Reference/Debug/debug_overlay_custom_debug_view.png" /></p>
  <h2 id="system">System</h2>
  <p>This menu contains two settings related to the debug overlay: </p>
  <ul class="colour">
    <li><strong>Scale</strong> - the scale factor of the debug overlay, default is <strong>x<span data-keyref="DebugOverlay_Scale_Default">1</span></strong></li>
    <li><strong>Alpha</strong> - the alpha value to use to draw the overlay, default is <strong><span data-keyref="DebugOverlay_Alpha_Default">0.8</span></strong></li>
  </ul>
  <h2 id="keyboard_mouse_events">Keyboard &amp; Mouse Events</h2>
  <p>When the mouse is over any menu or window of the Debug Overlay or when the Debug Overlay expects keyboard input, <span data-keyref="GameMaker Name">GameMaker</span> will not trigger any keyboard or mouse events. Functions such as <span class="inline3_func"><a data-xref="{title}" href="../Game_Input/Keyboard_Input/keyboard_check.htm">keyboard_check</a></span> and <span class="inline3_func"><a data-xref="{title}" href="../Game_Input/Mouse_Input/mouse_check_button.htm">mouse_check_button</a></span> still work the same, however. If you want to get the same result in this case, you can use the values returned by <span class="inline3_func"><a data-xref="{title}" href="is_keyboard_used_debug_overlay.htm">is_keyboard_used_debug_overlay</a></span> and/or <span class="inline3_func"><a data-xref="{title}" href="is_mouse_over_debug_overlay.htm">is_mouse_over_debug_overlay</a></span>: </p>
  <p class="code">if (!is_keyboard_used_debug_overlay() &amp;&amp; keyboard_check(vk_up))<br />
    {<br />
        // Execute code here<br />
    }</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> The keyboard is considered &quot;used&quot; by the Debug Overlay when the cursor is on a textbox control and also when you drag a window (by clicking and holding the left mouse button).</p>
  <h2 id="func_ref">Function Reference</h2>
  <h3 id="func_ref_general">General</h3>
  <ul class="colour">
    <li><a data-xref="{title}" href="show_debug_overlay.htm">show_debug_overlay</a></li>
    <li><a data-xref="{title}" href="show_debug_log.htm">show_debug_log</a></li>
    <li><a data-xref="{title}" href="is_debug_overlay_open.htm">is_debug_overlay_open</a></li>
    <li><a data-xref="{title}" href="dbg_add_font_glyphs.htm">dbg_add_font_glyphs</a></li>
  </ul>
  <h3 id="func_ref_views">Views</h3>
  <ul class="colour">
    <li><a data-xref="{title}" href="dbg_view.htm">dbg_view</a></li>
    <li><a data-xref="{title}" href="dbg_view_exists.htm">dbg_view_exists</a></li>
    <li><a data-xref="{title}" href="dbg_view_delete.htm">dbg_view_delete</a></li>
    <li><a data-xref="{title}" href="dbg_section.htm">dbg_section</a></li>
    <li><a data-xref="{title}" href="dbg_section_exists.htm">dbg_section_exists</a></li>
    <li><a data-xref="{title}" href="dbg_section_delete.htm">dbg_section_delete</a></li>
  </ul>
  <h3 id="func_ref_controls">Controls</h3>
  <ul class="colour">
    <li><a data-xref="{title}" href="dbg_button.htm">dbg_button</a></li>
    <li><a data-xref="{title}" href="dbg_checkbox.htm">dbg_checkbox</a></li>
    <li><a data-xref="{title}" href="dbg_colour.htm">dbg_colour</a></li>
    <li><a data-xref="{title}" href="dbg_drop_down.htm">dbg_drop_down</a></li>
    <li><a data-xref="{title}" href="dbg_same_line.htm">dbg_same_line</a></li>
    <li><a data-xref="{title}" href="dbg_slider.htm">dbg_slider</a></li>
    <li><a data-xref="{title}" href="dbg_slider_int.htm">dbg_slider_int</a></li>
    <li><a data-xref="{title}" href="dbg_sprite.htm">dbg_sprite</a></li>
    <li><a data-xref="{title}" href="dbg_sprite_button.htm">dbg_sprite_button</a></li>
    <li><a data-xref="{title}" href="dbg_text.htm">dbg_text</a></li>
    <li><a data-xref="{title}" href="dbg_text_input.htm">dbg_text_input</a></li>
    <li><a data-xref="{title}" href="dbg_text_separator.htm">dbg_text_separator</a></li>
    <li><a data-xref="{title}" href="dbg_watch.htm">dbg_watch</a></li>
  </ul>
  <h3 id="func_ref_keyboard_mouse">Keyboard &amp; Mouse</h3>
  <ul class="colour">
    <li><a data-xref="{title}" href="is_mouse_over_debug_overlay.htm">is_mouse_over_debug_overlay</a></li>
    <li><a data-xref="{title}" href="is_keyboard_used_debug_overlay.htm">is_keyboard_used_debug_overlay</a></li>
  </ul>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Debugging.htm">Debugging</a></div>
        <div>Next: <a data-xref="{title}" href="show_debug_overlay.htm">show_debug_overlay</a></div>
      </div>
    </div>
    <h5><span data-conref="../../../assets/snippets/Copyright_Notice_AutoUpdate.hts"> </span></h5>
  </div>
</body>
</html>