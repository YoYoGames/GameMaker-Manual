<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_joint_get_value</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for physics_joint_get_value" />
  <meta name="rh-index-keywords" content="physics_joint_get_value" />
  <meta name="search-keywords" content="physics_joint_get_value" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_joint_get_value</h1>
  <p>By using a series of predefined constants, you can ask <span data-keyref="GameMaker Name">GameMaker</span> to tell you a number of things about the state of any given joint. This is very useful as it gives you the ability to delete joints or change an instances behaviour depending on whatever your needs are at the time. There are a number of constants that can be used in this function and they can be found here: <a href="Physics_Joint_Constants.htm">Physics Joint Constants</a>, but be aware that complex calculations are done when you call these, so they should be used with care and only when necessary and note that <i>many are unique to a specific type of joint</i>.</p>
  <p>If the property does not exist (if, for example, you check a pulley joint for prismatic translation) then 0 will be the return value.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">physics_joint_get_value(joint, value)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>joint</td>
        <td><span data-keyref="Type_ID_Physics_Joint">Physics Joint ID</span></td>
        <td>The index of the joint that you wish to test</td>
      </tr>
      <tr>
        <td>value</td>
        <td><span data-keyref="Type_Constant_Phy_Joint">Physics Joint Constant</span></td>
        <td>The constant for the joint property that you wish to test</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real">Real</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">if (shipJoint) <br />
    {<br />
        var reactionForceX = physics_joint_get_value(shipJoint, phy_joint_reaction_force_x);<br />
        var reactionForceY = physics_joint_get_value(shipJoint, phy_joint_reaction_force_y);<br />
        var reactionForce = point_distance(0, 0, reactionForceX, reactionForceY);<br />
        if (reactionForce &gt; 2) <br />
        {<br />
            physics_joint_delete(shipJoint);<br />
            shipJoint = -1;<br />
        }<br />
    }</p>
  <p>The above code checks to see if the variable &quot;shipJoint&quot; holds a joint index and if it does, it then calculates the force being applied to that joint using the two constants. Finally, if the total force is greater than 2, the joint is deleted.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Joints.htm">Joints</a></div>
        <div style="float:right">Next: <a href="physics_joint_set_value.htm">physics_joint_set_value</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
physics_joint_get_value
-->
  <!-- TAGS
physics_joint_get_value
-->
</body>
</html>