<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>os_request_permission</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for os_request_permission" />
  <meta name="rh-index-keywords" content="os_request_permission,os_permission_granted,os_permission_denied" />
  <meta name="search-keywords" content="os_request_permission,os_permission_granted,os_permission_denied" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">os_request_permission</span></h1>
  <p>This function requests the OS for a specific permission.</p>
  <p>It is used on two different targets:</p>
  <ul class="colour">
    <li>On Android you supply the permission to request as a string using the format &quot;<span class="inline2">android.permission.&lt;permission&gt;&quot;</span>, so to request, for example, the <span class="inline2">RECORD_AUDIO</span> permission you would call:</li>
  </ul>
  <p class="code"><span data-field="title" data-format="default">os_request_permission</span>(&quot;android.permission.RECORD_AUDIO&quot;);</p>
  <ul>
    <li>On GX.games you can use this function to request access to orientation information, though only on certain browsers (see <a data-xref="{title}" href="../Game_Input/Device_Input/Device_Input.htm">Device Input</a>). <span>This permission request has to be made in response to a user press, so will only take place the first time the app is clicked after the call to <span class="inline3_func"><span data-field="title" data-format="default">os_request_permission</span></span> is made.</span> In this case you request the permission <span class="inline2">&quot;DeviceMotion&quot;</span>:</li>
  </ul>
  <p class="code"><span data-field="title" data-format="default">os_request_permission</span>(&quot;DeviceMotion&quot;);</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> You can request multiple permissions at once by passing multiple arguments into the function.</p>
  <p>The function will later trigger a <a href="../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">System Asynchronous Event</a> where the built-in <span class="inline2"><a data-xref="{title}" href="../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm">async_load</a></span> DS map will contain the following key/value pairs:</p>
  <ul class="colour">
    <li>&quot;<b>type</b>&quot;: This will be the string <span class="inline2">&quot;permission_request_result&quot;</span>, used to identify the type of event triggered.</li>
    <li>&quot;<b>&lt;permission&gt;</b>&quot;: This will be a permission requested by the function, as a string. You will get keys for all the permissions you requested in the original function call.<br />
      <br />
      This key will equal one of the following constants:
    </li>
  </ul>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">os_permission_granted</span></td>
        <td>This indicates that the permission has been granted</td>
      </tr>
      <tr>
        <td><span class="inline">os_permission_denied</span></td>
        <td>This indicates that the permission has not been granted</td>
      </tr>
    </tbody>
  </table>
  <ul class="colour">
    <li><span class="inline">&quot;response&quot;</span>: This is only returned for the <span class="inline2">&quot;DeviceMotion&quot;</span> permission. It holds the string value returned by the request.</li>
  </ul>
  <p>It is worth noting that the following permissions are supported natively by <span data-keyref="GameMaker Name">GameMaker</span>, but are considered &quot;dangerous&quot; by Google and as such they <i>must</i> be explicitly requested (note too that some permissions can be requested using the <a href="../../../Settings/Game_Options/Android.htm">Android Game Options</a> without the need for this function):</p>
  <ul class="colour">
    <li><span class="inline">android.permission.WRITE_EXTERNAL_STORAGE</span></li>
    <li><span class="inline">android.permission.READ_PHONE_STATE</span></li>
    <li><span class="inline">android.permission.RECORD_AUDIO</span></li>
  </ul>
  <p>For more information on app permissions, please see the <a href="https://developer.android.com/guide/topics/permissions/overview" target="_blank">Android Documentation</a>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">os_request_permission</span>(permissions...)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>permissions</td>
        <td><span data-keyref="Type_String"><a href="../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>The permission(s) to request. Request multiple permissions by adding more arguments.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example 1:</h4>
  <p class="code">if (os_type == os_android)<br />
    {<br />
        if (os_check_permission(&quot;android.permission.INTERNET&quot;) == os_permission_denied)<br />
        {<br />
            os_request_permission(&quot;android.permission.INTERNET&quot;);<br />
        }<br />
    }</p>
  <p>The above code checks the OS type and if it&#39;s Android, it performs a check on the &quot;INTERNET&quot; permission and if it&#39;s not yet been granted, it requests it.</p>
  <h4>Example 2:</h4>
  <p class="code">var _read = &quot;android.permission.READ_EXTERNAL_STORAGE&quot;;<br />
    var _write = &quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;;<br />
    <br />
    if (os_check_permission(_write) &amp;&amp; os_check_permission(_read))<br />
    {<br />
        MobileUtils_Share_Open(&quot;Title!&quot;, &quot;image/gif&quot;, file);<br />
    }<br />
    else<br />
    {<br />
        os_request_permission(_write, _read);<br />
    }
  </p>
  <p>This function checks if the user has permissions for reading from and writing to external storage. If it&#39;s allowed, it runs an extension function to operate using those permissions. However, if either of those permissions are not allowed, it calls <span class="inline3_func"><span data-field="title" data-format="default">os_request_permission</span></span> to request both permissions at once.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="OS_And_Compiler.htm">OS And Compiler</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="GM_build_date.htm">GM_build_date</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2025 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
os_request_permission
os_permission_granted
os_permission_denied
-->
  <!-- TAGS
os_request_permission
-->
</body>
</html>