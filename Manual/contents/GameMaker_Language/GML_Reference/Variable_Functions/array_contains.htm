<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>array_contains</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="array_contains" />
  <meta name="search-keywords" content="array_contains" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">array_contains</span></h1>
  <p>This function checks if the given value exists in the array, or in a part of it. It returns <span class="inline2">true</span> if the value exists, or <span class="inline2">false</span> if not.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_tip.hts"> </span> To check if an array not just <em>contains</em> a value but rather contains a value <em>that satisfies a certain condition</em>, use <span class="inline2"><a data-xref="{title}" href="array_any.htm">array_any</a></span>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">array_contains</span>(array, value, [offset], [length]);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>array</td>
        <td><span data-keyref="Type_Array"><a href="../../GML_Overview/Arrays.htm" target="_blank">Array</a></span></td>
        <td>The array in which to look for the value</td>
      </tr>
      <tr>
        <td>value</td>
        <td><span data-keyref="Type_Any"><a href="../../GML_Overview/Data_Types.htm#variable" target="_blank">Any</a></span></td>
        <td>The value to look for in the array</td>
      </tr>
      <tr>
        <td>offset</td>
        <td><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span data-conref="../../../assets/snippets/Tag_optional.hts"> </span> The offset, or starting index, in the array. Setting a negative value will count from the end of the array. The starting index will then be <span class="inline2">array_length(array) + offset</span>. See: <a data-xref="{text}" href="Array_Functions.htm#offset_and_length">Offset And Length</a></td>
      </tr>
      <tr>
        <td>length</td>
        <td><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span data-conref="../../../assets/snippets/Tag_optional.hts"> </span> The number of elements to traverse. A negative value will traverse the array backwards (i.e. in descending order of indices, e.g. 2, 1, 0 instead of 2, 3, 4). See: <a data-xref="{text}" href="Array_Functions.htm#offset_and_length">Offset And Length</a></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Bool"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></p>
  <p> </p>
  <h4>Example 1:</h4>
  <p class="code">var _digits_decimal = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];<br />
    var _contains = <span data-field="title" data-format="default">array_contains</span>(_digits_decimal, 3);<br />
    show_debug_message(&quot;The array contains the digit 3: {0}&quot;, _contains);</p>
  <p>The above code first defines an array <span class="inline2">_digits_decimal</span> containing the decimal digits from 0 to 9. It then calls <span class="inline2"><span data-field="title" data-format="default">array_contains</span></span> to check if the value 3 is in the array. Finally it shows a debug message with the result.</p>
  <p> </p>
  <h4>Example 2: array of arrays</h4>
  <p class="code">var _a = [0, 1, 2];<br />
    var _b = _a;<br />
    var _array_of_arrays = <br />
    [<br />
        [<br />
            &quot;this&quot;, &quot;that&quot;, &quot;another thing&quot;<br />
        ],<br />
        _a<br />
    ];<br />
    show_debug_message(<span data-field="title" data-format="default">array_contains</span>(_array_of_arrays, _a));<br />
    show_debug_message(<span data-field="title" data-format="default">array_contains</span>(_array_of_arrays, _b));<br />
    show_debug_message(<span data-field="title" data-format="default">array_contains</span>(_array_of_arrays, [0, 1, 2]));<br />
    show_debug_message(<span data-field="title" data-format="default">array_contains</span>(_array_of_arrays, [&quot;this&quot;, &quot;that&quot;, &quot;another thing&quot;]));</p>
  <p>The above code first defines three temporary variables: an array <span class="inline2">_a</span>, a variable <span class="inline2">_b</span> referring to <span class="inline2">_a</span> and an array <span class="inline2">_array_of_arrays</span>.</p>
  <p>It then shows four debug messages with the result of calling <span class="inline2"><span data-field="title" data-format="default">array_contains</span></span> in 4 different situations. <span class="inline2">_array_of_arrays</span> contains <span class="inline2">_a</span> because it has been added to it as an element. It also contains <span class="inline2">_b</span> because <span class="inline2">_b</span> refers to <span class="inline2">_a</span>. The remaining checks return <span class="inline2">false</span> because even though the arrays contain the same values, they aren&#39;t the same arrays.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Array_Functions.htm">Array Functions</a></div>
        <div>Next: <a data-xref="{title}" href="array_contains_ext.htm">array_contains_ext</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
array_contains
-->
  <!-- TAGS
array_contains
-->
</body>
</html>