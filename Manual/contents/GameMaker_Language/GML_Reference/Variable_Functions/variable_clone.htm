<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>variable_clone</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="variable_clone" />
  <meta name="search-keywords" content="variable_clone" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">variable_clone</span></h1>
  <p>This function clones the value you pass it and returns the new clone.</p>
  <p>It clones nested structs and arrays up to a given depth (<span data-keyref="Const_Data_Clone_Depth">128</span> by default), which you can override by providing the optional <span class="inline2">depth</span> parameter.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> The built-in <a data-xref="{title}" href="../Data_Structures/Data_Structures.htm">Data Structures</a> and <a data-xref="{title}" href="../Asset_Management/Instances/Instances.htm">Instances</a> are <em>not</em> cloned; for this type of variable the actual value (data structure ID or instance ID, respectively) is written.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> Built-in structs, such as the structs related to sequences and animation curves, cannot be cloned using this function.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">variable_clone</span>(value[, depth]);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>value</td>
        <td><span data-keyref="Type_Any"><a href="../../GML_Overview/Data_Types.htm#variable" target="_blank">Any</a></span></td>
        <td>The value to clone</td>
      </tr>
      <tr>
        <td>depth</td>
        <td><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span data-conref="../../../assets/snippets/Tag_optional.hts"> </span> The maximum depth level to clone the variable, in case this is e.g. a nested struct. The default is <span data-keyref="Const_Data_Clone_Depth">128</span>, the maximum possible value.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Any"><a href="../../GML_Overview/Data_Types.htm#variable" target="_blank">Any</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _the_original = {a: &quot;some text&quot;, b: [1, 2, 3, 4, 5], c: 6};<br />
    var _the_clone = <span data-field="title" data-format="default">variable_clone</span>(_the_original);</p>
  <p>The above code first defines a temporary struct variable <span class="inline2">_the_original</span>. A clone is then created from this variable using <span class="inline3_func"><span data-field="title" data-format="default">variable_clone</span></span>. The new variable is stored in another variable <span class="inline2">_the_clone</span>.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Variable_Functions.htm">Variable Functions</a></div>
        <div>Next: <a data-xref="{title}" href="is_string.htm">is_string</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
variable_clone
-->
  <!-- TAGS
variable_clone
-->
</body>
</html>