<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instanceof</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function instanceof" />
  <meta name="rh-index-keywords" content="instanceof" />
  <meta name="search-keywords" content="" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">instanceof</span></h1>
  <p>This function can be used to get the name of the <a href="../../GML_Overview/Structs.htm">constructor function</a> that was used to create a struct. The struct itself should have been created using the <a href="../../GML_Overview/Language_Features/new.htm"><span class="inline"></span></a> <a href="../../GML_Overview/Language_Features/new.htm"><span class="inline">new</span></a> operator along with the constructor itself. You supply the variable with the struct reference to check and the function will return either a string with the constructor name or <span class="inline">undefined</span>.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_tip.hts"> </span> It&#39;s recommended to use <span class="inline3_func"><a data-xref="{title}" href="is_instanceof.htm">is_instanceof</a></span> to check the constructor of a struct, as it additionally allows you to check using parent constructors (i.e. constructors that the struct&#39;s constructor may have inherited from). <span class="inline3_func"><a data-xref="{title}" href="is_instanceof.htm">is_instanceof</a></span> also allows you to check using the constructor function reference directly instead of strings.</p>
  <h3>Usage Notes</h3>
  <ul class="colour">
    <li>If you pass the function a struct literal (i.e.: a struct that was created without using a constructor function) then it will simply return the string <span class="inline2">&quot;struct&quot;</span>.</li>
    <li>If you pass the function the <span class="inline2">self</span> keyword inside an object instance, it will return <span class="inline2">&quot;instance&quot;</span>.</li>
    <li>The returned constructor name will include additional text if the constructor function was not created in a script. If it was created inside an object, its name will include the object and the event where it was created. For example, a constructor called <span class="inline2">test_constructor</span> created in the Create event of <strong>Object1</strong> will be returned as <span class="inline2">&quot;test_constructor_gml_Object_Object1_Create_0&quot;</span>. To avoid this, create your constructors in a <a href="../../GML_Overview/Script_Functions.htm">script</a>.</li>
    <li>This function can also be used to check if a struct reference is a <strong><a class="glossterm" data-glossterm="weak reference" href="#">weak reference</a></strong> or not, in which case the function will return the string <span class="inline2">&quot;weakref&quot;</span> instead of the name of the function that created the struct. For more information, see the function <a href="../Garbage_Collection/weak_ref_create.htm"><span class="inline">weak_ref_create()</span></a>.</li>
  </ul>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">instanceof</span>(struct_id);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>struct</td>
        <td><span data-keyref="Type_Struct"><a href="../../../../GameMaker_Language/GML_Overview/Structs.htm" target="_blank">Struct</a></span></td>
        <td>The struct reference to use.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_String"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">String</a></span> or <span data-keyref="Type_Undefined"><a href="../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">undefined</a></span></p>
  <p> </p>
  <h4>Extended Example:</h4>
  <p>In this example we must first define the function that will be used as the constructor for our struct. The following function is defined in a script asset:</p>
  <p class="code">function init_struct(_a, _b, _c) constructor<br />
    {<br />
        a = _a;<br />
        b = _b;<br />
        c = _c;<br />
    }</p>
  <p>This function can then be used along with the <span class="inline">new</span> operator to create a struct and populate it with the variables set to the values of the arguments used in the function:</p>
  <p class="code">mystruct = new init_struct(10, 100, &quot;Hello World&quot;);</p>
  <p>We can then get the name of the constructor function that was used like this:</p>
  <p class="code">var _name = instanceof(mystruct);<br />
    if (is_string(_name)) <br />
    {<br />
        show_debug_message(_name);<br />
    }</p>
  <p>This will print the string <span class="inline2">&quot;init_struct&quot;</span> to the output log, which is the name of the constructor function as defined in its script.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Variable_Functions.htm">Variable Functions</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="struct_foreach.htm">struct_foreach</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instanceof
-->
  <!-- TAGS
instanceof
-->
</body>
</html>