<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gxc_file_sync</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Bart Teunis" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="gxc_file_sync" />
  <meta name="search-keywords" content="gxc_file_sync" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">gxc_file_sync</span></h1>
  <p>This <a href="../../Asynchronous_Functions/Asynchronous_Functions.htm">asynchronous</a> function synchronises the changes to the file system on the GX.games platform.</p>
  <p>You should call this function whenever more than one game, e.g. a Live Wallpaper <em>and</em> a Game Strip, writes to and reads from the file system and you want to get the changes made by the other game in the current one.</p>
  <p>Because of the type of file system used by <span data-keyref="GameMaker Name">GameMaker</span> when running on GX.games, the changes made by one game will not automatically be picked up by the other. To retrieve these changes and to <em>synchronise</em> the state of the file system in both games you call this function.</p>
  <p>The function takes a callback function that&#39;s called when the synchronisation has completed.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">gxc_file_sync</span>([callback]);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>callback</td>
        <td><span data-keyref="Type_Method"><a href="../../../GML_Overview/Method_Variables.htm" target="_blank">Method</a></span> or <span data-keyref="Type_Function_Script"><a href="../../../GML_Overview/Script_Functions.htm" target="_blank">Script Function</a></span></td>
        <td><span data-conref="../../../../assets/snippets/Tag_optional.hts"> </span> The callback method to execute when the sync is complete</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code_heading">Create Event</p>
  <p class="code">confirm = function()<br />
    {<br />
        show_debug_message(&quot;Successfully synced file system changes!&quot;);<br />
    }<br />
    <br />
    alarm_time = 60;<br />
    alarm[0] = alarm_time;
  </p>
  <p class="code_heading">Alarm Event</p>
  <p class="code"><span data-field="title" data-format="default">gxc_file_sync</span>(confirm);<br />
    alarm[0] = alarm_time;</p>
  <p>The above code first creates a method in an object&#39;s Create event that shows a debug message and sets <span class="inline2"><a data-xref="{title}" href="../../Asset_Management/Instances/Instance_Variables/alarm.htm">alarm</a>[0]</span> to 60 steps. In the Alarm event a file sync is performed with a call to <span class="inline3_func"><span data-field="title" data-format="default">gxc_file_sync</span></span> and the alarm is set to countdown again.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="../GXC_Functions.htm">GX.games Functions</a></div>
        <div> </div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gxc_file_sync
-->
  <!-- TAGS
gxc_file_sync
-->
</body>
</html>