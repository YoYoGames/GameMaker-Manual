<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>game_change</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Bart Teunis" />
  <meta name="topic-comment" content="Reference page for the game_change function" />
  <meta name="rh-index-keywords" content="game_change" />
  <meta name="search-keywords" content="game_change" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">game_change</span></h1>
  <p>This function ends the current game and launches another game that&#39;s included in the <a data-xref="{title}" href="../../../Settings/Included_Files.htm">Included Files</a>.</p>
  <p>It allows you to have a main game from which you can launch other games that you keep in a different <span data-keyref="GameMaker Name">GameMaker</span> project. The function can be called again in the launched game to return back to the main game.</p>
  <p>The function is supported on the Windows, macOS, PS4, PS5 and Switch platforms.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_important.hts"> </span> This function only works in <strong>VM</strong> builds.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_important.hts"> </span> <span data-keyref="GameMaker Name">GameMaker</span> names the <span class="inline2">.win</span> file differently depending on whether your game is running from the IDE or from the final executable (created using <strong>Create Executable</strong> in <a data-xref="{title}" href="../../../IDE_Navigation/Menus/The_Build_Menu.htm">The Build Menu</a>). When running from the IDE the name will be <span class="inline2">$&quot;{game_project_name}.win&quot;</span>, if not it will be <span class="inline2">&quot;data.win&quot;</span>. You should always make sure to refer to the right name, e.g. by setting up a different <a href="../../../Settings/Configurations.htm">configuration</a>.</p>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> Since the child games&#39; external files are included in the main game&#39;s <span data-keyref="Const_IncludedFiles_FolderName">datafiles</span>, they can be accessed from the main game as well.</p>
  <h3>Usage Notes</h3>
  <ul class="Disc">
    <li>Each of the games to be launched by the main game should be included in a subdirectory of the <a data-xref="{title}" href="../../../Settings/Included_Files.htm">Included Files</a>: the game&#39;s <span class="inline2">data.win</span> file and other external included files should go into this folder. This folder structure could look as follows (essentially a copy of the contents in the final game&#39;s directory, without the executable file): 
      <ul>
        <li>game1
          <ul>
            <li>game1.win</li>
            <li>bgm_groovy.ogg</li>
            <li>texgroup1_0.yytex</li>
            <li>options.ini</li>
          </ul>
        </li>
        <li>game2
          <ul>
            <li>game2.win</li>
            <li>game_data.json</li>
            <li>options.ini</li>
          </ul>
        </li>
        <li>...</li>
      </ul>
    </li>
    <li>This function only works on certain platforms, and on some platforms it will only work in a packaged build.</li>
    <li>All saves, achievements, etc. will be done under the title ID set by the launcher project.</li>
    <li>As this function <em>ends the current game before launching the new one</em>, the <strong>Game End event</strong> is triggered for the current game and the <strong>Game Start event</strong> is triggered for the game that is being launched.</li>
  </ul>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Argument Values Per Platform</a></p>
  <div class="droptext" data-targetname="drop-down">
    <p><span>The table below provides an example of the working directory and launch parameters to be provided on each of the supported platforms: </span></p>
    <div>
      <table class=" cke_show_border">
        <tbody>
          <tr>
            <th style="">Platform</th>
            <th>Working Directory</th>
            <th style="">Launch Parameters</th>
          </tr>
          <tr>
            <td><span class="inline">Windows</span></td>
            <td><span class="inline2">&quot;/game2&quot;</span></td>
            <td><span class="inline2">&quot;-game game2.win&quot;</span></td>
          </tr>
          <tr>
            <td><span class="inline">macOS</span></td>
            <td><span class="inline2">&quot;game2&quot;</span></td>
            <td><span class="inline2">&quot;&quot;</span></td>
          </tr>
          <tr>
            <td><span class="inline">PS4/PS5</span></td>
            <td><span class="inline2">&quot;&quot;</span></td>
            <td><span class="inline2">&quot;-game /app0/games/game2/game.win&quot;</span></td>
          </tr>
          <tr>
            <td><span class="inline">Switch</span></td>
            <td><span class="inline2">&quot;rom:/game2/&quot;</span></td>
            <td><span class="inline2">&quot;&quot;</span></td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">game_change</span>(working_directory, launch_parameters);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>working_directory</td>
        <td><span data-keyref="Type_String"><a href="../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>The working directory of the game to be launched</td>
      </tr>
      <tr>
        <td>launch_parameters</td>
        <td><span data-keyref="Type_String"><a href="../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>The command-line parameters to pass to the game to be launched</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example 1: Launching an Included Game (on Windows)</h4>
  <p class="code"><span data-field="title" data-format="default">game_change</span>(&quot;/chapter3&quot;, &quot;-game chapter3.win&quot;);</p>
  <p>The above code runs from the launcher game and launches the &quot;Chapter 3&quot; game, which is stored in a subdirectory <span class="inline2">&quot;chapter3&quot;</span>  under <a data-xref="{title}" href="../../../Settings/Included_Files.htm">Included Files</a>.</p>
  <p> </p>
  <h4>Example 2: Returning to the Main/Launcher Game (on Windows)</h4>
  <p class="code"><span data-field="title" data-format="default">game_change</span>(&quot;/../&quot;, &quot;-game main_game.win&quot;);</p>
  <p>The code above runs from a game that was launched from the launcher game and returns to the main/launcher game. The double dots <span class="inline2">..</span> indicate that the game&#39;s working directory is one above the current working directory.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="General_Game_Control.htm">General Game Control</a></div>
        <div>Next: <a data-xref="{title}" href="game_load.htm">game_load</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
game_change
-->
  <!-- TAGS
game_change
-->
</body>
</html>