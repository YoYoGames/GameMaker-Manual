<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>xboxlive_sprite_add_from_gamerpicture</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for xboxlive_sprite_add_from_gamerpicture" />
  <meta name="rh-index-keywords" content="xboxlive_sprite_add_from_gamerpicture" />
  <meta name="search-keywords" content="xboxlive_sprite_add_from_gamerpicture" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>xboxlive_sprite_add_from_gamerpicture</h1>
  <p>With this function you can get the gamer picture for a given user ID pointer. The function works asynchronously, and will trigger an <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Image_Loaded.htm">Image Loaded</a> asynchronous event to inform you that the function is finished (like with HTML5/URL calls to <a href="../../Asset_Management/Sprites/Sprite_Manipulation/sprite_add.htm"><span class="inline">sprite_add()</span></a>). The Asynchronous Image Loaded event will have a DS map stored in the built in variable <a href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"><span class="inline">async_load</span></a>. The map contains the following information:</p>
  <ul class="colour">
    <li>&quot;<b>filename</b>&quot;: The complete path to the file you requested.</li>
    <li>&quot;<b>id</b>&quot;: The ID of the resource that you have loaded. This will be the same as the variable that you have assigned the resource to.</li>
    <li>&quot;<b>status</b>&quot;: Returns a value of less than 0 for an error.</li>
  </ul>
  <p class="note"><b>NOTE</b>: When you dynamically load a sprite into your game at runtime, you must remember to remove it again using <a href="../../Asset_Management/Sprites/Sprite_Manipulation/sprite_delete.htm"><span class="inline">sprite_delete()</span></a> when no longer needed, otherwise there is risk of a memory leak which will slow down and eventually crash your game.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">xboxlive_sprite_add_from_gamerpicture(user_id, imagesize, xorig, yorig);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>user_id</td><td><span data-keyref="Type_ID_Xbox_User"></span></td>
        <td>The user ID (a pointer) to get the gamer picture for</td>
     </tr>
      <tr>
        <td>imagesize</td><td><span data-keyref="Type_Real"></span></td>
        <td>Size in pixels of the sprite to be returned</td>
     </tr>
      <tr>
        <td>xorig</td><td><span data-keyref="Type_Real"></span></td>
        <td>Indicate the x position of the origin in the sprite</td>
     </tr>
      <tr>
        <td>yorig</td><td><span data-keyref="Type_Real"></span></td>
        <td>Indicate the y position of the origin in the sprite</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event">Async Request ID</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _a = 0;<br />
    var _num = xboxlive_get_user_count();<br />
    for (var i = 0; i &lt; _num; ++i;)<br />
    {<br />
        var _uid = xboxlive_get_user(i);<br />
        if (_uid != pointer_null) <br />
        {<br />
            global.UserName[_a] = xboxlive_gamedisplayname_for_user(_uid);<br />
            global.UserScore[_a] = xboxlive_gamerscore_for_user(_uid);<br />
            global.UserRep[_a] = xboxlive_reputation_for_user(_uid);<br />
            global.UserAvatar[_a] = xboxlive_sprite_add_from_gamerpicture(_uid, 256, 0, 0);<br />
            ++a;<br />
        }<br />
    }</p>
  <p>The above code loops through the logged in users and stores their gamer data in various global arrays.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Users_And_Accounts.htm">Users And Accounts</a></div>
        <div style="float:right">Next: <a href="xboxlive_generate_player_session_id.htm">xboxlive_generate_player_session_id</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
xboxlive_sprite_add_from_gamerpicture
-->
  <!-- TAGS
xboxlive_sprite_add_from_gamerpicture
-->
</body>
</html>