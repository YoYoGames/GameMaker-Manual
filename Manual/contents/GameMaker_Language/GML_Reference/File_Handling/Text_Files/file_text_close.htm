<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>file_text_close</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for file_text_close" />
  <meta name="rh-index-keywords" content="file_text_close" />
  <meta name="search-keywords" content="file_text_close" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>Once you have finished working with a given file (whether reading from it or writing to it), you must close the file again, or else you risk losing the information contained within. This also prevents memory leaks and makes sure that you never go over the file limit by having more than 32 files open.</p>
  <p>The function will return <span class="inline2">true</span> if the operation was a success, however if there was a failure in closing the file or when the file was first <a href="file_text_open_write.htm">opened</a>, this will return <span class="inline2">false</span>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">file_text_close(fileid);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>fileid</td>
        <td><span data-keyref="Type_ID_File_Text"><a href="file_text_open_read.htm" target="_blank">Text File ID</a></span></td>
        <td>The id of the file to close.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var file = file_text_open_write(working_directory + &quot;Game_Data.txt&quot;);<br />
    while (!file_text_eof(file))<br />
    {<br />
        file_text_readln(file);<br />
    }<br />
    file_text_write_string(file, level_data);<br />
    file_text_close(file);</p>
  <p>The above code opens a file for writing then loops through the lines of text already written to the file until it reaches the end. At this point it writes a string and then closes the file again.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Text_Files.htm">Text Files</a></div>
        <div style="float:right">Next: <a href="file_text_open_read.htm">file_text_open_read</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
file_text_close
-->
  <!-- TAGS
file_text_close
-->
</body>
</html>