<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>zip_unzip</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for zip_unzip" />
  <meta name="rh-index-keywords" content="zip_unzip" />
  <meta name="search-keywords" content="zip_unzip" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>zip_unzip</h1>
  <p>This function will open a stored zip file and extract its contents to the given directory.</p>
  <p>If you do not supply a full path to the ZIP directory, then the current drive <i>root</i> will be used, and if you want to place it in a relative path to the game bundle working directory, then you should use the <a href="../File_Directories/working_directory.htm"><span class="inline">working_directory</span></a> variable as part of the path (relative paths using &quot;.&quot; or &quot;..&quot; will not work so should be avoided). Note too that the zip must be either part of the game bundle (i.e.: an <a href="../../../../Settings/Included_Files.htm">Included File</a>) or have been downloaded to the storage area using <a href="../../Asynchronous_Functions/HTTP/http_get_file.htm">http_get_file()</a>.</p>
  <p>The function will return a value indicating the number of files extracted, or it will return 0 or less if the extraction has failed.</p>
  <p>This function is synchronous and may cause your game to freeze while it extracts the ZIP. Use <span class="inline3_func"><a data-xref="{title}" href="zip_unzip_async.htm">zip_unzip_async</a></span> for extracting asynchronously.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">zip_unzip(zip_file, target_directory)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>zip_file</td>
        <td><span data-keyref="Type_String"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>The zip file to open</td>
      </tr>
      <tr>
        <td>target_directory</td>
        <td><span data-keyref="Type_String"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>The target directory to extract the files to</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var num = zip_unzip(&quot;/downloads/level_data.zip&quot;, working_directory + &quot;extracted/&quot;);<br />
    if (num &lt;= 0) <br />
    {<br />
        show_debug_message(&quot;Extraction Failed!&quot;);<br />
    }</p>
  <p>The above code will open the zip file stored in the directory &quot;downloads&quot; and extract its contents to the directory &quot;extracted&quot; (creating that directory if it doesn&#39;t already exist) and then check to see that the extraction has been correct, showing a debug message should it fail.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Encoding_And_Hashing.htm">Encoding And Hashing</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="zip_unzip_async.htm">zip_unzip_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
zip_unzip
-->
  <!-- TAGS
zip_unzip
-->
</body>
</html>