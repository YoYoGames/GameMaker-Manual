<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <title>rollback_sync_on_frame</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Reference page for rollback_sync_on_frame" />
  <meta name="condition-tags" content="Export:Beta" />
  <meta name="rh-index-keywords" content="rollback_sync_on_frame" />
  <meta name="search-keywords" content="rollback_sync_on_frame" />
</head>
<body>
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>This function checks if all players are synchronised on the current frame, meaning their states are not based on predictions but on the actual data received from them. In such a case, it returns <span class="inline2">true</span>.</p>
  <p>If players are not synchronised on the current frame, it returns <span class="inline2">false</span>, and attempts to synchronise all players.</p>
  <p>Attempting to synchronise players with this function may cause a freeze. You must ensure that this function is not continuously called in a Step event.</p>
  <p>Instead, use it as a toggle. See the example at the bottom of the page.</p>
  <p>The variable <span class="inline"><a data-xref="{title}" href="../Rollback_Variables/rollback_confirmed_frame.htm">rollback_confirmed_frame</a></span> is updated automatically when all players are synchronised.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">rollback_sync_on_frame();</p>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Bool"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">if (obj_game.winning_player == -1 &amp;&amp; points &gt;= obj_game.points_required_for_win)<br />
    {<br />
        if (rollback_sync_on_frame())<br />
        {<br />
            obj_game.winning_player = player_id;<br />
        }<br />
    }</p>
  <p>This code runs in a player object&#39;s Step event.</p>
  <p>It checks if there is no winning player, and if the current player has the points required for winning.</p>
  <p>If both are true, it means the player should win. However, before doing that, it checks if all players are synchronised, to ensure that the state is correct.</p>
  <p>If all players are synchronised, it sets the <span class="inline2">winning_player</span> variable. This results in the first condition becoming <span class="inline2">false</span>, ensuring that <span class="inline2">rollback_sync_on_frame()</span> is not called again.</p>
  <p>This means the function is used as a toggle, instead of running continuously every frame.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Rollback_Functions.htm">Rollback Functions</a></div>
        <div>Next: <a data-xref="{title}" href="rollback_use_random_input.htm">rollback_use_random_input</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
rollback_sync_on_frame
-->
  <!-- TAGS
rollback_sync_on_frame
-->
</body>
</html>