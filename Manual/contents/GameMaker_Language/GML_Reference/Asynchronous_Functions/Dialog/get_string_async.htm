<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>get_string_async</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for get_string_async" />
  <meta name="rh-index-keywords" content="get_string_async" />
  <meta name="search-keywords" content="get_string_async" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">get_string_async</span></h1>
  <p>This function opens a window and displays a message as well as a space for the user to input a string (which will contain the supplied default string to start with).</p>
  <p>This is an asynchronous function, and as such <span data-keyref="GameMaker Name">GameMaker</span> does <i>not</i> block the device it is being run on while waiting for an answer, but rather keeps on running events as normal. Once the user has typed out their string and pressed the <strong>Okay</strong> button, an <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm">asynchronous Dialog event </a>is triggered which, for the duration of that event <i>only</i>, will have a <span data-keyref="Type_ID_DS_Map"><a href="../../Data_Structures/DS_Maps/ds_map_create.htm" target="_blank">DS Map</a></span> stored in the variable <span class="inline2"><a data-xref="{title}" href="../../../GML_Overview/Variables/Builtin_Global_Variables/async_load.htm">async_load</a></span>.</p>
  <p>This map will contain the following three keys:</p>
  <ul class="colour">
    <li><span class="inline2">&quot;id&quot;</span> is the value that was returned by the function when called.</li>
    <li><span class="inline2">&quot;status&quot;</span> will be either <span class="inline2">true</span> for the <strong>Okay</strong> button being pressed, or <span class="inline2">false</span> if the message was cancelled (where applicable as not all target platforms permit the message to be cancelled).</li>
    <li><span class="inline2">&quot;result&quot;</span> will hold the string that contains the user input (or an empty string <span class="inline2">&quot;&quot;</span> if none was supplied).</li>
  </ul>
  <div data-conref="../../../../assets/snippets/Note_Dialog_For_Debug_Only.hts"> </div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">get_string_async</span>(string, default);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>string</td>
        <td><span data-keyref="Type_String"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>The message to show in the dialog</td>
      </tr>
      <tr>
        <td>default</td>
        <td><span data-keyref="Type_String"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>The default string</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_Async_Event"><a href="../Asynchronous_Functions.htm" target="_blank">Async Request ID</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p>The <b>Mouse Left Pressed Event</b> (for example) of the object that is showing the message would have the following code:</p>
  <p class="code_heading">Mouse Left Pressed Event</p>
  <p class="code">msg = <span data-field="title" data-format="default">get_string_async</span>(&quot;What&#39;s your name?&quot;, &quot;Anon&quot;);</p>
  <p>The above will show a message requesting that the user input a string and press <strong>Okay</strong>. The async ID is stored in the variable <span class="inline2">msg</span> and will be used in the asynchronous <a data-xref="{title}" href="../../../../The_Asset_Editors/Object_Properties/Async_Events/Dialog.htm">Dialog</a> event as shown below:</p>
  <p class="code_heading">Async Dialog Event</p>
  <p class="code">var _id = ds_map_find_value(async_load, &quot;id&quot;);<br />
    if (_id == msg)<br />
    {<br />
        if (ds_map_find_value(async_load, &quot;status&quot;))<br />
        {<br />
            if (ds_map_find_value(async_load, &quot;result&quot;) != &quot;&quot;)<br />
            {<br />
                global.name = ds_map_find_value(async_load, &quot;result&quot;);<br />
            }<br />
        }<br />
    }</p>
  <p>The above code checks the <span class="inline2">&quot;id&quot;</span> key of the returned <span data-keyref="Type_ID_DS_Map"><a href="../../Data_Structures/DS_Maps/ds_map_create.htm" target="_blank">DS Map</a></span> against the value stored in the variable <span class="inline2">msg</span>. If they are the same, it then checks to see if <strong>Okay</strong> was pressed (rather than the window being closed/cancelled) and if it returns <span class="inline2">true</span> it then checks the <span class="inline2">&quot;result&quot;</span> of a string to make sure that no empty strings were returned before setting a global variable.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Dialog.htm">Dialog</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="get_integer_async.htm">get_integer_async</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
get_string_async
-->
  <!-- TAGS
get_string_async
-->
</body>
</html>