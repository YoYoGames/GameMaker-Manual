<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <title>call_later</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="template" content="../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Bart Teunis" />
  <meta name="topic-comment" content="Reference page for call_later" />
  <meta name="rh-index-keywords" content="call_later" />
  <meta name="search-keywords" content="call_later" />
</head>
<body>
  <h1>call_later</h1>
  <p>This function triggers a callback function after the specified time or after a certain interval. It does this by creating a <span data-keyref="Type_Resource_TimeSource">Time Source</span> (see <a data-xref="{title}" href="Time_Sources.htm">Time Sources</a>).</p>
  <p>Note that you do not need to clean up this <span data-keyref="Type_Resource_TimeSource">Time Source</span> yourself as <span data-keyref="GameMaker Name">GameMaker</span> will remove it from memory when it is no longer needed.</p>
  <p>To cancel the callback function, see <span class="inline3_func"><a data-xref="{title}" href="call_cancel.htm">call_cancel</a></span>.</p>
  <p class="note"><span class="important">IMPORTANT</span> While this function returns an actual time source, it cannot be used with the time source functions, as the time sources used by <span class="inline3_func"><a href="call_later.htm">call_later</a></span> and <span class="inline3_func"><a href="call_cancel.htm">call_cancel</a></span> are &quot;invisible&quot; - they will not appear as children of any built-in time sources and cannot be used with other time source functions. They are, however, included in the time source count returned by <a href="../Debugging/debug_event.htm">debug_event(&quot;ResourceCou<span class="inline"></span>nts&quot;)</a>.</p>
  <h2>Arguments</h2>
  <p>The following is a breakdown of this function&#39;s arguments: </p>
  <h3><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Period</a></h3>
  <div class="droptext" data-targetname="drop-down2">
    <p class="dropspot">This is a period of time that may be expressed in seconds or frames, depending on the unit specified in the next argument.</p>
    <p class="dropspot">When using frames as the unit, the period must be an integer. Non-integer values are rounded down (floored), with the exception of values lower than 1, which are rounded up to 1.</p>
  </div>
  <h3><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down3" href="#">Unit</a></h3>
  <div class="droptext" data-targetname="drop-down3">
    <p class="dropspot">This is the unit that the period is expressed in, and may be <span class="inline2">time_source_units_seconds</span> or <span class="inline2">time_source_units_frames</span>.</p>
    <p class="dropspot">See: <a data-xref="{title}" href="Time_Source_Units.htm">Time Source Units</a></p>
    <p class="dropspot">You can use a beats-per-minute value by using <span class="inline"><a href="time_bpm_to_seconds.htm">time_bpm_to_seconds()</a></span>.</p>
  </div>
  <h3><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down4" href="#">Callback</a></h3>
  <div class="droptext" data-targetname="drop-down4">
    <p class="dropspot">You must specify a &quot;callback&quot; <a href="../../GML_Overview/Method_Variables.htm">method</a> that is called when the <span data-keyref="Type_Resource_TimeSource">Time Source</span> expires.</p>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down6" href="#">Loop</a>
  <p class="dropspot" data-targetname="drop-down6">Whether the time source should loop.</p>
  </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">call_later(period, unit, callback, [loop=false]);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>period</td>
        <td><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The period that the <span data-keyref="Type_Resource_TimeSource">Time Source</span> runs for, in the given units</td>
      </tr>
      <tr>
        <td>units</td>
        <td><span data-keyref="Type_Constant_TimeSource_Unit"><a href="Time_Source_Units.htm" target="_blank">Time Source Unit Constant</a></span></td>
        <td>The units that the given period is in</td>
      </tr>
      <tr>
        <td>callback</td>
        <td><span data-keyref="Type_Method"><a href="../../GML_Overview/Method_Variables.htm" target="_blank">Method</a></span> or <span data-keyref="Type_Function_Script"><a href="../../GML_Overview/Script_Functions.htm" target="_blank">Script Function</a></span></td>
        <td>The method or script function to call after the specified time</td>
      </tr>
      <tr>
        <td>loop</td>
        <td><span data-keyref="Type_Bool"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
        <td><span class="optional">OPTIONAL</span> Whether to loop the <span data-keyref="Type_Resource_TimeSource">Time Source</span> (default is <span class="inline2">false</span>)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_TimeSource"><a href="time_source_create.htm" target="_blank">Time Source</a></span></p>
  <p> </p>
  <h4>Example 1:</h4>
  <p class="code">var _callback = function()<br />
    {<br />
        show_debug_message(&quot;Five seconds have passed!&quot;);<br />
    }<br />
    <br />
    var _handle = call_later(5, time_source_units_seconds, _callback);
  </p>
  <p>In this example, we create a callback function that shows a debug message after five seconds have passed. After that, the underlying <span data-keyref="Type_Resource_TimeSource">Time Source</span> is destroyed.</p>
  <h4>Example 2:</h4>
  <p class="code">var _create_enemy = function()<br />
    {<br />
        var _x = random(room_width);<br />
        var _y = random(room_height);<br />
        instance_create_depth(_x, _y, depth, obj_enemy);<br />
    }<br />
    <br />
    var _handle = call_later(10, time_source_units_seconds, _create_enemy, true);
  </p>
  <p>In this example, we create a callback function that creates a new enemy at a random position in the room. This function is then executed every 10 seconds by passing it to <a data-xref="{title}" href="call_later.htm">call_later</a>. The last argument is set to <span class="inline2">true</span> so the function keeps getting called every 10 seconds.</p>
  <p>Use <a data-xref="{title}" href="call_cancel.htm">call_cancel</a> with the handle returned by <a data-xref="{title}" href="call_later.htm">call_later</a> to stop the <span data-keyref="Type_Resource_TimeSource">Time Source</span> and the calls to the callback.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Time_Sources.htm">Time Sources</a> </div>
        <div>Next: <a data-xref="{title}" href="call_cancel.htm">call_cancel</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
call_later
-->
  <!-- TAGS
call_later
-->
</body>
</html>