<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_poke</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_poke" />
  <meta name="rh-index-keywords" content="buffer_poke,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
  <meta name="search-keywords" content="buffer_poke" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">buffer_poke</span></h1>
  <p>With this function you can write data into a buffer at the specified offset, without changing the <a href="buffer_seek.htm">seek position</a>. This is different from <span class="inline3_func"><a data-xref="{title}" href="buffer_write.htm">buffer_write</a></span>, which uses the <a href="buffer_tell.htm">current seek position</a> as the offset and advances that with the amount of bytes written.</p>
  <p>You supply the function with a buffer, and then the offset position from the buffer start (in bytes) within that buffer to write to, as well as the data type and the value to be written.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">buffer_poke</span>(buffer, offset, type, value);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a href="buffer_create.htm" target="_blank">Buffer</a></span></td>
        <td>The buffer to use.</td>
      </tr>
      <tr>
        <td>offset</td>
        <td><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The offset position (in bytes) within the buffer to write the given data to.</td>
      </tr>
      <tr>
        <td>type</td>
        <td><span data-keyref="Type_Constant_Buffer_Data_Type"><a href="buffer_write.htm" target="_blank">Buffer Data Type Constant</a></span></td>
        <td>The type of data that is to be written to the buffer (see the list of constants <a href="buffer_write.htm">here</a>).</td>
      </tr>
      <tr>
        <td>value</td>
        <td><span data-keyref="Type_Any"><a href="../../GML_Overview/Data_Types.htm#variable" target="_blank">Any</a></span></td>
        <td>The data to add to the buffer, in accordance with the type specified.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code"><span data-field="title" data-format="default">buffer_poke</span>(buff, 3, buffer_u8, colour_get_blue(image_blend));</p>
  <p>The above code will add the blue component value of the calling instance&#39;s <span class="inline2"><a data-xref="{title}" href="../Asset_Management/Sprites/Sprite_Instance_Variables/image_blend.htm">image_blend</a></span> colour into the buffer stored in the variable <span class="inline2">buff</span>, at the third position in the buffer as an unsigned 8bit value.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Buffers.htm">Buffers</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="buffer_get_type.htm">buffer_get_type</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_poke
-->
  <!-- TAGS
buffer_poke
-->
</body>
</html>