<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_write</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_write" />
  <meta name="rh-index-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
  <meta name="search-keywords" content="buffer_write,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">buffer_write</span></h1>
  <p>This function can be used to write data to a previously created buffer. The data you write must be in agreement with the &quot;type&quot; argument of this function, meaning that you can&#39;t try to write a string as an unsigned 16bit integer, for example.</p>
  <p>The function will write your given value at the buffer&#39;s current <a href="buffer_seek.htm">seek position</a>.</p>
  <p>The following constants can be used to define the data type:</p>
  <div data-conref="../../../assets/snippets/buffer_data_type_constants.hts"> </div>
  <p>The function will return 0 if it succeeds or -1 if it fails.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">buffer_write</span>(buffer, type, value);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a href="buffer_create.htm" target="_blank">Buffer</a></span></td>
        <td>The buffer to write to.</td>
      </tr>
      <tr>
        <td>type</td>
        <td><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The type of data to be written to the buffer (see the list of constants above).</td>
      </tr>
      <tr>
        <td>value</td>
        <td><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The data to write.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span> (0 if success, or -1 if it fails)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">buffer_seek(buff, buffer_seek_start, 0);<br />
    <span data-field="title" data-format="default">buffer_write</span>(buff, buffer_s16, 0);<br />
    <span data-field="title" data-format="default">buffer_write</span>(buff, buffer_s16, x);<br />
    <span data-field="title" data-format="default">buffer_write</span>(buff, buffer_s16, y);
  </p>
  <p>The above code finds the start of the buffer stored in the variable <span class="inline2">buff</span> then writes a series of signed 16bit integer values to it.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Buffers.htm">Buffers</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="buffer_fill.htm">buffer_fill</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_write
buffer_u8
buffer_s8
buffer_u16
buffer_s16
buffer_u32
buffer_s32
buffer_u64
buffer_f16
buffer_f32
buffer_f64
buffer_bool
buffer_string
buffer_text
-->
  <!-- TAGS
buffer_write
-->
</body>
</html>