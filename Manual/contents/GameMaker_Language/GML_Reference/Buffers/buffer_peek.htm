<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>buffer_peek</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for buffer_peek" />
  <meta name="rh-index-keywords" content="buffer_peek,buffer_u8,buffer_s8,buffer_u16,buffer_s16,buffer_u32,buffer_s32,buffer_u64,buffer_f16,buffer_f32,buffer_f64,buffer_bool,buffer_string,buffer_text" />
  <meta name="search-keywords" content="buffer_peek" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">buffer_peek</span></h1>
  <p>The <span class="inline3_func"><span data-field="title" data-format="default">buffer_peek</span></span> function reads a piece of data of a certain type from the given buffer at an arbitrary offset position (in bytes).</p>
  <p>Like the <span class="inline3_func"><a data-xref="{title}" href="buffer_read.htm">buffer_read</a></span> function, this function also <em>reads</em> data from a buffer. <span class="inline3_func">buffer_read()</span>, however, always reads at the buffer&#39;s current &quot;seek&quot; position and advances this position by the number of bytes being read. This function allows you to read a given piece of data without changing the current seek position. You simply supply the function with a buffer, and then an offset position (from the buffer start) within that buffer to read from, as well as the data type that you want to read.</p>
  <p class="note"><b><span data-conref="../../../assets/snippets/Tag_note.hts"> </span></b> Using the incorrect data type for the data being read will result in erroneous values!</p>
  <p>If the function succeeds it returns the value that was read (a real, string, boolean, etc.), if it fails it returns simply <span class="inline2">undefined</span>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">buffer_peek</span>(buffer, offset, type);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>buffer</td>
        <td><span data-keyref="Type_ID_Buffer"><a href="buffer_create.htm" target="_blank">Buffer</a></span></td>
        <td>The buffer to use.</td>
      </tr>
      <tr>
        <td>offset</td>
        <td><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The offset position (in bytes) within the buffer to read the given data from.</td>
      </tr>
      <tr>
        <td>type</td>
        <td><span data-keyref="Type_Constant_Buffer_Data_Type"><a href="buffer_write.htm" target="_blank">Buffer Data Type Constant</a></span></td>
        <td>The type of data that is to be read from the buffer (see the list of constants <a href="buffer_read.htm">here</a>).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span>, <span data-keyref="Type_Bool"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span>, <span data-keyref="Type_String"><a href="../../GML_Overview/Data_Types.htm" target="_blank">String</a></span> or undefined (if it fails)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _red = buffer_peek(buff, 1, buffer_u8);<br />
    var _green = buffer_peek(buff, 2, buffer_u8);<br />
    var _blue = buffer_peek(buff, 3, buffer_u8);<br />
    image_blend = make_colour_rgb(_red, _green, _blue);</p>
  <p>The above code gets three values from three different positions within the buffer stored in the variable <span class="inline2">buff</span> and then uses those values to set the <span class="inline2"><a data-xref="{title}" href="../Asset_Management/Sprites/Sprite_Instance_Variables/image_blend.htm">image_blend</a></span> of the calling instance.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Buffers.htm">Buffers</a></div>
        <div style="float:right">Next: <a href="buffer_poke.htm">buffer_poke</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
buffer_peek
-->
  <!-- TAGS
buffer_peek
-->
</body>
</html>