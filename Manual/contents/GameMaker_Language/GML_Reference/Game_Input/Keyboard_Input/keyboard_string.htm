<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>keyboard_string</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for keyboard_string" />
  <meta name="rh-index-keywords" content="keyboard_string" />
  <meta name="search-keywords" content="keyboard_string" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">keyboard_string</span></h1>
  <p>This variable holds a string containing the last (at most) 1024 characters typed on the keyboard. This string will only contain printable characters typed, but it <i>will</i> correctly respond to pressing the backspace key by erasing the last character. This variable is <i>not</i> read only and you can change it, for example to set it to <span class="inline2">&quot;&quot;</span> (an empty string) if you handled it already, and you can use the <a href="../../Strings/Strings.htm">String Functions</a> to manipulate it.</p>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"> </span> When using the on-screen <a href="../Virtual_Keys_And_Keyboards/Virtual_Keys_And_Keyboards.htm">Virtual Keyboard</a>, <i>only</i> this variable will be updated with the keyboard input.</p>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"> </span> On Xbox GDK, this variable will only function when using the <a href="../Virtual_Keys_And_Keyboards/keyboard_virtual_show.htm">virtual keyboard</a>. See <a href="https://help.gamemaker.io/hc/en-us/articles/15111170357149">this Helpdesk article</a> for more info.</p>
  <p> </p>
  <h4><b>Syntax:</b></h4>
  <p class="code"><span data-field="title" data-format="default">keyboard_string</span></p>
  <p> </p>
  <h4><b>Returns:</b></h4>
  <p class="code"><span data-keyref="Type_String"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></p>
  <p> </p>
  <h4><b>Example:</b></h4>
  <p class="code">if string_length(<span data-field="title" data-format="default">keyboard_string</span>) &gt; 15<br />
    {<br />
        <span data-field="title" data-format="default">keyboard_string</span> = string_copy(<span data-field="title" data-format="default">keyboard_string</span>, 1, 15);<br />
    }</p>
  <p>The above code will limit the length of the keyboard string to 15 characters, removing those that are over that limit by copying the first fifteen characters back into the variable.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Keyboard_Input.htm">Keyboard Input</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="io_clear.htm">io_clear</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
keyboard_string
-->
  <!-- TAGS
keyboard_string
-->
</body>
</html>