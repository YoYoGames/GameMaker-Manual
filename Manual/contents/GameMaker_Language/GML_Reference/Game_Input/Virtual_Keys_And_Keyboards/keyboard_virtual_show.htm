<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>keyboard_virtual_show</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for keyboard_virtual_show" />
  <meta name="rh-index-keywords" content="keyboard_virtual_show,kbv_type_default,kbv_type_ascii,kbv_type_url,kbv_type_email,kbv_type_numbers,kbv_type_phone,kbv_type_phone_name,kbv_returnkey_default,kbv_returnkey_go,kbv_returnkey_google,kbv_returnkey_join,kbv_returnkey_next,kbv_returnkey_route,kbv_returnkey_search,kbv_returnkey_send,kbv_returnkey_yahoo,kbv_returnkey_done,kbv_returnkey_continue,kbv_returnkey_emergency,kbv_autocapitalize_none,kbv_autocapitalize_words,kbv_autocapitalize_sentences,kbv_autocapitalize_characters" />
  <meta name="search-keywords" content="keyboard_virtual_show,kbv_type_default,kbv_type_ascii,kbv_type_url,kbv_type_email,kbv_type_numbers,kbv_type_phone,kbv_type_phone_name,kbv_returnkey_default,kbv_returnkey_go,kbv_returnkey_google,kbv_returnkey_join,kbv_returnkey_next,kbv_returnkey_route,kbv_returnkey_search,kbv_returnkey_send,kbv_returnkey_yahoo,kbv_returnkey_done,kbv_returnkey_continue,kbv_returnkey_emergency,kbv_autocapitalize_none,kbv_autocapitalize_words,kbv_autocapitalize_sentences,kbv_autocapitalize_characters" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>keyboard_virtual_show</h1>
  <p>This function can be used to show the virtual keyboard on the device running the game. When you call this function you need to provide one of the following constants for each of the first three arguments:</p>
  <ul class="colour">
    <li><b>Keyboard type</b>: This constant is used to set which keyset will be available on the virtual keyboard. The available keyboard types are:</li>
  </ul>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Virtual_Keyboard_Type"><a href="keyboard_virtual_show.htm" target="_blank">Virtual Keyboard Type Constant</a></span></th>
      </tr>
      <tr>
        <th>Keyboard Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">kbv_type_default</span></td>
        <td>The default keyboard type for the current system.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_type_ascii</span></td>
        <td>An ASCII-only keyboard.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_type_url</span></td>
        <td>A normal keyboard optimized for URL entry. Usually features a &quot;.com&quot; or other domain keys, as well as &quot;/&quot; and &quot;.&quot; keys.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_type_email</span></td>
        <td>A normal keyboard optimized for e-mail entry. Usually features &quot;@&quot; and &quot;.&quot; characters.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_type_numbers</span></td>
        <td>A numbers-only keyboard, usually displayed as a number pad.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_type_phone</span></td>
        <td>A phone pad keyboard. Usually numbers-only with the &quot;*&quot; and &quot;#&quot; keys.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_type_phone_name</span></td>
        <td>A keyboard optimized for entering both a phone number and a name. Usually similar to an ASCII keyboard, but with a limited special characters selection.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <ul class="colour">
    <li><b>Return type</b>: This constant is used to set what is shown on the return/action key of the virtual keyboard. The available return types are:</li>
  </ul>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Virtual_Keyboard_Return_Type"><a href="keyboard_virtual_show.htm" target="_blank">Virtual Keyboard Return Type Constant</a></span></th>
      </tr>
      <tr>
        <th>Return Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_default</span></td>
        <td>The default return key title for the current system.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_go</span></td>
        <td>Sets the return key title to &quot;Go&quot;.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_google</span></td>
        <td>Sets the return key title to &quot;Google&quot;, or to a generic search icon in some cases.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_join</span></td>
        <td>Sets the return key title to &quot;Go&quot;.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_next</span></td>
        <td>Sets the return key title to &quot;Next&quot;.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_route</span></td>
        <td>Sets the return key title to &quot;Route&quot;.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_search</span></td>
        <td>Sets the return key title to &quot;Search&quot;, or to a generic search icon in some cases.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_send</span></td>
        <td>Sets the return key title to &quot;Send&quot;.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_yahoo</span></td>
        <td>Sets the return key title to &quot;Yahoo&quot;, or to a generic search icon in some cases.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_done</span></td>
        <td>Sets the return key title to &quot;Done&quot;.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_continue</span></td>
        <td>Sets the return key title to &quot;Continue&quot;.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_emergency</span></td>
        <td>Sets the return key title to &quot;Emergency Call&quot;.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <ul class="colour">
    <li><b>Autocapitalization type</b>: This constant is used to determine how the words typed via the virtual keyboard should be autocapitalized. The available autocapitalization types are:</li>
  </ul>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Virtual_Keyboard_Autocap_Type"><a href="keyboard_virtual_show.htm" target="_blank">Virtual Keyboard Autocapitalization Type Constant</a></span></th>
      </tr>
      <tr>
        <th>Autocapitalization Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">kbv_autocapitalize_none</span></td>
        <td>Autocapitalization is disabled.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_autocapitalize_words</span></td>
        <td>Words will be auto-capitalized.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_autocapitalize_sentences</span></td>
        <td>Sentences will be auto-capitalized.</td>
      </tr>
      <tr>
        <td><span class="inline">kbv_autocapitalize_characters</span></td>
        <td>All characters will be capitalized.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>The last argument is to enable/disable predictive text, and this would be set to <span class="inline">true</span> to permit it, and <span class="inline">false</span> otherwise, but note that just because it is permitted doesn&#39;t mean that it will be used as that will depend on the preferences of the user on the device. When in predictive text mode, the virtual keyboard will not generate normal <span data-keyref="GameMaker Name">GameMaker</span> keypress events. Instead, it will only update the <i>last</i> character pressed and keyboard string variables. This is due to the inability to detect whether a change in the internal text field used for detecting key presses came from an actual virtual keyboard key, or a text suggestion. In these cases you would want to read the <span class="inline">keyboard_string</span> input as opposed to reading any kind of raw key input.</p>
  <p>It is important to note too that the user will get different keyboards with different capabilities depending on the platform OS, with the following caveats for use per target:</p>
  <ul class="colour">
    <li><b>Android</b>: On Android, the keyboard type <span class="inline">kbv_type_phone_name</span> is not supported and will display an ASCII keyboard instead, and the return key type can only be <span class="inline">kbv_returnkey_go</span>, <span class="inline">kbv_returnkey_search</span>, <span class="inline">kbv_returnkey_next</span>, <span class="inline">kbv_returnkey_send</span> or <span class="inline">kbv_returnkey_done</span>. If other return key types are used on that platform, the system will default to the replacement return keys listed below:</li>
  </ul>
  <table>
    <tbody>
      <tr>
        <th>Unavailable return key</th>
        <th>Replacement key</th>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_google<br />
            kbv_returnkey_yahoo</span></td>
        <td><span class="inline">kbv_returnkey_search</span></td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_join<br />
            kbv_returnkey_route<br />
            kbv_returnkey_emergency</span></td>
        <td><span class="inline">kbv_returnkey_go</span></td>
      </tr>
      <tr>
        <td><span class="inline">kbv_returnkey_continue</span></td>
        <td><span class="inline">kbv_returnkey_next</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <ul class="colour">
    <li><b>AndroidTV / FireTV</b>: Custom return key types are <i>not</i> supported on ASCII keyboards - the default return key will always be displayed.</li>
    <br />
    <li><b>tvOS</b>: Predictive text and auto-capitalization are not supported on tvOS, and the height of the keyboard returned by system events and the function <span class="inline">keyboard_virtual_height()</span> will default to the screen height due to it spanning the entire screen and due to keyboard rect dimension functions being disabled on tvOS. Also note that physical (bluetooth) keyboard events will not be broadcast unless the virtual keyboard has been opened.</li>
    <li><strong>Xbox GDK</strong>: See <a href="http://help.gamemaker.io/hc/en-us/articles/15111170357149">this Helpdesk article</a></li>
  </ul>
  <p>Calling this function will generate a <a href="../../../../The_Asset_Editors/Object_Properties/Async_Events/System.htm">System Asynchronous Event</a>, in which the <span class="inline">async_load</span> DS map will be populated with the following key/value pairs:</p>
  <ul class="colour">
    <li>&quot;<b>event_type</b>&quot; - this will be &quot;<b>virtual keyboard status</b>&quot; when triggered by virtual keyboard functions.</li>
    <br />
    <li>&quot;<b>screen_height</b>&quot; - the height of the virtual keyboard (in pixels). This will be 0 if the keyboard is invisible.</li>
    <br />
    <li>&quot;<b>keyboard_status</b>&quot; - the current status of the keyboard, returned as one of the following strings:
      <ul class="colour">
        <li>&quot;hiding&quot;</li>
        <li>&quot;hidden&quot;</li>
        <li>&quot;showing&quot;</li>
        <li>&quot;visible&quot;</li>
      </ul>
    </li>
  </ul>
  <p> </p>
  <h4>Syntax</h4>
  <p class="code">keyboard_virtual_show(keyboard_type, return_key_type, autocapitalization_type, predictive_text_enabled);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>keyboard_type</td>
        <td><span data-keyref="Type_Constant_Virtual_Keyboard_Type"><a href="keyboard_virtual_show.htm" target="_blank">Virtual Keyboard Type Constant</a></span></td>
        <td>Determines the keyset available on the virtual keyboard <em>(see tables at the top)</em>.</td>
      </tr>
      <tr>
        <td>return_key_type</td>
        <td><span data-keyref="Type_Constant_Virtual_Keyboard_Return_Type"><a href="keyboard_virtual_show.htm" target="_blank">Virtual Keyboard Return Type Constant</a></span></td>
        <td>Determines what is shown on the return/action key of the virtual keyboard (<em>see tables at the top)</em>.</td>
      </tr>
      <tr>
        <td>autocapitalization_type</td>
        <td><span data-keyref="Type_Constant_Virtual_Keyboard_Autocap_Type"><a href="keyboard_virtual_show.htm" target="_blank">Virtual Keyboard Autocapitalization Type Constant</a></span></td>
        <td>Determines how/if the words typed via the virtual keyboard will be autocapitalized <em>(see tables at the top)</em>.</td>
      </tr>
      <tr>
        <td>predictive_text_enabled</td>
        <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
        <td>Set to <span class="inline">true</span>/<span class="inline">false</span> to enable/disable predictive text input.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">if (input == false) <br />
    {<br />
        input = true;<br />
        keyboard_virtual_show(kbv_type_numbers, kbv_returnkey_default, kbv_autocapitalize_none, false);<br />
    }</p>
  <p>The above code will bring up the OS virtual keyboard if the given variable is not set to <span class="inline">true</span>.</p>
  <p><strong></strong><b></b></p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Virtual_Keys_And_Keyboards.htm">Virtual Keys And Keyboards</a></div>
        <div style="float:right">Next: <a href="keyboard_virtual_hide.htm">keyboard_virtual_hide</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
keyboard_virtual_show
kbv_type_default
kbv_type_ascii
kbv_type_url
kbv_type_email
kbv_type_numbers
kbv_type_phone
kbv_type_phone_name
kbv_returnkey_default
kbv_returnkey_go
kbv_returnkey_google
kbv_returnkey_join
kbv_returnkey_next
kbv_returnkey_route
kbv_returnkey_search
kbv_returnkey_send
kbv_returnkey_yahoo
kbv_returnkey_done
kbv_returnkey_continue
kbv_returnkey_emergency
kbv_autocapitalize_none
kbv_autocapitalize_words
kbv_autocapitalize_sentences
kbv_autocapitalize_characters
-->
  <!-- TAGS
keyboard_virtual_show
-->
</body>
</html>