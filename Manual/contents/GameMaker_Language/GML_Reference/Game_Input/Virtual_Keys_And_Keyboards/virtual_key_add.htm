<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>virtual_key_add</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for virtual_key_add" />
  <meta name="rh-index-keywords" content="virtual_key_add" />
  <meta name="search-keywords" content="virtual_key_add" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">virtual_key_add</span></h1>
  <p>This function adds a virtual key that covers a portion of the screen area, mapping &quot;touches&quot; of this area to a keyboard key.</p>
  <p>This function enables you to map &quot;touches&quot; of a screen area to keyboard events. This means that once you have assigned an area to a virtual key, all touches on that area will trigger the keyboard event corresponding to the key you have mapped to the area. You can assign each virtual key you define to a variable too, which can then be used in the further virtual key functions to show, hide and delete them. These keys are assigned on a <i>per room</i> basis and will be automatically removed by <span data-keyref="GameMaker Name">GameMaker</span> when changing rooms.</p>
  <p>The actual position of the virtual key is based on the <i>screen</i> position rather than room position and so the x/y values are absolute on the screen. This means that you don&#39;t need to worry about the use of views or the relative room coordinates, and can simply define the keys in the <strong>Create Event</strong> of an object (you only need to define a virtual key once per room), then draw your key sprites in the <a href="../../../../The_Asset_Editors/Object_Properties/Draw_Events.htm">Draw GUI Event</a>, sizing the GUI layer to be the same as the screen.</p>
  <p> </p>
  <h4>Syntax</h4>
  <p class="code"><span data-field="title" data-format="default">virtual_key_add</span>(x, y, w, h, keycode)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The x coordinate (left side) of the virtual key <i>on the screen</i></td>
      </tr>
      <tr>
        <td>y</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The y coordinate (top side) of the virtual key <i>on the screen</i></td>
      </tr>
      <tr>
        <td>w</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The width of the virtual key</td>
      </tr>
      <tr>
        <td>h</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The height of the virtual key</td>
      </tr>
      <tr>
        <td>keycode</td>
        <td><span data-keyref="Type_Constant_VK"><a href="../Keyboard_Input/Keyboard_Input.htm" target="_blank">Virtual Key Constant (vk_*)</a></span></td>
        <td>Which keyboard key event should be triggered by touching this area</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_Virtual_Key_OnScreen"><a href="virtual_key_add.htm" target="_blank">Virtual Key ID</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">global.left = virtual_key_add(32, 32, 64, 64, vk_left);</p>
  <p>The above code creates a virtual key 64x64 pixels square, positioned on the screen at (32, 32) which will trigger the <span class="inline2">vk_left</span> event when touched and assigns the index of this virtual key to a global variable.<b></b></p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Virtual_Keys_And_Keyboards.htm">Virtual Keys And Virtual Keyboards</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="virtual_key_show.htm">virtual_key_show</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2025 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
virtual_key_add
-->
  <!-- TAGS
virtual_key_add
-->
</body>
</html>