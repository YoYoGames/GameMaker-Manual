<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gamepad_button_check_released</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for gamepad_button_check_released" />
  <meta name="rh-index-keywords" content="gamepad_button_check_released" />
  <meta name="search-keywords" content="gamepad_button_check_released" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gamepad_button_check_released</h1>
  <p>This function will return <span class="inline">true</span> or <span class="inline">false</span> depending on whether the given gamepad button is detected as having been released or not. Note that this function will only trigger <i>once</i> for the button the moment it has been released. For it to trigger again the button must first be pressed and then released once more. If you are checking an analogue button, then the check will take into consideration the <a href="gamepad_set_button_threshold.htm">threshold setting</a> and only return <span class="inline">true</span> when the raw input value goes under the given threshold (you can get this raw value using the function <span class="inline"><a href="gamepad_button_value.htm">gamepad_button_value()</a></span>).</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">gamepad_button_check_released(device, button);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>device</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>Which gamepad device &quot;slot&quot; to check.</td>
      </tr>
      <tr>
        <td>button</td>
        <td><span data-keyref="Type_Constant_Gamepad_Button">Gamepad Button Constant</span></td>
        <td>Which gamepad button <a href="Gamepad_Input.htm">constant</a> to check for.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Bool">Boolean</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">if (gamepad_button_check_released(0, gp_select)) <br />
    {<br />
        audio_play_sound(snd_Button, 0, false);<br />
        global.Pause = !global.Pause;<br />
    }</p>
  <p>The above code will detect whether the &quot;select&quot; button of the gamepad connected to device &quot;slot&quot; 0 has been pressed or not and toggle the global &quot;Pause&quot; variable.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Gamepad_Input.htm">Gamepad Input</a></div>
        <div style="float:right">Next: <a href="gamepad_button_count.htm">gamepad_button_count</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gamepad_button_check_released
-->
  <!-- TAGS
gamepad_button_check_released
-->
</body>
</html>