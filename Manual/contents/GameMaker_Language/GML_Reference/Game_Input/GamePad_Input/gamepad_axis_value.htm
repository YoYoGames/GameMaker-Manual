<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gamepad_axis_value</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for gamepad_axis_value" />
  <meta name="rh-index-keywords" content="gamepad_axis_value" />
  <meta name="search-keywords" content="gamepad_axis_value" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gamepad_axis_value</h1>
  <p>You can use this function to get the value of the different axes from a given gamepad slot. You supply the gamepad slot index to check, along with either an axis index constant (as listed <a href="Gamepad_Input.htm">here</a>), or an integer value between <span class="inline">0</span> and <span class="inline"><a href="gamepad_axis_count.htm">gamepad_axis_count()</a></span><span class="inline">-1</span>. The returned value will be between <span class="inline">-1</span> and <span class="inline">1</span> for each of the available horizontal and vertical axes.</p>
  <p>Note that the returned value is normalised to take into consideration the value set for the axis deadzone (using the function <span class="inline"><a href="gamepad_set_axis_deadzone.htm">gamepad_set_axis_deadzone()</a></span>), and so will always be between -1 and 0, and 0 and 1. For example, setting the deadzone to 0.2 will mean that pushing the stick right will only start returning a value from 0 - 1 when the <em>raw</em> axis value is over 0.2 - so for example, when the raw value is 0.2, the return value will be 0, when the raw value is at 0.5, the return value will be 0.375, or if the raw value is 0.9, then the return value would be 0.875.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">gamepad_axis_value(device, axisIndex);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>device</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>Which gamepad device &quot;slot&quot; to check.</td>
      </tr>
      <tr>
        <td>axisIndex</td>
        <td><span data-keyref="Type_Constant_Gamepad_Axis"><a href="Gamepad_Input.htm" target="_blank">Gamepad Axis Constant</a></span></td>
        <td>The axis index to check (see the <a href="Gamepad_Input.htm">constants list</a>).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var haxis = gamepad_axis_value(0, gp_axislh);<br />
    var vaxis = gamepad_axis_value(0, gp_axislv);<br />
    direction = point_direction(0, 0, haxis, vaxis);<br />
    speed = point_distance(0 ,0, haxis, vaxis) * 5;</p>
  <p>The above code sets the speed and direction of the instance based on the returned values of the left analog controller of the gamepad plugged into device &quot;slot&quot; 0.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Gamepad_Input.htm">Gamepad Input</a></div>
        <div style="float:right">Next: <a href="gamepad_button_check.htm"> gamepad_button_check </a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gamepad_axis_value
-->
  <!-- TAGS
gamepad_axis_value
-->
</body>
</html>