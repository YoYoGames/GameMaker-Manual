<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>device_mouse_raw_x</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for device_mouse_raw_x" />
  <meta name="rh-index-keywords" content="device_mouse_raw_x" />
  <meta name="search-keywords" content="device_mouse_raw_x" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>device_mouse_raw_x</h1>
  <p>This function returns the raw x position of a touch on the device. What this means is that it returns the actual device definition of the x position that is being touched, <i>not</i> the <span data-keyref="GameMaker Name">GameMaker</span> one, and as such will ignore things like view position and scaling. Note that the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs</p>
  <p class="note"><b>NOTE</b>: This function is very much device dependent and you should experiment first with the desired target module and device to see what exactly is returned.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">device_mouse_raw_x(device);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>device</td><td><span data-keyref="Type_Real"></span></td>
        <td>The device (from 0 - <i>n</i>) that is being checked.</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">if (device_mouse_check_button(0, mb_left) &amp;&amp; device_mouse_check_button(1, mb_left)) <br />
    {<br />
        x_av = mean(device_mouse_raw_x(0), device_mouse_raw_x(1));<br />
        y_av = mean(device_mouse_raw_y(0), device_mouse_raw_y(1));<br />
    }</p>
  <p>The above code checks to see if device1 and device2 are being pressed, and if they are it calculates the average position of the x/y coordinates between each press point.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Device_Input.htm">Device Input</a></div>
        <div style="float:right">Next: <a href="device_mouse_raw_y.htm">device_mouse_raw_y</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
device_mouse_raw_x
-->
  <!-- TAGS
device_mouse_raw_x
-->
</body>
</html>