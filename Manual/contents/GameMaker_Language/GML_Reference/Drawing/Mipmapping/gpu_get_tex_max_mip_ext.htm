<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_get_tex_max_mip_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_get_tex_max_mip_ext" />
  <meta name="rh-index-keywords" content="gpu_get_tex_max_mip_ext" />
  <meta name="search-keywords" content="gpu_get_tex_max_mip_ext" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>gpu_get_tex_max_mip_ext</h1>
  <p>With this function you can get the currently set maximum mipmap level which is to be used for a given shader sampler. You supply the index value for the shader sampler (as returned by the function <a href="../../Asset_Management/Shaders/shader_get_sampler_index.htm"><span class="inline">shader_get_sampler_index()</span></a>, and the function will return the current maximum mipmap level, where a value of 0 is the highest resolution, 1 is to use the first mipmap, 2 is the second etc... Note that this can be quite useful for avoiding bleeding artifacts when rendering textures, for example, setting the texture page border to 8px and then setting the max mipmap level to 3 will ensure you don&#39;t get any bleeding problems at greater render distances.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">gpu_get_tex_max_mip_ext(sampler_index);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>sampler_index</td><td><span data-keyref="Type_Handle_Shader_Sampler"></span></td>
        <td>The index of the shader sampler to get</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Real"></span> (default: 16)</p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _sampleIndex = shader_get_sampler_index(shd_Glass, &quot;s_Background&quot;);<br />
    var _spriteTex = sprite_get_texture(sprite_index, 0);<br />
    shader_set(shd_Glass);<br />
    if (gpu_get_tex_max_mip_ext(_sampleIndex) != 4) <br />
    {<br />
        gpu_set_tex_max_mip_ext(_sampleIndex, 4);<br />
    }<br />
    texture_set_stage(_sampleIndex , _spriteTex);<br />
    shader_reset();</p>
  <p>The above code sets the maximum mipmap level to 4 for the given shader texture sampler if it has not already been set to 4.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Mipmapping.htm">Mipmapping</a></div>
        <div style="float:right">Next: <a href="gpu_get_tex_max_aniso.htm">gpu_get_tex_max_aniso</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gpu_get_tex_max_mip_ext
-->
  <!-- TAGS
gpu_get_tex_max_mip_ext
-->
</body>
</html>