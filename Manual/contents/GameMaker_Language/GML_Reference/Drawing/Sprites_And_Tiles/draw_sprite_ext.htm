<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <title>draw_sprite_ext</title>
    <meta name="generator" content="Adobe RoboHelp 2020"/>
    <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
    <script src="../../../../assets/scripts/main_script.js" type="module"></script>
    <meta name="rh-authors" content="Mark Alexander"/>
    <meta name="topic-comment" content="Reference page for draw_sprite_ext"/>
    <meta name="rh-index-keywords" content="draw_sprite_ext"/>
    <meta name="search-keywords" content="draw_sprite_ext"/>
    <meta name="is_pure" content="true"/>
  </head>
  <body><!--<div class="body-scroll" style="top: 150px;">-->
    <h1>draw_sprite_ext</h1>
    <p>This function will draw the given sprite as in the function <a href="draw_sprite.htm"><span class="inline">draw_sprite()</span></a> but with additional options to change the scale, blending, rotation and alpha of the sprite being drawn. Changing these values does <i>not</i> modify the resource in any way (only how it is drawn), and you can use any of the available <a href="../../Asset_Management/Sprites/Sprite_Instance_Variables/Sprite_Instance_Variables.htm">sprite variables</a> instead of direct values for all the arguments in the function. The image below illustrates how different values affect the drawing of the sprite:</p>
    <p><img alt="sraw_sprite_ext examples" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/spr_ext.png"/></p>
    <p id="p"><span data-conref="../../../../assets/snippets/This_function_supports_nineslice.hts"> </span></p>
    <p class="note"><b>NOTE</b>: Colour blending is only recommended for the HTML5 target when WebGL is enabled, although you can still set the blending colour if it is not enabled and it will blend the sprite as normal. However all blending in this way creates a duplicate sprite which is then stored in the cache and used when required. This is far from optimal and if you use multiple colour changes it will slow down your games performance unless you activate WebGL. if you do not wish to use WebGL, then you can set the font cache size to try and limit this should it be necessary using the function <span style="font-size:1px;"><a href="../../Asset_Management/Sprites/Sprite_Manipulation/sprite_set_cache_size_ext.htm"><span class="inline">sprite_set_cache_size()</span></a></span>.</p>
    <p class="note"><b>NOTE</b>: This function may not work as expected when using skeleton animation sprites, and you may find that the function only draws the first frame of the default pose. You should be using the <span class="inline">draw_skeleton_*</span> functions instead.</p>
    <p> </p>
    <h4>Syntax:</h4>
    <p class="code">draw_sprite_ext( sprite, subimg, x, y, xscale, yscale, rot, colour, alpha );</p>
    <table>
      <tbody>
        <tr>
          <th>Argument</th>
          <th>Type</th>
          <th>Description</th>
        </tr>
        <tr>
          <td>sprite</td>
          <td><span data-keyref="Type_Asset_Sprite"></span></td>
          <td>The sprite to draw.</td>
        </tr>
        <tr>
          <td>subimg</td>
          <td><span data-keyref="Type_Real"></span></td>
          <td>The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object).</td>
        </tr>
        <tr>
          <td>x</td>
          <td><span data-keyref="Type_Real"></span></td>
          <td>The x coordinate of where to draw the sprite.</td>
        </tr>
        <tr>
          <td>y</td>
          <td><span data-keyref="Type_Real"></span></td>
          <td>The y coordinate of where to draw the sprite.</td>
        </tr>
        <tr>
          <td>xscale</td>
          <td><span data-keyref="Type_Real"></span></td>
          <td>The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc...</td>
        </tr>
        <tr>
          <td>yscale</td>
          <td><span data-keyref="Type_Real"></span></td>
          <td>The vertical scaling of the sprite as a multiplier: 1 = normal scaling, 0.5 is half etc...</td>
        </tr>
        <tr>
          <td>rot</td>
          <td><span data-keyref="Type_Real"></span></td>
          <td>The rotation of the sprite. 0=right way up, 90=rotated 90 degrees counter-clockwise etc...</td>
        </tr>
        <tr>
          <td>colour</td>
          <td><span data-keyref="Type_Constant_Colour"></span></td>
          <td>The colour with which to blend the sprite. <span class="inline">c_white</span> is to display it normally.</td>
        </tr>
        <tr>
          <td>alpha</td>
          <td><span data-keyref="Type_Real"></span></td>
          <td>The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque).</td>
        </tr>
      </tbody>
    </table>
    <p> </p>
    <h4>Returns:</h4>
    <p class="code"><span data-keyref="Type_Void"></span></p>
    <p> </p>
    <h4>Example:</h4>
    <p class="code">draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);</p>
    <p>This will draw the instances assigned sprite with all its default values (essentially the same as using <span class="inline">draw_self</span>).</p>
    <p> </p>
    <p> </p>
    <p> </p>
    <div class="footer">
      <div class="buttons">
        <div class="clear">
          <div style="float:left">Back: <a href="Sprites_And_Tiles.htm">Sprites And Tiles</a></div>
          <div style="float:right">Next: <a href="draw_sprite_general.htm">draw_sprite_general</a></div>
        </div>
      </div>
      <h5><span data-keyref="Copyright Notice">Â© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
    </div>
    <!-- KEYWORDS
draw_sprite_ext
--><!-- TAGS
draw_sprite_ext
--></body>
</html>