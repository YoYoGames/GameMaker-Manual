<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_blendmode_ext_sepalpha</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for the function gpu_set_blendmode_ext_sepalpha" />
  <meta name="rh-index-keywords" content="gpu_set_blendmode_ext_sepalpha,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour" />
  <meta name="search-keywords" content="gpu_set_blendmode_ext_sepalpha,bm_zero,bm_one,bm_src_colour,bm_inv_src_colour,bm_src_alpha,bm_inv_src_alpha,bm_dest_alpha,bm_inv_dest_alpha,bm_dest_colour,bm_inv_dest_colour,bm_src_alpha_sat,bm_src_color,bm_inv_src_color,bm_dest_color,bm_inv_dest_colour" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">gpu_set_blendmode_ext_sepalpha</span></h1>
  <p>This function permits you to set the different component parts that should be factored together to create a custom blend mode, selecting different blend mode factors for the RGB components and the alpha component.</p>
  <p>When <span data-keyref="GameMaker Name">GameMaker</span> goes to draw a pixel there is a source colour (the colour of the pixel we&#39;re going to draw) and a destination colour (the colour that&#39;s already in the pixel we&#39;re drawing to), so when determining the new colour of the pixel, the source and destination colours are calculated according to the chosen blend mode.</p>
  <p>Each component of the colours is stored as a floating point value between 0 and 1, and the new colour is calculated by multiplying each component of the source colour by some factor and by multiplying each component of destination colour by some other factor and then adding the results together component by component (or using a different <a href="gpu_set_blendequation.htm">equation</a>).</p>
  <p>With this function you can set the different component parts that should be factored together to create a custom blend mode, selecting different blend mode factors for the RGB components and the alpha component. So the <span class="inline2">src</span> and <span class="inline2">dest</span> argument will use the first 3 blend mode values (RGB) and the <span class="inline2">alphasrc</span> and <span class="inline2">alphadest</span> arguments will take the last part of the blend mode factor. For example, if you have the RGB source as <span class="inline2">bm_zero</span>, then (0, 0, 0) will be used. If you then set the Alpha source as <span class="inline2">bm_one</span> then (1) will be used, giving a final source blend mode of (0, 0, 0, 1).</p>
  <p>The following chart shows the RGBA values for each blend mode, where (Rs, Gs, Bs, As) are considered the source values and (Rd, Gd, Bd, Ad) are the destination values. The eleven constants that are available for use can be either source or destination (or both) when used in this function.</p>
  <div data-conref="../../../../assets/snippets/Table_Gpu_blend_modes_ext.hts"> </div>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_important.hts"> </span> HTML5 without WebGL enabled will <b>not</b> be able to display following modes correctly:</p>
  <ul class="colour" style="padding-left: 120px">
    <li><span class="inline">bm_src_colour</span></li>
    <li><span class="inline">bm_inv_src_colour</span></li>
    <li><span class="inline">bm_dest_colour</span></li>
    <li><span class="inline">bm_inv_dest_colour</span></li>
    <li><span class="inline">bm_src_alpha_sat</span></li>
  </ul>
  <p> </p>
  <p>Note that you can either supply four individual arguments to this function or you can supply an array of arguments (as returned by the function <span class="inline3_func"><a data-xref="{title}" href="gpu_get_blendmode_ext_sepalpha.htm">gpu_get_blendmode_ext_sepalpha</a></span> for example). If supplying an array, it should have the following four elements:</p>
  <ul class="colour">
    <li>[0] = Source blend mode minus the alpha component (default is <span class="inline">bm_src_alpha</span> (As, As, As))</li>
    <li>[1] = Destination blend mode minus the alpha component (default is <span class="inline">bm_inv_src_alpha</span> (1-As, 1-As, 1-As))</li>
    <li>[2] = Source alpha component (default is <span class="inline">bm_src_alpha</span> (As))</li>
    <li>[3] = Destination alpha component (default is <span class="inline">bm_inv_src_alpha</span> (1-As))</li>
  </ul>
  <p>To help you get the most from blend modes and to help understand how they work and how they affect the final image being drawn to the screen, we recommend that you read the following guide:</p>
  <ul class="colour">
    <li><a data-xref="{title}" href="../../../../Additional_Information/Guide_To_Using_Blendmodes.htm">Guide To Using Blendmodes</a></li>
  </ul>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">gpu_set_blendmode_ext_sepalpha</span>(src, dest, alphasrc, alphadest);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>src</td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor"><a href="gpu_get_blendmode_ext.htm" target="_blank">Blend Mode Factor Constant</a></span></td>
        <td>Source blend mode factor for RGB (see constants above)</td>
      </tr>
      <tr>
        <td>dest</td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor"><a href="gpu_get_blendmode_ext.htm" target="_blank">Blend Mode Factor Constant</a></span></td>
        <td>Destination blend mode factor for RGB (see constants above)</td>
      </tr>
      <tr>
        <td>alphasrc</td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor"><a href="gpu_get_blendmode_ext.htm" target="_blank">Blend Mode Factor Constant</a></span></td>
        <td>Source blend mode factor for Alpha (see constants above)</td>
      </tr>
      <tr>
        <td>alphadest</td>
        <td><span data-keyref="Type_Constant_Draw_Blend_Mode_Factor"><a href="gpu_get_blendmode_ext.htm" target="_blank">Blend Mode Factor Constant</a></span></td>
        <td>Destination blend mode factor for Alpha (see constants above)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _bm = gpu_get_blendmode_ext_sepalpha();<br />
    _bm[0] = bm_src_alpha;<br />
    _bm[1] = bm_inv_src_alpha;<br />
    gpu_set_blendmode_ext_sepalpha(_bm);</p>
  <p>The above code creates a local array and gets the current extended blend mode with separate alpha values. This array is then manipulated and returned to set the blend mode.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="GPU_Control.htm">GPU Control</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="gpu_set_blendequation.htm">gpu_set_blendequation</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2025 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_blendmode_ext_sepalpha
bm_zero
bm_one
bm_src_colour
bm_inv_src_colour
bm_src_alpha
bm_inv_src_alpha
bm_dest_alpha
bm_inv_dest_alpha
bm_dest_colour
bm_inv_dest_colour
bm_src_alpha_sat
-->
  <!-- TAGS
gpu_set_blendmode_ext_sepalpha
-->
</body>
</html>