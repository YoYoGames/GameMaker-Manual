<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>gpu_set_scissor</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="gpu_set_scissor" />
  <meta name="search-keywords" content="gpu_set_scissor" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">gpu_set_scissor</span></h1>
  <p>This function defines a rectangular &quot;scissor&quot; region within the <a href="../Surfaces/surface_set_target.htm">render target</a>. Anything you draw after this function will only be output within the scissor region, essentially being cropped, as anything outside of it will be &quot;cut out&quot;.</p>
  <p>Coordinates are rounded to integers and are local to the render target region, i.e. <span class="inline2">(0, 0)</span> is the top-left corner of the surface you are drawing to.</p>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"> </span> Changing the surface target or viewport will reset the scissor region to cover the entirety of the new render target.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">gpu_set_scissor</span>(x_or_struct, [y, w, h]);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x_or_struct</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span> or <span data-keyref="Type_Struct"><a href="../../../GML_Overview/Structs.htm" target="_blank">Struct</a></span></td>
        <td>The X position of the scissor region, or a struct containing <span class="inline2">x</span>, <span class="inline2">y</span>, <span class="inline2">w</span>, <span class="inline2">h</span></td>
      </tr>
    </tbody>
    <tbody>
      <tr>
        <td>y</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span data-conref="../../../../assets/snippets/Tag_optional.hts"> </span> The Y position of the scissor region, must be specified if first argument is not a struct</td>
      </tr>
      <tr>
        <td>w</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span data-conref="../../../../assets/snippets/Tag_optional.hts"> </span> The width of the scissor region, must be specified if first argument is not a struct</td>
      </tr>
      <tr>
        <td>h</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td><span data-conref="../../../../assets/snippets/Tag_optional.hts"> </span> The height of the scissor region, must be specified if first argument is not a struct</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _scissor = gpu_get_scissor();<br />
    gpu_set_scissor(200, 200, 600, 600);<br />
    <br />
    draw_self();<br />
    <br />
    gpu_set_scissor(_scissor);
  </p>
  <p>This gets the current scissor region and stores it in a local variable. It then changes the scissor region, draws something, and resets the scissor region to what it was before the <span class="inline2">gpu_set_scissor()</span> call.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="GPU_Control.htm">GPU Control</a></div>
        <div>Next: <a data-xref="{title}" href="gpu_get_blendenable.htm">gpu_get_blendenable</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
gpu_set_scissor
-->
  <!-- TAGS
gpu_set_scissor
-->
</body>
</html>