<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>merge_colour</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section the function merge_colour" />
  <meta name="rh-index-keywords" content="merge_colour,merge_color" />
  <meta name="search-keywords" content="merge_colour,merge_color" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>With this function you can take two colours and then merge them together to make a new colour. The amount of each of the component colours can be defined by changing the &quot;amount&quot; argument, where a value of 0 will return the first colour (col1), a value of 1 will return the second colour (col2) and a value in between will return the corresponding mix. For example, a value of 0.5 will mix the two colours equally. The following image illustrates how this works by merging the colours red and blue together:</p>
  <p><img alt="Mege colour example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/merge_colour.png" /></p>
  <h4>Syntax:</h4>
  <p class="code">merge_colour(col1, col2, amount);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>col1</td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td>The first colour to merge</td>
     </tr>
      <tr>
        <td>col2</td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td>The second colour to merge</td>
     </tr>
      <tr>
        <td>amount</td><td><span data-keyref="Type_Real"></span></td>
        <td>How much of each colour should be merged. For example, 0 will return col1, 1 will return col2, and 0.5 would return a merge of both colours equally</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Constant_Colour">Colour Constant</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">col = merge_colour(c_lime, c_orange, 0.5);</p>
  <p>The above code uses the function to create a colour by merging lime and orange 50/50 and then stores its value in the variable &quot;col&quot; for later use.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Colour_And_Alpha.htm">Colour And Alpha</a></div>
        <div style="float:right">Next: <a href="draw_clear.htm">draw_clear</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
merge_colour
merge_color
-->
  <!-- TAGS
merge_colour
-->
</body>
</html>