<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>make_colour_hsv</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section the function make_colour_hsv" />
  <meta name="rh-index-keywords" content="make_colour_hsv,make_color_hsv" />
  <meta name="search-keywords" content="make_colour_hsv,make_color_hsv" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p><span data-keyref="GameMaker Name">GameMaker</span> provides this function (as well as others) to permit the user to make their own colours. This particular function takes three component parts, the <i>hue</i>, the <i>saturation</i> and the <i>value</i> (also know as &quot;luminosity&quot;) to create the colour desired. These values are taken as being between 0 and 255 so you can make 16,777,216 (256*256*256) colours with this! Below you can see an image of how these components look when separated:</p>
  <p><img alt="Make HSV colour example" class="center" src="../../../../assets/Images/Scripting_Reference/GML/Reference/Drawing/HSV.png" />The image on the left is a break-down of the individual components of the function, and then on the right is an illustration of how changing these components affects the end colour. As you can see, even without changing the hue (it stays at 0, red), we can dramatically change the colour with the other two settings, with saturation making the colour tone go from grey (0) to a pure tone (255), and with the value making it go from darker (0) to lighter (255).</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">make_colour_hsv(hue, sat, val);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>hue</td><td><span data-keyref="Type_Real"></span></td>
        <td>The hue of the colour</td>
     </tr>
      <tr>
        <td>sat</td><td><span data-keyref="Type_Real"></span></td>
        <td>How saturated the colour is</td>
     </tr>
      <tr>
        <td>val</td><td><span data-keyref="Type_Real"></span></td>
        <td>How dark the colour is</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Constant_Colour">Colour Constant</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">col = make_colour_hsv(100, 145, 255);</p>
  <p>The above code uses the function to create a colour and store its value in the variable &quot;col&quot; for later use.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Colour_And_Alpha.htm">Colour And Alpha</a></div>
        <div style="float:right">Next: <a href="make_colour_rgb.htm">make_colour_rgb</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
make_colour_hsv
make_color_hsv
-->
  <!-- TAGS
make_colour_hsv
-->
</body>
</html>