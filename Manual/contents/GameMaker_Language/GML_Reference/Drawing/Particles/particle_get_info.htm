<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>particle_get_info</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="particle_get_info,ps_mode_stream,ps_mode_burst" />
  <meta name="search-keywords" content="particle_get_info,ps_mode_stream,ps_mode_burst" />
  <meta name="template" content="assets/masterpages/Manual_Keyword_Page.htt" />
</head>
<body>
  <h1><span data-field="title" data-format="default">particle_get_info</span></h1>
  <p>This function returns a <a data-xref="{bookmarkText}" href="../../../GML_Overview/Structs.htm#struct">struct</a> with information about a <span data-keyref="Type_Asset_ParticleSystem"><a href="../../../../The_Asset_Editors/Particle_Systems.htm" target="_blank">Particle System Asset</a></span> created using <a data-xref="{title}" href="../../../../The_Asset_Editors/Particle_Systems.htm">The Particle System Editor</a>.</p>
  <p>The returned struct is a <span data-keyref="Type_Struct_PartSystem_Info"><a href="particle_get_info.htm#particle_system_info_struct" target="_blank">Particle System Info Struct</a></span>, which contains an <a href="../../../GML_Overview/Arrays.htm">Array</a> of <span data-keyref="Type_Struct_PartEmitter_Info"><a href="particle_get_info.htm#particle_emitter_info_struct" target="_blank">Particle Emitter Info Struct</a></span>s. Each of these emitter structs stores info on the particle type that the emitter uses in its <span class="inline2">parttype</span> variable, which contains a <span data-keyref="Type_Struct_PartType_Info"><a href="particle_get_info.htm#particle_type_info_struct" target="_blank">Particle Type Info Struct</a></span>.</p>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_warning.hts"> </span> If no valid <span data-keyref="Type_Asset_ParticleSystem"><a href="../../../../The_Asset_Editors/Particle_Systems.htm" target="_blank">Particle System Asset</a></span> is passed to the function, <span data-keyref="GameMaker Name">GameMaker</span> will throw an error.</p>
  <p>In a simplified way, the contents of the struct returned by this function look something like the following:</p>
  <p class="code">part_sys_info_struct =<br />
    {<br />
        emitters:<br />
        [<br />
            {<br />
                parttype:<br />
                {<br />
                    // Particle type properties...<br />
                }<br />
                // All other particle emitter properties...<br />
            }<br />
            // More emitters...<br />
        ]<br />
        // All other particle system properties...<br />
    };</p>
  <p>The tables below list all variables that are available in each of these three structs.</p>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down" href="#">Particle System Info</a></p>
  <div class="droptext" data-targetname="drop-down">
    <table id="particle_system_info_struct" style="caption-side: top" class=" cke_show_border">
      <caption>Particle System Info Struct</caption>
      <colgroup>
        <col style="width:33.33%" />
        <col style="width:33.33%" />
        <col style="width:33.33%" />
      </colgroup>
      <tbody>
        <tr>
          <th>Variable Name</th>
          <th>Data Type</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><span class="inline">name</span></td>
          <td><span data-keyref="Type_String"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">String</a></span></td>
          <td>The name of the particle system asset.</td>
        </tr>
        <tr>
          <td><span class="inline">xorigin</span></td>
          <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
          <td>The X origin of the particle system.</td>
        </tr>
        <tr>
          <td><span class="inline">yorigin</span></td>
          <td><span data-keyref="Type_Real"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Real</a></span></td>
          <td>The Y origin of the particle system.</td>
        </tr>
        <tr>
          <td><span class="inline">global_space</span></td>
          <td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td>
          <td>Whether this particle system has global space particles enabled (see <span class="inline3_func"><a data-xref="{title}" href="Particle_Systems/part_system_global_space.htm">part_system_global_space</a></span>).</td>
        </tr>
        <tr>
          <td><span class="inline">oldtonew</span></td>
          <td><span data-keyref="Type_Bool"><a target="_blank" href="../../../GML_Overview/Data_Types.htm">Boolean</a></span></td>
          <td>Whether old particles should be drawn behind new ones (<span class="inline2">true</span>) or not (<span class="inline2">false</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">emitters</span></td>
          <td><span data-keyref="Type_Array"><a target="_blank" href="../../../GML_Overview/Arrays.htm">Array</a></span> of <span data-keyref="Type_Struct_PartEmitter_Info"><a target="_blank" href="particle_get_info.htm#particle_emitter_info_struct">Particle Emitter Info Struct</a></span></td>
          <td>An array of emitter info structs, ordered the same as in <a data-xref="{title}" href="../../../../The_Asset_Editors/Particle_Systems.htm">The Particle System Editor</a>.</td>
        </tr>
      </tbody>
    </table>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down1" href="#">Particle Emitter Info</a></p>
  <div class="droptext" data-targetname="drop-down1">
    <table id="particle_emitter_info_struct" style="caption-side: top">
      <caption id="">Particle Emitter Inf<span id="particle_emitter_info_struct">o</span> Struct</caption>
      <colgroup>
        <col style="width:33.33%" />
        <col style="width:33.33%" />
        <col style="width:33.33%" />
      </colgroup>
      <tbody>
        <tr>
          <th>Variable Name</th>
          <th>Data Type</th>
          <th>Description</th>
        </tr>
        <tr>
          <td><span class="inline">ind</span></td>
          <td><span data-keyref="Type_ID_PartEmitter"><a href="Particle_Emitters/part_emitter_create.htm" target="_blank">Particle Emitter ID</a></span></td>
          <td>The ID of the particle emitter.</td>
        </tr>
        <tr>
          <td><span class="inline">name</span></td>
          <td><span data-keyref="Type_String"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
          <td>The name of the particle emitter.</td>
        </tr>
        <tr>
          <td><span class="inline">mode</span></td>
          <td><span data-keyref="Type_Constant_PartEmitter_Mode"><a href="particle_get_info.htm#particle_emitter_mode_constant" target="_blank">Particle Emitter Mode Constant</a></span></td>
          <td>The mode in which to emit particles. Either <span class="inline2">ps_mode_stream</span> or <span class="inline2">ps_mode_burst</span>.</td>
        </tr>
        <tr>
          <td><span class="inline">enabled</span></td>
          <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
          <td>Whether the particle emitter is enabled.</td>
        </tr>
        <tr>
          <td><span class="inline">number</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The number of particles to create every frame if <span class="inline2">mode</span> is <span class="inline2">ps_mode_stream</span> or to create only once if mode is <span class="inline2">ps_mode_burst</span>. Density (percent coverage) when in relative mode.</td>
        </tr>
        <tr>
          <td><span class="inline">relative</span></td>
          <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
          <td>Whether the emitter is in relative mode, in which the number of particles created by the emitter is relative to the area of its region (see <span class="inline3_func"><a data-xref="{title}" href="Particle_Emitters/part_emitter_relative.htm">part_emitter_relative</a></span>).</td>
        </tr>
        <tr>
          <td><span class="inline">xmin</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The X coordinate of the left side of the emitter&#39;s region.</td>
        </tr>
        <tr>
          <td><span class="inline">xmax</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The X coordinate of the right side of the emitter&#39;s region.</td>
        </tr>
        <tr>
          <td><span class="inline">ymin</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The Y coordinate of the top of the emitter&#39;s region.</td>
        </tr>
        <tr>
          <td><span class="inline">ymax</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The Y coordinate of the bottom of the emitter&#39;s region.</td>
        </tr>
        <tr>
          <td><span class="inline">distribution</span></td>
          <td><span data-keyref="Type_Constant_PartEmitter_Distr"><a href="Particle_Emitters/part_emitter_region.htm" target="_blank">Particle Emitter Distribution Constant</a></span></td>
          <td>The distribution style of the particles. One of the <span class="inline2">ps_distr_*</span> constants.</td>
        </tr>
        <tr>
          <td><span class="inline">shape</span></td>
          <td><span data-keyref="Type_Constant_PartEmitter_Region_Shape"><a href="Particle_Emitters/part_emitter_region.htm" target="_blank">Particle Emitter Shape Constant</a></span></td>
          <td>The shape of the emitter&#39;s region. One of the <span class="inline2">ps_shape_*</span> constants.</td>
        </tr>
        <tr>
          <td><span class="inline">parttype</span></td>
          <td><span data-keyref="Type_Struct_PartType_Info"><a href="particle_get_info.htm#particle_type_info_struct" target="_blank">Particle Type Info Struct</a></span></td>
          <td>The particle type info struct containing information this emitter&#39;s particle type.</td>
        </tr>
        <tr>
          <td><span class="inline">delay_min</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The minimum delay between particle bursts in stream mode, expressed in <span class="inline2">delay_unit</span>.</td>
        </tr>
        <tr>
          <td><span class="inline">delay_max</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The maximum delay between particle bursts in stream mode, expressed in <span class="inline2">delay_unit</span>.</td>
        </tr>
        <tr>
          <td><span class="inline">delay_unit</span></td>
          <td><span data-keyref="Type_Constant_TimeSource_Unit"><a href="../../Time_Sources/Time_Source_Units.htm" target="_blank">Time Source Unit Constant</a></span></td>
          <td> The unit in which <span class="inline2">delay_min</span> and <span class="inline2">delay_max</span> are expressed</td>
        </tr>
        <tr>
          <td><span class="inline">interval_min</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The minimum time between particle bursts in stream mode, expressed in <span class="inline2">interval_unit</span>.</td>
        </tr>
        <tr>
          <td><span class="inline">interval_max</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td> The maximum time between particle bursts in stream mode, expressed in <span class="inline2">interval_unit</span>.</td>
        </tr>
        <tr>
          <td><span class="inline">interval_unit</span></td>
          <td><span data-keyref="Type_Constant_TimeSource_Unit"><a href="../../Time_Sources/Time_Source_Units.htm" target="_blank">Time Source Unit Constant</a></span></td>
          <td>The unit in which <span class="inline2">interval_min</span> and <span class="inline2">interval_max</span> are expressed.</td>
        </tr>
      </tbody>
    </table>
  </div>
  <p><a class="dropspot" data-rhwidget="DropSpot" data-target="drop-down2" href="#">Particle Type Info</a></p>
  <div class="droptext" data-targetname="drop-down2">
    <table id="particle_type_info_struct" style="caption-side: top">
      <caption>Particle Type Info Struct</caption>
      <colgroup>
        <col style="width:33.33%" />
        <col style="width:33.33%" />
        <col style="width:33.33%" />
      </colgroup>
      <tbody>
        <tr>
          <th>Variable Name</th>
          <th>Data Type</th>
          <th>Description</th>
        </tr>
        <tr>
          <th colspan="3">General</th>
        </tr>
        <tr>
          <td><span class="inline">ind</span></td>
          <td><span data-keyref="Type_ID_PartType"><a href="Particle_Types/part_type_create.htm" target="_blank">Particle Type ID</a></span></td>
          <td>The index of the particle type. This can be used e.g. with the function <span class="inline3_func"><a data-xref="{title}" href="Particle_Systems/part_particles_create.htm">part_particles_create</a></span>.</td>
        </tr>
        <tr>
          <th colspan="3">Shape / Sprite</th>
        </tr>
        <tr>
          <td><span class="inline">sprite</span></td>
          <td><span data-keyref="Type_Asset_Sprite"><a href="../../../../The_Asset_Editors/Sprites.htm" target="_blank">Sprite Asset</a></span></td>
          <td>The index of the sprite that the particle type uses or <span class="inline2">-1</span>.</td>
        </tr>
        <tr>
          <td><span class="inline">frame</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The sprite subimage in case a sprite is used.</td>
        </tr>
        <tr>
          <td><span class="inline">animate</span></td>
          <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
          <td>If <span class="inline2">true</span> then the sprite is animated, starting from the <span class="inline2">frame</span> subimage.</td>
        </tr>
        <tr>
          <td><span class="inline">stretch</span></td>
          <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
          <td>If <span class="inline2">true</span> then the animation is stretched over the particle&#39;s lifetime.</td>
        </tr>
        <tr>
          <td><span class="inline">random</span></td>
          <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
          <td>If <span class="inline2">true</span> then a random subimage is used instead of <span class="inline2">frame</span>.</td>
        </tr>
        <tr>
          <td><span class="inline">shape</span></td>
          <td><span data-keyref="Type_Constant_Part_Shape"><a href="Particle_Types/part_type_shape.htm" target="_blank">Particle Shape Constant</a></span></td>
          <td>The particle shape. One of the <span class="inline2">pt_shape_*</span> constants. Used only if sprite is <span class="inline2">-1</span>.</td>
        </tr>
        <tr>
          <th colspan="3">Size</th>
        </tr>
        <tr>
          <td><span class="inline">size_xmin</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The minimum size a particle of this type can have on the X axis when it is created (the size is determined randomly for each particle and can vary from <span class="inline2">size_xmin</span> to <span class="inline2">size_xmax</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">size_ymin</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The minimum size a particle of this type can have on the Y axis when it is created (the size is determined randomly for each particle and can vary from <span class="inline2">size_ymin</span> to <span class="inline2">size_ymax</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">size_xmax</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The maximum size a particle of this type can have on the X axis when it is created (the size is determined randomly for each particle and can vary from <span class="inline2">size_xmin</span> to <span class="inline2">size_xmax</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">size_ymax</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The maximum size a particle of this type can have on the Y axis when it is created (the size is determined randomly for each particle and can vary from <span class="inline2">size_ymin</span> to <span class="inline2">size_ymax</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">size_xincr</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The value to increase/decrease the particle size on the X axis by each frame.</td>
        </tr>
        <tr>
          <td><span class="inline">size_yincr</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The value to increase/decrease the particle size on the Y axis by each frame.</td>
        </tr>
        <tr>
          <td><span class="inline">size_xwiggle</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>Value randomly added or subtracted from the particle&#39;s X size each frame.</td>
        </tr>
        <tr>
          <td><span class="inline">size_ywiggle</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>Value randomly added or subtracted from the particle&#39;s Y size each frame.</td>
        </tr>
        <tr>
          <th colspan="3">Scale</th>
        </tr>
        <tr>
          <td><span class="inline">xscale</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The X scale of the particle image (sprite or shape).</td>
        </tr>
        <tr>
          <td><span class="inline">yscale</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The Y scale of the particle image (sprite or shape).</td>
        </tr>
        <tr>
          <th colspan="3">Life</th>
        </tr>
        <tr>
          <td><span class="inline">life_min</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The minimum life of particles of this type (in number of frames).</td>
        </tr>
        <tr>
          <td><span class="inline">life_max</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The maximum life of particles of this type (in number of frames).</td>
        </tr>
        <tr>
          <th colspan="3">Secondary Particles</th>
        </tr>
        <tr>
          <td><span class="inline">death_type</span></td>
          <td><span data-keyref="Type_ID_PartType"><a href="Particle_Types/part_type_create.htm" target="_blank">Particle Type ID</a></span></td>
          <td>The type of particle spawned on death or <span class="inline2">-1</span>.</td>
        </tr>
        <tr>
          <td><span class="inline">death_number</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The number of particles spawned on death.</td>
        </tr>
        <tr>
          <td><span class="inline">step_type</span></td>
          <td><span data-keyref="Type_ID_PartType"><a href="Particle_Types/part_type_create.htm" target="_blank">Particle Type ID</a></span></td>
          <td>The type of particle spawned each step or <span class="inline2">-1</span>.</td>
        </tr>
        <tr>
          <td><span class="inline">step_number</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The number of particles spawned each step.</td>
        </tr>
        <tr>
          <th colspan="3">Speed</th>
        </tr>
        <tr>
          <td><span class="inline">speed_min</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The minimum speed (in pixels per frame) of the particle when it&#39;s created (this starting speed is determined randomly for each particle and ranges from <span class="inline2">speed_min</span> to <span class="inline2">speed_max</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">speed_max</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The maximum speed (in pixels per frame) of the particle when it&#39;s created (this starting speed is determined randomly for each particle and ranges from <span class="inline2">speed_min</span> to <span class="inline2">speed_max</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">speed_incr</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The value to increase/decrease the particle speed by each frame.</td>
        </tr>
        <tr>
          <td><span class="inline">speed_wiggle</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>A value randomly added or subtracted from the particle speed each frame.</td>
        </tr>
        <tr>
          <th colspan="3">Direction</th>
        </tr>
        <tr>
          <td><span class="inline">dir_min</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The minimum direction (in degrees) for a particle when it&#39;s created (this starting direction is determined randomly for each particle and ranges from <span class="inline2">dir_min</span> to <span class="inline2">dir_max</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">dir_max</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The maximum direction (in degrees) for a particle when it&#39;s created (this starting direction is determined randomly for each particle and ranges from <span class="inline2">dir_min</span> to <span class="inline2">dir_max</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">dir_incr</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The value to increase/decrease the particle direction by each frame.</td>
        </tr>
        <tr>
          <td><span class="inline">dir_wiggle</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>A value randomly added or subtracted from the particle direction each frame.</td>
        </tr>
        <tr>
          <th colspan="3">Gravity</th>
        </tr>
        <tr>
          <td><span class="inline">grav_amount</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The amount of gravity applied to the particle each frame (in pixels per frame).</td>
        </tr>
        <tr>
          <td><span class="inline">grav_dir</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The gravity direction.</td>
        </tr>
        <tr>
          <th colspan="3">Orientation</th>
        </tr>
        <tr>
          <td><span class="inline">ang_min</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The minimum starting angle (in degrees) of the particle sprite when created (this starting angle is determined randomly for each particle and ranges from <span class="inline2">ang_min</span> to <span class="inline2">ang_max</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">ang_max</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The maximum starting angle (in degrees) of the particle sprite when created (this starting angle is determined randomly for each particle and ranges from <span class="inline2">ang_min</span> to <span class="inline2">ang_max</span>).</td>
        </tr>
        <tr>
          <td><span class="inline">ang_incr</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The value to increase/decrease the particle angle by each frame.</td>
        </tr>
        <tr>
          <td><span class="inline">ang_wiggle</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>A value randomly added or subtracted from the particle angle each frame.</td>
        </tr>
        <tr>
          <td><span class="inline">ang_relative</span></td>
          <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
          <td>If <span class="inline2">true</span> then the particle angle is relative to its direction.</td>
        </tr>
        <tr>
          <th colspan="3">Color &amp; Alpha</th>
        </tr>
        <tr>
          <td><span class="inline">color1</span></td>
          <td><span data-keyref="Type_Constant_Colour"><a href="../Colour_And_Alpha/Colour_And_Alpha.htm" target="_blank">Colour</a></span></td>
          <td>The color of the particle when created.</td>
        </tr>
        <tr>
          <td><span class="inline">color2</span></td>
          <td><span data-keyref="Type_Constant_Colour"><a href="../Colour_And_Alpha/Colour_And_Alpha.htm" target="_blank">Colour</a></span></td>
          <td>The color of the particle when halfway through its lifespan.</td>
        </tr>
        <tr>
          <td><span class="inline">color3</span></td>
          <td><span data-keyref="Type_Constant_Colour"><a href="../Colour_And_Alpha/Colour_And_Alpha.htm" target="_blank">Colour</a></span></td>
          <td>The color of the particle at the end of its lifespan.</td>
        </tr>
        <tr>
          <td><span class="inline">alpha1</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The alpha of the particle when created.</td>
        </tr>
        <tr>
          <td><span class="inline">alpha2</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The alpha of the particle when halfway through its lifespan.</td>
        </tr>
        <tr>
          <td><span class="inline">alpha3</span></td>
          <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
          <td>The alpha of the particle at the end of its lifespan.</td>
        </tr>
        <tr>
          <td><span class="inline">additive</span></td>
          <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
          <td>If <span class="inline2">true</span> then the particle is drawn with additive blending (i.e. using the <span data-keyref="Type_Constant_Draw_Blend_Mode"><a href="../GPU_Control/gpu_get_blendmode.htm" target="_blank">Blend Mode Constant</a></span> <span class="inline2">bm_add</span>).</td>
        </tr>
      </tbody>
    </table>
  </div>
  <p> </p>
  <p>Finally there is also a constant for the particle emitter mode: </p>
  <table id="particle_emitter_mode_constant" style="caption-side: top">
    <caption>Particle Emitter Mode Constant</caption>
    <colgroup>
      <col style="width:33.33%" />
      <col style="width:33.33%" />
    </colgroup>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">ps_mode_stream</span></td>
        <td>The particle emitter <em>streams</em> the given number of particles continuously (see <span class="inline3_func"><a data-xref="{title}" href="Particle_Emitters/part_emitter_stream.htm">part_emitter_stream</a></span>)</td>
      </tr>
      <tr>
        <td><span class="inline">ps_mode_burst</span></td>
        <td>The particle emitter emits a single <em>burst</em> of the given number of particles (see <span class="inline3_func"><a data-xref="{title}" href="Particle_Emitters/part_emitter_burst.htm">part_emitter_burst</a></span>)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">particle_get_info</span>(partsys);</p>
  <table>
    <colgroup>
      <col />
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>partsys</td>
        <td><span data-keyref="Type_Asset_ParticleSystem"><a href="../../../../The_Asset_Editors/Particle_Systems.htm" target="_blank">Particle System Asset</a></span></td>
        <td>The particle system asset to get the info from.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Struct_PartSystem_Info"><a href="particle_get_info.htm#particle_system_info_struct" target="_blank">Particle System Info Struct</a></span></p>
  <p> </p>
  <h4>Example 1: Particle Type Info</h4>
  <p class="code">var _particle_info = <span data-field="title" data-format="default">particle_get_info</span>(ps_Clouds);<br />
    var _asset_name = _particle_info.name;<br />
    <br />
    var _arr_emitters = _particle_info.emitters;<br />
    if (array_length(_arr_emitters) &gt; 0)<br />
    {<br />
        var _type_info = _arr_emitters[0].parttype;<br />
       <br />
        if (_type_info.additive)<br />
        {<br />
            show_debug_message(&quot;The first emitter in {0} creates shiny particles!&quot;, _asset_name);<br />
        }<br />
    }
  </p>
  <p>The above code first gets information from an existing <span data-keyref="Type_Asset_ParticleSystem"><a href="../../../../The_Asset_Editors/Particle_Systems.htm" target="_blank">Particle System Asset</a></span> <span class="inline2">ps_Clouds</span> using <span class="inline3_func"><span data-field="title" data-format="default">particle_get_info</span></span> and assigns the returned struct to a temporary variable <span class="inline2">_particle_info</span>. It then looks up the emitters in the particle system through the <span data-keyref="Type_Struct_PartSystem_Info"><a href="particle_get_info.htm#particle_system_info_struct" target="_blank">Particle System Info Struct</a></span>&#39;s <span class="inline2">emitters</span> variable. If the particle system contains any emitters (i.e. the array&#39;s length is greater than 0), the first emitter&#39;s <span class="inline2">parttype</span> variable is assigned to a temporary variable <span class="inline2">_type_info</span> and checked for additive blending (<span class="inline2">bm_add</span>). Finally a debug message is shown if additive blending is used for the particle type.</p>
  <p> </p>
  <h4>Example 2: Listing Emitter Names</h4>
  <p class="code">var _particle_info = <span data-field="title" data-format="default">particle_get_info</span>(ps_Environment);<br />
    var _asset_name = _particle_info.name;<br />
    <br />
    var _emitter_names = array_map(_particle_info.emitters, function(_element, _index) { return _element.name; });<br />
    _emitter_names = string_join_ext(&quot;, &quot;, _emitter_names);<br />
    <br />
    show_debug_message(&quot;{0} contains the following particle emitters: {1}&quot;, _asset_name, _emitter_names);
  </p>
  <p>The above code first calls <span class="inline3_func"><span data-field="title" data-format="default">particle_get_info</span></span> to retrieve information about an existing <span data-keyref="Type_Asset_ParticleSystem"><a href="../../../../The_Asset_Editors/Particle_Systems.htm" target="_blank">Particle System Asset</a></span> <span class="inline2">ps_Environment</span>. The asset&#39;s name is stored in a temporary variable <span class="inline2">_asset_name</span>. After that, an array of emitter names is generated from the <span data-keyref="Type_Struct_PartSystem_Info"><a href="particle_get_info.htm#particle_system_info_struct" target="_blank">Particle System Info Struct</a></span>&#39;s <span class="inline2">emitters</span> variable and converted to a string listing all names, separated by a comma, using <span class="inline3_func"><a data-xref="{title}" href="../../Strings/string_join_ext.htm">string_join_ext</a></span>. Finally a debug message displays the information in a readable form.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Particles.htm">Particles</a></div>
        <div>Next: <a data-xref="{title}" href="Particle_Systems/Particle_Systems.htm">Particle Systems</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
particle_get_info
-->
  <!-- TAGS
particle_get_info
-->
</body>
</html>