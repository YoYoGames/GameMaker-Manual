<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <title>video_draw</title>
  <meta name="topic-status" content="Draft" />
  <link rel="stylesheet" type="text/css" href="../../../../assets/css/default.css" />
  <meta name="template" content="../../../../assets/masterpages/Manual_Keyword_Page.htt" />
  <meta name="rh-authors" content="Gurpreet S. Matharoo" />
  <meta name="topic-comment" content="Reference page for video_draw" />
  <meta name="rh-index-keywords" content="video_draw" />
  <meta name="search-keywords" content="video_draw, draw video, render video" />
  <meta name="condition-tags" content="" />
</head>
<body>
  <h1>video_draw</h1>
  <p>This function draws the current frame of the <a href="video_open.htm">opened video</a> to a surface (or two surfaces). It returns the surface(s) as part of its return array, which can be <a href="../Surfaces/draw_surface.htm">drawn manually</a>.</p>
  <p>The function also returns data regarding the status of the video, which is expanded upon below.</p>
  <p>Ensure that this is only called after a <span class="inline"><a href="video_open.htm">video_open()</a></span> call but before a <span class="inline"><a href="video_close.htm">video_close()</a></span> call, otherwise it will not do anything (as there will not be a video loaded).</p>
  <h2>Return Data</h2>
  <p>The function will return an array, the first element (<span class="inline2">[0]</span>) of which will be a real value. This value tells the status of the video, and will be:</p>
  <ul class="colour">
    <li><strong>0</strong>, if the video is playing without any issues</li>
    <li><strong>-1</strong>, if there was an error</li>
    <li>On some platforms, <strong>-2</strong>, if the video finished playing (at which point it can be removed from memory with a <span class="inline"><a href="video_close.htm">video_close()</a></span> call)
      <ul>
        <li>It&#39;s recommended to use the <a data-xref="{text}" href="Videos.htm#h">Async Callbacks</a> instead to know when a video ends</li>
      </ul>
    </li>
  </ul>
  <p>When this status value is <strong>0</strong>, the array will contain more data, which will depend on the format of the video. You can know the video format by calling <span class="inline"><a href="video_get_format.htm">video_get_format()</a></span>.</p>
  <h2>RGBA Videos</h2>
  <p><span>For RGBA videos, the position <span class="inline2">[1]</span> will contain the surface where the video frame was drawn. You can get this surface and <a href="../Surfaces/draw_surface.htm">draw it</a> manually.</span></p>
  <h2>YUV Videos</h2>
  <p><span>Some platforms (especially consoles) use the YUV colour format for videos, which makes use of two surfaces. In that case the array will have positions <span class="inline2">[1]</span> and <span class="inline2">[2]</span> with two surfaces:</span></p>
  <ul class="colour">
    <li><span><span class="inline2">[1]</span> is the main video surface in black and white</span></li>
    <li><span><span class="inline2">[2]</span> is the chroma surface that contains all the colour data</span></li>
  </ul>
  <p>Both these surfaces are then combined using a YUV shader before being used to texture a custom quad, which will draw the video to the screen.</p>
  <p>Read <a data-xref="{title}" href="YUV_Videos.htm">YUV Videos</a> for steps on drawing these two surfaces using a shader.</p>
  <p>For the specific implementation details for a particular console, please refer to its documentation on the <a href="https://help.gamemaker.io/hc/en-us/">YoYo Games Helpdesk</a>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">video_draw();</p>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Array"><a href="../../../GML_Overview/Arrays.htm" target="_blank">Array</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _data = video_draw();<br />
    var _status = _data[0];<br />
    <br />
    if (_status == 0)<br />
    {<br />
        var _surface = _data[1];<br />
    <br />
        draw_surface(_surface, x, y);<br />
    }
  </p>
  <p>The above code calls <span class="inline">video_draw()</span>, and checks if the returned status is 0, meaning the video is playing. In that case it gets the surface ID and draws it at the instance&#39;s position. This will only work for RGBA videos.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Videos.htm">Video Playback</a></div>
        <div>Next: <a data-xref="{title}" href="YUV_Videos.htm">YUV Videos</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
video_draw
-->
  <!-- TAGS
video_draw
-->
</body>
</html>