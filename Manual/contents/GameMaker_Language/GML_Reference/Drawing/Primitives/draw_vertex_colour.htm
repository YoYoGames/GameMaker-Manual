<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <title>draw_vertex_colour</title>
  <meta name="generator" content="Adobe RoboHelp 2019"/>
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css"/>
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander"/>
  <meta name="topic-comment" content="Reference for draw_vertex_colour"/>
  <meta name="rh-index-keywords" content="draw_vertex_colour,draw_vertex_color"/>
  <meta name="search-keywords" content="draw_vertex_colour,draw_vertex_color"/>
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>This function defines the position of a vertex for a primitive, with its own colour and alpha setting. The final look of the primitive will depend on the primitive type chosen to draw and the order with which you add the vertexes to it (see <a href="draw_primitive_begin.htm"><span class="inline">draw_primitive_begin()</span></a>    for more information) and the vertexes with different colours and alphas will blend smoothly from one to the other. To end and draw the primitive you must call <a href="draw_primitive_end.htm"><span class="inline">draw_primitive_end()</span></a>.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">draw_vertex_colour(x, y, col, alpha)</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>x</td><td><span data-keyref="Type_Real"></span></td>
        <td>The x coordinate of the vertex.</td>
     </tr>
      <tr>
        <td>y</td><td><span data-keyref="Type_Real"></span></td>
        <td>The y coordinate of the vertex.</td>
     </tr>
      <tr>
        <td>col</td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td>The colour to draw this vertex with.</td>
     </tr>
      <tr>
        <td>alpha</td><td><span data-keyref="Type_Real"></span></td>
        <td>The alpha to draw this vertex with (0-1).</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">draw_primitive_begin(pr_trianglelist);<br/> draw_vertex_colour(100, 100, c_blue, 0.1);<br/> draw_vertex_colour(100, 200, c_red, 0.1);<br/> draw_vertex_colour(150, 150, c_green, 1);<br/> draw_primitive_end();
  </p>
  <p>The above code will draw a semi-transparent triangle with each vertex coloured a different colour.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Primitives_And_Vertex_Formats.htm">Primitives And Vertex Formats</a></div>
        <div style="float:right">Next: <a href="draw_vertex_texture.htm">draw_vertex_texture</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
draw_vertex_colour
draw_vertex_color
-->
  <!-- TAGS
draw_vertex_colour
-->

</body></html>