<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_master_gain</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_master_gain" />
  <meta name="rh-index-keywords" content="audio_master_gain" />
  <meta name="search-keywords" content="audio_master_gain" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">audio_master_gain</span></h1>
  <p>With this function you can set the absolute value for the global volume of all sounds and music.</p>
  <p>It is based on a linear scale from 0 (silent) to any value greater than 0, although normally you&#39;d consider the maximum volume as 1. Anything over 1 can be used but, depending on the sound used and the platform being compiled to, you may get distortion or clipping when the sound is played back. This function will affect the relative volume of all sounds and music played from within your game.</p>
  <p class="note"><span data-conref="../../../../assets/snippets/Tag_note.hts"> </span> This function sets the master gain of the <em>default</em> listener. Use <span class="inline2"><a data-xref="{title}" href="audio_set_master_gain.htm">audio_set_master_gain</a></span> to set the master gain for a specific listener.</p>
  <div data-conref="../../../../assets/snippets/Note_Audio_Device_OS_Might_Normalise_Audio.hts"> </div>
  <div data-conref="../../../../assets/snippets/Note_Gain_Linear_dB.hts"> </div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">audio_master_gain</span>(gain);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>gain</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>Value for the global volume (0 to 1)</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">if (keyboard_check(vk_up))<br />
    {<br />
        if vol &lt; 1 vol += 0.05;<br />
        <span data-field="title" data-format="default">audio_master_gain</span>(vol);<br />
    }<br />
    if (keyboard_check(vk_down))<br />
    {<br />
        if vol &gt; 0 vol -= 0.05;<br />
        <span data-field="title" data-format="default">audio_master_gain</span>(vol);<br />
    }</p>
  <p>The above code checks for key-presses of the up and down arrow keys, which then increase or decrease the variable &quot;vol&quot;. This variable is then used to set the global gain of all sound and music in the game.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Audio.htm">Audio</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="audio_set_master_gain.htm">audio_set_master_gain</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
audio_master_gain
-->
  <!-- TAGS
audio_master_gain
-->
</body>
</html>