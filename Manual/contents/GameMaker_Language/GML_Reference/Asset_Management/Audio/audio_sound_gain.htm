<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_sound_gain</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_sound_gain" />
  <meta name="rh-index-keywords" content="audio_sound_gain" />
  <meta name="search-keywords" content="audio_sound_gain" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">audio_sound_gain</span></h1>
  <p>With this function you can fade a sound asset or instance in or out over a given length of time, or it can be used to set the sound gain instantly.</p>
  <p>The time is measured in milliseconds, and the function requires that you input a final level of gain for the sound to have reached by the end of that time. This gain can be between 0 (silent) and any value greater than 0, although normally you&#39;d consider the maximum volume as 1. Anything over 1 can be used but, depending on the sound used and the platform being compiled to, you may get distortion or clipping when the sound is played back. Note that the gain scale is linear, and to instantly change the gain, simply set the time argument to 0.</p>
  <div data-conref="../../../../assets/snippets/Note_Gain_Linear_dB.hts"> </div>
  <p>This function will affect <i>all</i> instances of the sound that are playing currently in the room if the index is a sound asset, and the final volume will be the volume at which all further instances of the sound will be played. However, if you have used the index returned from a function like <span class="inline2"><a data-xref="{title}" href="audio_play_sound.htm">audio_play_sound</a></span> it will only affect that one instance of the sound.</p>
  <div data-conref="../../../../assets/snippets/Note_Sound_Editor_Volume_Is_Asset_Gain.hts"> </div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">audio_sound_gain</span>(index, volume, time);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>index</td>
        <td><span data-keyref="Type_Asset_Sound"><a href="../../../../The_Asset_Editors/Sounds.htm" target="_blank">Sound Asset</a></span> or <span data-keyref="Type_ID_Sound_Instance"><a href="audio_play_sound.htm" target="_blank">Sound Instance ID</a></span> or <span data-keyref="Type_ID_Audio_Queue"><a href="Audio_Buffers/audio_create_play_queue.htm" target="_blank">Audio Queue ID</a></span></td>
        <td>The index of the sound to set the gain for.</td>
      </tr>
      <tr>
        <td>volume</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>Value for the music volume.</td>
      </tr>
      <tr>
        <td>time</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The length for the change in gain in milliseconds.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example 1:</h4>
  <p class="code">
    var snd = audio_play_sound(snd_fountain, 10, true);                                     <br />
    <span data-field="title" data-format="default">audio_sound_gain</span>(snd, 0, 0);      <br />
    <span data-field="title" data-format="default">audio_sound_gain</span>(snd, 1, 5000);   <br />
  </p>
  <p>
    The above code assigns the index of a sound to be played to the local variable <span class="inline2">snd</span>.
    This variable is then used to reduce the volume of that specific sound to 0 and fade up to full volume over 5 seconds.
  </p>
  <p> </p>
  <h4>Example 2:</h4>
  <p class="code">
    <span data-field="title" data-format="default">audio_sound_gain</span>(snd_fountain, 0.5, 0);   <br />
    var snd = audio_play_sound(snd_fountain, 0, true, 2);
  </p>
  <p>
    The above code first sets the gain of the sound asset <span class="inline2">snd_fountain</span> to 0.5. 
    It then plays this sound using <span class="inline2"><a data-xref="{title}" href="audio_play_sound.htm">audio_play_sound</a></span> 
    and sets the gain of this new sound instance to 2 (using the optional &quot;gain&quot; parameter of the function).
  </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Audio.htm">Audio</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="audio_sound_get_gain.htm">audio_sound_get_gain</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2023 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
audio_sound_gain
-->
  <!-- TAGS
audio_sound_gain
-->
</body>
</html>