<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_listener_velocity</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_listener_velocity" />
  <meta name="rh-index-keywords" content="audio_listener_velocity" />
  <meta name="search-keywords" content="audio_listener_velocity" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>This function can be used to give the listener <em>Doppler </em>effects and simulate audio motion based on the vector that is resolved from the given relative x, y and z positions. If the listener itself is not ever going to move, or the movement is not a constant motion, you would normally not need to set these values, but, for example, if you are making a scrolling game where the player has a constant bottom to top movement and the enemies a constant top to bottom movement, you would set the listener <i>and</i> emitter velocities (for emitters you would use <span class="inline"><a href="../Audio_Emitters/audio_emitter_velocity.htm"><span class="inline">audio_emitter_velocity()</span></a></span>) to the appropriate vectors to simulate the correct Doppler effect as they move past the player instance.</p>
  <p class="note"><b><span class="note">NOTE</span> </b>if you have multiple listeners you should use the function <span style="font-size:1px;"><a href="audio_listener_set_velocity.htm"><span class="inline">audio_listener_set_velocity()</span></a></span>.</p>
  <p>The image below shows how this could be setup for the example game given above:</p>
  <p><img alt="Audio Listener Velocity Example" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Listener_Velocity.png" /></p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">audio_listener_velocity(vx, vy, vz);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>vx</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The x velocity component of the listener (default 0).</td>
      </tr>
      <tr>
        <td>vy</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The y velocity component of the listener (default 0).</td>
      </tr>
      <tr>
        <td>vz</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The z velocity component of the listener (default 0).</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">if (speed &gt; 0) <br />
    {<br />
        audio_listener_velocity(abs(hspeed), abs(vspeed), 0);<br />
    }</p>
  <p>The above code checks to see if the player instance speed is over 0 and if it is it then uses the appropriate absolute <span class="inline">hspeed</span> and <span class="inline">vspeed</span> components to set the listener velocity.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Audio_Listeners.htm">Audio Listeners</a></div>
        <div style="float:right">Next: <a href="audio_listener_orientation.htm">audio_listener_orientation</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
audio_listener_velocity
-->
  <!-- TAGS
audio_listener_velocity
-->
</body>
</html>