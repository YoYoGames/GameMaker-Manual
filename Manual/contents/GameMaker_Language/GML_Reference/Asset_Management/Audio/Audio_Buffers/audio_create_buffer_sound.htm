<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>audio_create_buffer_sound</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function audio_create_buffer_sound" />
  <meta name="rh-index-keywords" content="audio_create_buffer_sound" />
  <meta name="search-keywords" content="audio_create_buffer_sound,audio_mono,audio_stereo,audio_3D" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>audio_create_buffer_sound</h1>
  <p>With this function you can create a new sound from the contents of a buffer.</p>
  <p>The buffer should have been created previously (see the <a href="../../../Buffers/Buffers.htm">buffer functions</a> for details on how to do this), and have had data added or loaded into it. You then pass it to this function with the data format (only <span class="inline">buffer_u8</span> or <span class="inline">buffer_s16</span> are currently supported), the sample rate (which can be between 8000hz and 48000hz), and an offset into the buffer to get the data from.</p>
  <p>You also need to supply the number of samples in the buffer and the channels that the sound requires. These channels are defined by one of the following constants:</p>
  <table>
    <colgroup>
      <col />
      <col />
    </colgroup>
    <tbody>
      <tr>
        <th colspan="2"><span data-keyref="Type_Constant_Audio_Channel_Type"><a href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_create_buffer_sound.htm" target="_blank">Audio Channel Constant</a></span></th>
      </tr>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">audio_mono</span></td>
        <td>Mono (single channel) audio</td>
      </tr>
      <tr>
        <td><span class="inline">audio_stereo</span></td>
        <td>Stereo (dual channel) audio</td>
      </tr>
      <tr>
        <td><span class="inline">audio_3D</span></td>
        <td>3D (5.1) audio</td>
      </tr>
    </tbody>
  </table>
  <p>Note that after you have created a sound, you should free the pointer index associated with it when it is no longer required using the function <a href="audio_free_buffer_sound.htm"><span class="inline">audio_free_buffer_sound()</span></a>. If you fail to do this and then re-assign the variable or change rooms etc. the sound ID will be lost and you will have a memory leak.</p>
  <p>You can&#39;t delete the buffer if any sound has been created from it and the sound has not been freed up first. So you would free the sound(s) first, and <i>then</i> delete the buffer.</p>
  <p>Adding anything to the buffer, or changing the buffer size, after it has had a sound created from it, will give unexpected results and is not recommended - once you have started creating sounds from any buffer you should not manipulate it in any other way afterwards.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">audio_create_buffer_sound(bufferId, bufferFormat, bufferRate, bufferOffset, bufferLength, bufferChannels);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>bufferId</td>
        <td><span data-keyref="Type_ID_Buffer"><a href="../../../../../../GameMaker_Language/GML_Reference/Buffers/buffer_create.htm" target="_blank">Buffer ID</a></span></td>
        <td>The ID of the buffer to use.</td>
      </tr>
      <tr>
        <td>bufferFormat</td>
        <td><span data-keyref="Type_Constant_Buffer_Data_Type"><a href="../../../../../../GameMaker_Language/GML_Reference/Buffers/buffer_write.htm" target="_blank">Buffer Data Type Constant</a></span></td>
        <td>The format of the data in the buffer (<span class="inline">buffer_u8</span> or <span class="inline">buffer_s16</span>).</td>
      </tr>
      <tr>
        <td>bufferRate</td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The sample rate of the data in the buffer.</td>
      </tr>
      <tr>
        <td>bufferOffset</td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The offset into the buffer to read the sample data from (in bytes).</td>
      </tr>
      <tr>
        <td>bufferLength</td>
        <td><span data-keyref="Type_Real"><a href="../../../../../../GameMaker_Language/GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The length of the buffer (the number of bytes of audio data, excluding the header).</td>
      </tr>
      <tr>
        <td>bufferChannels</td>
        <td><span data-keyref="Type_Constant_Audio_Channel_Type"><a href="../../../../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_create_buffer_sound.htm" target="_blank">Audio Channel Constant</a></span></td>
        <td>The channels to use from one of the constants listed above.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Asset_Sound"><a href="../../../../../../The_Asset_Editors/Sounds.htm" target="_blank">Sound Asset</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var rate = 44100;<br />
    var hertz = irandom_range(220, 880);<br />
    var samples = 44100;<br />
    <br />
    var bufferId = buffer_create(rate, buffer_fast, 1);<br />
    buffer_seek(bufferId, buffer_seek_start, 0);<br />
    <br />
    var num_to_write = rate / hertz;<br />
    var length = buffer_get_size(bufferId);<br />
    var val_to_write = 1;<br />
    <br />
    for (var i = 0; i &lt; (samples / num_to_write) + 1; i++)<br />
    {<br />
        for (var j = 0; j &lt; num_to_write; j++)<br />
        {<br />
            buffer_write(bufferId, buffer_u8, val_to_write * 255);<br />
        }<br />
        val_to_write = (1 - val_to_write);<br />
    }<br />
    <br />
    soundId = audio_create_buffer_sound(bufferId, buffer_u8, rate, 0, length, audio_stereo);
  </p>
  <p>The above creates a buffer and then procedurally fills it with data. This data is then used to create a new sound, which is stored in the variable &quot;soundId&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="../Audio.htm">Audio Buffers</a></div>
        <div style="float:right">Next: <a href="audio_free_buffer_sound.htm">audio_free_buffer_sound</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
audio_create_buffer_sound
audio_mono
audio_stereo
audio_3D
-->
  <!-- TAGS
audio_create_buffer_sound
-->
</body>
</html>