<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>layer_background_blend</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function layer_background_blend" />
  <meta name="rh-index-keywords" content="layer_background_blend" />
  <meta name="search-keywords" content="layer_background_blend" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>This function controls the blending (or &quot;tinting&quot;) of the background sprite and the default value is -1 (which represents the constant <span class="inline">c_white</span>, which can also be used). Any other value (including internal colour constants like <span class="inline">c_red</span>,
    or <span class="inline">c_aqua</span>) will blend the specified colour with the original sprite. You give the background element ID (which you get when you create a background element using <a href="layer_background_create.htm"><span class="inline">layer_background_create()</span></a>    or when you use the function <a href="layer_background_get_id.htm"><span class="inline">layer_background_get_id()</span></a>), and then set the blending colour to use. Below you can see an example of a sprite that has been blended with different colours:</p>
  <p><img alt="Colour blend example" class="center" src="../../../../../assets/Images/Scripting_Reference/GML/Reference/Rooms/blend_image.png" />Please note that you should try to limit blending on the <b>HTML5</b> platform (unless using WebGL), as each
    blended sprite has to be cached separately and so having many blended sprites may adversely affect performance (you can also set the cache size using the function <a href="../../Sprites/Sprite_Manipulation/sprite_set_cache_size.htm"><span class="inline">sprite_set_cache_size()</span></a>).</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">layer_background_blend(background_element_id, blend);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th><th>Type</th>
        <th>Description</th>
     </tr>
      <tr>
        <td>background_element_id</td><td><span data-keyref="Type_ID_Element_Background"></span></td>
        <td>The unique ID value of the background element to change</td>
     </tr>
      <tr>
        <td>blend</td><td><span data-keyref="Type_Constant_Colour"></span></td>
        <td>The colour to blend with the background sprite (default is <span class="inline">c_white</span>)</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var lay_id = layer_get_id(&quot;Background_sky&quot;);<br/> var back_id = layer_background_get_id(lay_id);<br/> layer_background_blend(back_id, c_aqua);</p>
  <p>The above code gets the ID value of the background assigned to the layer &quot;Background_sky&quot; and then tints it to a colour.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Background_Layers.htm">Background Layers</a></div>
        <div style="float:right">Next: <a href="layer_background_alpha.htm">layer_background_alpha</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2021 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
layer_background_blend
-->
  <!-- TAGS
layer_background_blend
-->
</body>
</html>