<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>font_add_sprite_ext</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function font_add_sprite_ext" />
  <meta name="rh-index-keywords" content="font_add_sprite_ext" />
  <meta name="search-keywords" content="font_add_sprite_ext" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>font_add_sprite_ext</h1>
  <p>With this function you can use a &quot;sprite strip&quot; (the sprite itself <b>must</b> be a sprite asset from the Asset Browser, or a sprite you have added to the game resources using <span class="inline">sprite_add</span>) to create a new font asset, where each sub-image would be an individual symbol or letter. Unlike the normal <a href="font_add_sprite.htm"><span class="inline">font_add_sprite()</span></a> which has a specific order for the sub-images of the sprite, this function will map the sprite sub-images based on the argument &quot;string_map&quot; of the function. This argument is a string that you can use to tell <span data-keyref="GameMaker Name">GameMaker</span> what order the sub-images of the sprite font are and it will map these automatically when writing text. So, for example, if you have a string-map of &quot;AaBbCcDdEeFfGgHh&quot;, your sprite font <i>must</i> have the sub-images ordered in this way. You can define &quot;space&quot; as being any character you want, for example a single line the size that you want the space to be, and all spaces in text will be rendered at that width (but the image chosen will <i>never</i> be rendered), or if you don&#39;t supply a sprite for space then the width of the widest character in the sprite font will be used instead.</p>
  <p>You can also set the spacing for the font to be proportional (<span class="inline">true</span>) or not (<span class="inline">false</span>), where a proportional font is spaced based on the actual width of the letters (so the letter &quot;i&quot; takes less room than the letter &quot;w&quot;, for example) while a non-proportional font will be spaced based on the sub-image width, like a monospaced font. Finally, you can define the space to leave between each letter when writing, and this can be any integer value, with 0 being no space (the letters will &quot;touch&quot; if proportional).</p>
  <p>The function returns a handle that should be stored in a variable as this will be needed in all further codes that refer to this font, or it will return -1 if the function fails for any reason.</p>
  <p>It is worth noting that for the font alignment functions to work (like <a href="../../Drawing/Text/draw_set_halign.htm"><span class="inline">draw_set_halign()</span></a>) then the font sprite should have its origin set to the <i>top left corner</i>. If you use other values then you will need to take the origin offset into consideration when drawing text using the font.</p>
  <p class="note"><b><span class="note">NOTE</span> </b>When you load a font into <span data-keyref="GameMaker Name">GameMaker</span> you must remember to remove it again (with <span style="font-size:1px;"><a href="font_delete.htm"><span class="inline">font_delete()</span></a></span>) when no longer needed, otherwise there is risk of a memory leak which will slow down and eventually crash your game.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">font_add_sprite_ext(spr, string_map, prop, sep);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>spr</td>
        <td><span data-keyref="Type_Asset_Sprite"><a href="../../../../The_Asset_Editors/Sprites.htm" target="_blank">Sprite Asset</a></span></td>
        <td>The sprite to add a font based on.</td>
      </tr>
      <tr>
        <td>string_map</td>
        <td><span data-keyref="Type_String"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>String from which sprite sub-image order is taken.</td>
      </tr>
      <tr>
        <td>prop</td>
        <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
        <td>Set as proportional font or not.</td>
      </tr>
      <tr>
        <td>sep</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The space to leave between each letter.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Asset_Font"><a href="../../../../The_Asset_Editors/Fonts.htm" target="_blank">Font Asset</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">global.Font = font_add_sprite_ext(spr_CalcFont, &quot;0123456789+-*/=&quot;, true, 2);</p>
  <p>The above code will create a new font asset from the sprite indexed in the variable &quot;spr_CalcFont&quot; and store the index of the new font in the variable &quot;global.Font&quot;. The sub-images of the sprite font will be mapped to the string specified.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Fonts.htm">Fonts</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="font_replace_sprite.htm">font_replace_sprite</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
font_add_sprite_ext
-->
  <!-- TAGS
font_add_sprite_ext
-->
</body>
</html>