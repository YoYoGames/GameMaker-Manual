<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>asset_get_tags</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function asset_get_tags" />
  <meta name="rh-index-keywords" content="asset_get_tags,asset_object,asset_sprite,asset_sound,asset_room,asset_tiles,asset_path,asset_script,asset_font,asset_timeline,asset_shader,asset_animationcurve,asset_sequence" />
  <meta name="search-keywords" content="asset_get_tags,asset_object,asset_sprite,asset_sound,asset_room,asset_tiles,asset_path,asset_script,asset_font,asset_timeline,asset_shader,asset_animationcurve,asset_sequence" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">asset_get_tags</span></h1>
  <p>This function retrieves all tags assigned to an asset from <a data-xref="{title}" href="../../../../Introduction/The_Asset_Browser.htm">The Asset Browser</a>.</p>
  <p>You supply either the asset name (as a string) or its asset index, and the function will return an <a href="../../../GML_Overview/Arrays.htm">array</a> of tags for that asset. If no tags are found or there is an error (i.e.: the name string given doesn&#39;t exist) then the returned array will be empty. If you supply an asset handle, then you will need to supply the optional asset type argument (a constant), as assets of different types can have the same index, even though they cannot have the same name. The available asset types are listed in the table below:</p>
  <div data-conref="../../../../assets/snippets/Asset_Type_Constants.hts"> </div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">asset_get_tags</span>(name_or_index, [asset_type]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>name_or_index</td>
        <td><span data-keyref="Type_String"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">String</a></span> or <span data-keyref="Type_Asset"><a href="../../../../The_Asset_Editors/The_Asset_Editors.htm" target="_blank">Asset</a></span></td>
        <td>The name of the asset (a string) or its handle.</td>
      </tr>
      <tr>
        <td>[asset_type]</td>
        <td><span data-keyref="Type_Constant_Asset_Type"><a href="asset_get_type.htm" target="_blank">Asset Type Constant</a></span></td>
        <td><span data-conref="../../../../assets/snippets/Tag_optional.hts"> </span> The type of asset to get the tags for, only used when supplying a handle for the first argument.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Array"><a href="../../../GML_Overview/Arrays.htm" target="_blank">Array</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">my_tags = <span data-field="title" data-format="default">asset_get_tags</span>(object_get_name(object_index));</p>
  <p>The above code will retrieve all the tags assigned to the object that the instance running the code has been created from.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Assets_And_Tags.htm">Assets And Tags</a></div>
        <div style="float:right">Next: <a href="asset_add_tags.htm">asset_add_tags</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
asset_get_tags
asset_object
asset_sprite
asset_sound
asset_room
asset_tiles
asset_path
asset_script
asset_font
asset_timeline
asset_shader
asset_animationcurve
asset_sequence
-->
  <!-- TAGS
asset_get_tags
-->
</body>
</html>