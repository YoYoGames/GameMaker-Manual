<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>event_inherited</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function event_inherited" />
  <meta name="rh-index-keywords" content="event_inherited" />
  <meta name="search-keywords" content="event_inherited" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>event_inherited</h1>
  <p>This function calls the <a href="../../../../../The_Asset_Editors/Object_Properties/Parent_Objects.htm">parent</a> object&#39;s version of the current event. For example, if you call this in the Step event of <span class="inline2">obj_B</span> which is a child of <span class="inline2">obj_A</span>, <span class="inline2">obj_A</span>&#39;s Step event will be called as a result of this function. As such you cannot call this function outside of an object&#39;s event as it would be of no use anywhere else.</p>
  <p>Normally, when an instance has a parent object, it automatically inherits all the same events as the parent, but if (for example) your parent object has a Create event and you add one to your child object choosing to <em>override</em> the parent&#39;s event, all instances of the child object will run the new Create event that you have added and <i>not</i> that which is in the parent object. Should you need to use both the parent event and the child event of the same type, you should use this function as it will run the parent object event before continuing with the rest of the code or actions that the child event contains.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">event_inherited();</p>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">event_inherited();<br />
    switch (sprite_index)<br />
    {<br />
        case spr_Enemy_1: dmg += 2; break;<br />
        case spr_Enemy_4: dmg -= 1; break;<br />
        case spr_Enemy_10: dmg +=10; break;<br />
    }</p>
  <p>The above code calls the inherited parent event (in which we initialise the variable &quot;<span class="inline">dmg</span>&quot;) and then goes on to modify the &quot;<span class="inline">dmg</span>&quot; variable. If there is no parent specified for the instance running this code, we would get an &quot;unknown variable&quot; error as <span class="inline">dmg</span> has not been defined.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Generating_Object_Events.htm">Generating Object Events</a></div>
        <div style="float:right">Next: <a href="event_perform.htm">event_perform</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
event_inherited
-->
  <!-- TAGS
event_inherited
-->
</body>
</html>