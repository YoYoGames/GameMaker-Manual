<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>skeleton_bone_state_set</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function skeleton_bone_state_set" />
  <meta name="rh-index-keywords" content="skeleton_bone_state_set" />
  <meta name="search-keywords" content="skeleton_bone_state_set" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">skeleton_bone_state_set</span></h1>
  <p>Your skeletal animation is made up of a number of &quot;bones&quot;, which you will have defined and given names to in your animation program, and this function can be used to set certain data for the named bone at any time. Note that this data will set the <b>current</b> pose for the skeleton, depending on the animation set used, and the function requires a previously created <span data-keyref="Type_ID_DS_Map"><a href="../../../../Data_Structures/DS_Maps/ds_map_create.htm" target="_blank">DS Map</a></span>, which should have the following keys and their required values:<b></b></p>
  <ul class="colour">
    <li><b>&quot;x&quot;:</b> The local x position of the bone relative to the parent bone.<br />
      <b></b>
    </li>
    <li><b>&quot;y&quot;:</b> The local y position of the bone relative to the parent bone.<br />
      <b></b>
    </li>
    <li><b>&quot;angle&quot;:</b> The local rotation of the bone relative to the parent bone.<br />
      <b></b>
    </li>
    <li><b>&quot;xscale&quot;:</b> The local horizontal scale of the bone.<br />
      <b></b>
    </li>
    <li><b>&quot;yscale&quot;:</b> The local vertical scale of the bone.<br />
      <b></b>
    </li>
    <li><b>&quot;parent&quot;:</b> The name (a string) of the parent bone.</li>
  </ul>
  <p>This function is provided so that you can &quot;intercept&quot; animation data and modify it before it is drawn on the screen, and as such you would want to use it in the <a href="../../../../../../The_Asset_Editors/Object_Properties/Other_Events.htm">Other - Animation Update</a> event, since this event is triggered just before the Draw Events.</p>
  <p>Note that you can use the same map you filled out using the <span class="inline3_func"><a data-xref="{title}" href="skeleton_bone_state_get.htm">skeleton_bone_state_get</a></span> function, even though it contains the additional &quot;World&quot; keys and values. Since these refer to <i>read-only</i> values, setting them with this function will have no affect.</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code"><span data-field="title" data-format="default">skeleton_bone_state_set</span>(bone, map);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>bone</td>
        <td><span data-keyref="Type_String"><a href="../../../../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>The name (as a string) of the bone.</td>
      </tr>
      <tr>
        <td>map</td>
        <td><span data-keyref="Type_ID_DS_Map"><a href="../../../../Data_Structures/DS_Maps/ds_map_create.htm" target="_blank">DS Map</a></span></td>
        <td>The (previously created) DS map that stores the bone data.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var _map = ds_map_create();<br />
    skeleton_bone_state_get(&quot;head&quot;, _map);<br />
    var _xx = ds_map_find_value(_map, &quot;worldX&quot;);<br />
    var _yy = ds_map_find_value(_map, &quot;worldY&quot;);<br />
    var _deltax = mouse_x - (x + _xx);<br />
    var _deltay = mouse_y - (y + _yy);<br />
    var _angle = -darctan2(_deltay, _deltax);<br />
    ds_map_replace(_map, &quot;angle&quot;, _angle);<br />
    skeleton_bone_state_set(&quot;head&quot;, _map);<br />
    ds_map_destroy(_map);</p>
  <p>The above code creates a DS map and then populates it with the data from the bone named &quot;head&quot;. It then extracts the world position for the bone, and uses that data to set the &quot;angle&quot; of the bone to track the mouse position in the game.</p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="Bones.htm">Bones</a></div>
        <div style="float:right">Next: <a data-xref="{title}" href="skeleton_bone_list.htm">skeleton_bone_list</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2025 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
skeleton_bone_state_set
-->
  <!-- TAGS
skeleton_bone_state_set
-->
</body>
</html>