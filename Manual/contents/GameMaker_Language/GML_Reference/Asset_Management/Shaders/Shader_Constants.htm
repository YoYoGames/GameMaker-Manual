<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Shader Uniforms</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the built-in Shader Uniforms" />
  <meta name="rh-index-keywords" content="gm_Matrices,MATRIX_VIEW,MATRIX_PROJECTION,MATRIX_WORLD,MATRIX_WORLD_VIEW,MATRIX_WORLD_VIEW_PROJECTION,MATRIX_MAX,MAX_VS_LIGHTS,gm_BaseTexture,gm_LightingEnabled,gm_FogStart,gm_RcpFogRange,gm_PS_FogEnabled,gm_FogColour,gm_VS_FogEnabled,gm_AlphaTestEnabled,gm_AlphaRefValue" />
  <meta name="search-keywords" content="Shader Constants,gm_Matrices,MATRIX_VIEW,MATRIX_PROJECTION,MATRIX_WORLD,MATRIX_WORLD_VIEW,MATRIX_WORLD_VIEW_PROJECTION,MATRIX_MAX,MAX_VS_LIGHTS,gm_BaseTexture,gm_LightingEnabled,gm_FogStart,gm_RcpFogRange,gm_PS_FogEnabled,gm_FogColour,gm_VS_FogEnabled,gm_AlphaTestEnabled,gm_AlphaRefValue" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Shader Constants</h1>
  <p>Apart from the shader functions and constants defined in the OpenGL ES Shading Language (GLSL ES) <a href="https://registry.khronos.org/OpenGL/specs/es/2.0/GLSL_ES_Specification_1.00.pdf" target="_blank">Reference Pages</a>, there are also a number of shader constants available to you that are unique to <span data-keyref="GameMaker Name">GameMaker</span>.</p>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">MATRIX_VIEW</span></td>
        <td>This array index constant holds the index to the current view matrix. The index returned would be used as an array value when calling the <span class="inline">gm_Matrices</span> constant within the shader code.</td>
      </tr>
      <tr>
        <td><span class="inline">MATRIX_PROJECTION</span></td>
        <td>This array index constant holds the index to the current projection matrix. The index returned would be used as an array value when calling the <span class="inline">gm_Matrices</span> constant within the shader code.</td>
      </tr>
      <tr>
        <td><span class="inline">MATRIX_WORLD</span></td>
        <td>This array index constant holds the index to the current world matrix. This can be used for things like lighting if you have light information in world-space. The index returned would be used as an array value when calling the <span class="inline">gm_Matrices</span> constant within the shader code.</td>
      </tr>
      <tr>
        <td><span class="inline">MATRIX_WORLD_VIEW</span></td>
        <td>This array index constant holds the index to the result of the world and view matrices multiplied together. This is often used for things like fog. The index returned would be used as an array value when calling the <span class="inline">gm_Matrices</span> constant within the shader code.</td>
      </tr>
      <tr>
        <td><span class="inline">MATRIX_WORLD_VIEW_PROJECTION</span></td>
        <td>This array index constant holds the index to the result of the world, view and projection matrices multiplied together. This is the normal transformation matrix used for vertex positions. The index returned would be used as an array value when calling the <span class="inline">gm_Matrices</span> constant within the shader code.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>The following constants are also available:</p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">MATRIX_MAX</span></td>
        <td>The size of the matrix array (<span class="inline2">gm_Matrices</span>) in the vertex shader.</td>
      </tr>
      <tr>
        <td><span class="inline">MAX_VS_LIGHTS</span></td>
        <td>The maximum number of point and directional lights available in the shader.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p>The following pre-defined matrix uniforms and constants can be used in your shader to access <span data-keyref="GameMaker Name">GameMaker</span> specific values:</p>
  <table>
    <tbody>
      <tr>
        <th>Constant</th>
        <th>Description</th>
      </tr>
      <tr>
        <td><span class="inline">gm_Matrices[matrix]</span></td>
        <td>This array constant returns a transform matrix and is one of the available pre-defined uniforms that <span data-keyref="GameMaker Name">GameMaker</span> creates for you to use within the shader code editor. The array index is chosen from one of the above listed constants.</td>
      </tr>
      <tr>
        <td><span class="inline">gm_BaseTexture</span></td>
        <td>This is a 2D sampler constant that returns the texture of the current object, as set by <span data-keyref="GameMaker Name">GameMaker</span>. So it would be the current sprite, surface or texture that would normally be used when drawing without the shader being called.</td>
      </tr>
      <tr>
        <td><span class="inline">gm_LightingEnabled</span></td>
        <td>This can be used to get or set the <span data-keyref="GameMaker Name">GameMaker</span> lighting when using 3D.</td>
      </tr>
      <tr>
        <td><span class="inline">gm_Lights_Direction[]</span></td>
        <td>This is an array of vec4s, each vec4 contains a light&#39;s normalised direction vector (X, Y, Z) and a fourth dimension (W) which is 1 when the light is enabled, and 0 when disabled</td>
      </tr>
      <tr>
        <td><span class="inline">gm_Lights_PosRange[]</span></td>
        <td>This is an array of vec4s, each vec4 contains a light&#39;s position (X, Y, Z) and a fourth dimension (W) which is the light&#39;s range, which is 0 when that light is disabled</td>
      </tr>
      <tr>
        <td><span class="inline">gm_Lights_Colour</span></td>
        <td>This is an array of vec4s, each vec4 contains a light&#39;s colour (R, G, B), with the alpha channel (A) always being 1</td>
      </tr>
      <tr>
        <td><span class="inline">gm_AmbientColour</span></td>
        <td>This is a vec4 containing the colour of the ambient light as set in <a href="../../Drawing/Lighting/draw_light_define_ambient.htm"><span class="inline">draw_light_define_ambient()</span></a></td>
      </tr>
      <tr>
        <td><span class="inline">gm_FogStart</span></td>
        <td>This can be used to get the distance where polygons start to be blended with the fog colour.</td>
      </tr>
      <tr>
        <td><span class="inline">gm_RcpFogRange</span></td>
        <td>This can be used to get the distance at which fog is maximal and nothing can be seen anymore.</td>
      </tr>
      <tr>
        <td><span class="inline">gm_PS_FogEnabled</span></td>
        <td>This will return <span class="inline">true</span> or <span class="inline">false</span> if the GPU has pixel fog enabled or not.</td>
      </tr>
      <tr>
        <td><span class="inline">gm_FogColour</span></td>
        <td>This can be used to get the fog colour used by <span data-keyref="GameMaker Name">GameMaker</span>.</td>
      </tr>
      <tr>
        <td><span class="inline">gm_VS_FogEnabled</span></td>
        <td>This will return <span class="inline">true</span> or <span class="inline">false</span> if the GPU has vertex fog enabled or not.</td>
      </tr>
      <tr>
        <td><span class="inline">gm_AlphaTestEnabled</span></td>
        <td>This can be used to get alpha testing in the shader. See <a href="../../Drawing/GPU_Control/gpu_set_alphatestenable.htm"><span class="inline">gpu_set_alphatestenable()</span></a> for more information on alpha testing.</td>
      </tr>
      <tr>
        <td><span class="inline">gm_AlphaRefValue</span></td>
        <td>This can be used to get the current alpha testing reference value. See <a href="../../Drawing/GPU_Control/gpu_set_alphatestref.htm"><span class="inline">gpu_set_alphatestref()</span></a> for more information on the alpha test reference.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Shaders.htm">Shaders</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Shader Constants
gm_Matrices
MATRIX_VIEW
MATRIX_PROJECTION
MATRIX_WORLD
MATRIX_WORLD_VIEW
MATRIX_WORLD_VIEW_PROJECTION
MATRIX_MAX
MAX_VS_LIGHTS
gm_Matrices[matrix]
gm_BaseTexture
gm_LightingEnabled
gm_FogStart
gm_RcpFogRange
gm_PS_FogEnabled
gm_FogColour
gm_VS_FogEnabled
gm_AlphaTestEnabled
gm_AlphaRefValue
-->
  <!-- TAGS
shader_constants
-->
</body>
</html>