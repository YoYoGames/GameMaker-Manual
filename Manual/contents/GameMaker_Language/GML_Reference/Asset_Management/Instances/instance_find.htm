<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_find</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_find" />
  <meta name="rh-index-keywords" content="instance_find" />
  <meta name="search-keywords" content="instance_find" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>All instances have a unique identifier (<a href="Instance_Variables/id.htm"><span class="inline">id</span></a>) which can be used to modify and manipulate them while a game is running, but you may not always know what the id for a specific instance is and so this function can help as you can use it to iterate through all of them to find what you need. You specify the object that you want to find the instance of and a number, and if there is an instance at that position in the instance list then the function returns the id of that instance, and if not it returns the special <a href="../../../GML_Overview/Instance_Keywords.htm">keyword</a> <span class="inline"><b>noone</b></span>. You can also use the keyword <span class="inline"><b>all</b></span> to iterate through all the instances in a room, as well as a parent object to iterate through all the instances that are part of that parent / child hierarchy, and you can even specify an instance (if you have its <span class="inline">id</span>) as a check to see if it actually exists in the current room. Please note that as instances are sorted in an <i>arbitrary</i> manner, there is no specific order to how the instances are checked by this function, and any instance can be in any position.</p>
  <p>The maximum value for &quot;n&quot; in this function would be</p>
  <ul class="colour">
    <li>For the keyword <span class="inline"><b>all</b></span>: <a href="instance_count.htm"><span class="inline">instance_count - 1</span></a></li>
    <li>For an object index: <a href="instance_number.htm"><span class="inline">instance_number(OBJ) - 1</span></a></li>
  </ul>
  <p> </p>
  <h4><b>Syntax:</b></h4>
  <p class="code">instance_find(obj, n);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>obj</td>
        <td><span data-keyref="Type_Asset_Object">Object Asset</span></td>
        <td>The object to find the nth instance of</td>
      </tr>
      <tr>
        <td>n</td>
        <td><span data-keyref="Type_Real">Real</span></td>
        <td>The number of the instance to find.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_Instance">Instance ID</span> or <span data-keyref="Type_ID_noone">noone</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">for (var i = 0; i &lt; instance_number(obj_Enemy); ++i;)<br />
    {<br />
        enemy[i] = instance_find(obj_Enemy,i);<br />
    }</p>
  <p>The above code will use a <span class="inline">for</span> loop to iterate through all the instances of &quot;obj_Enemy&quot; and store their <b>id</b> in the array &quot;enemy[]&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Instances.htm">Instances</a></div>
        <div style="float:right">Next: <a href="instance_furthest.htm">instance_furthest</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2022 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instance_find
-->
  <!-- TAGS
instance_find
-->
</body>
</html>