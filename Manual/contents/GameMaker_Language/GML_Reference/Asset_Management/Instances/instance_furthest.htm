<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>instance_furthest</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the function instance_furthest" />
  <meta name="rh-index-keywords" content="instance_furthest" />
  <meta name="search-keywords" content="instance_furthest" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>This function will check all the instances of the given object to see which is furthest from the given x/y point. All checks will be from the given x/y position to the <i>origin</i> (the x/y position) of instances of the object specified. If no instances of the object exist, the function will return an invalid instance handle (<span class="inline2"><a data-xref="{title}" href="../../../GML_Overview/Instance Keywords/noone.htm">noone</a></span>), but if there are instances then it will return the <a href="Instance_Variables/id.htm"><span class="inline">id</span></a> of the instance found. Please note that if the instance running the code has the same object index as the object being checked, then it will be included in the check (this includes checks for parent objects if the calling instance is also a child of the parent).</p>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">instance_furthest(x, y, obj);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>x</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The x position to check for instances far from.</td>
      </tr>
      <tr>
        <td>y</td>
        <td><span data-keyref="Type_Real"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span></td>
        <td>The y position to check for instances far from.</td>
      </tr>
      <tr>
        <td>obj</td>
        <td><span data-keyref="Type_Asset_Object"><a href="../../../../The_Asset_Editors/Objects.htm" target="_blank">Object Asset</a></span></td>
        <td>The object to check for instances of.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_ID_Instance"><a href="Instance_Variables/id.htm" target="_blank">Object Instance</a></span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">var inst;<br />
    inst = instance_furthest(x, y, object_index);<br />
    if (inst != id)<br />
    {<br />
        draw_line(x, y, inst.x, inst.y);<br />
    }</p>
  <p>The above code will find the furthest instance that shares the same object index as the instance running the code and store the id in a variable. This variable is then checked to see if it is the same as the id of the calling instance and, if it is not, a line is drawn between the two instances.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a href="Instances.htm">Instances</a></div>
        <div style="float:right">Next: <a href="instance_nearest.htm">instance_nearest</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2025 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
instance_furthest
-->
  <!-- TAGS
instance_furthest
-->
</body>
</html>