<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>ds_stack_read</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for ds_stack_read" />
  <meta name="rh-index-keywords" content="ds_stack_read" />
  <meta name="search-keywords" content="ds_stack_read" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">title</span></h1>
  <p>With this function you can recreate a saved DS stack (one that has previously been written as a string using <a href="ds_stack_write.htm"><span class="inline">ds_stack_write()</span></a>). You must first create a new DS stack to read the string into, and if the DS stack already exists and has information stored in it, then this will be cleared before reading. This function is of vital importance when creating save/load mechanisms for your game.</p>
  <div data-conref="../../../../assets/snippets/Note_DS_Format_Changes.hts"> </div>
  <p> </p>
  <h4>Syntax:</h4>
  <p class="code">ds_stack_read(id, str [, legacy]);</p>
  <table>
    <tbody>
      <tr>
        <th>Argument</th>
        <th>Type</th>
        <th>Description</th>
      </tr>
      <tr>
        <td>id</td>
        <td><span data-keyref="Type_ID_DS_Stack"><a href="ds_stack_create.htm" target="_blank">DS Stack</a></span></td>
        <td>The handle of the data structure to read into.</td>
      </tr>
      <tr>
        <td>str</td>
        <td><span data-keyref="Type_String"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">String</a></span></td>
        <td>The string to read from.</td>
      </tr>
      <tr>
        <td>legacy</td>
        <td><span data-keyref="Type_Bool"><a href="../../../GML_Overview/Data_Types.htm" target="_blank">Boolean</a></span></td>
        <td><span data-conref="../../../../assets/snippets/Tag_optional.hts"> </span> Can be either <span class="inline">true</span> or <span class="inline">false</span> or omitted completely.</td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Returns:</h4>
  <p class="code"><span data-keyref="Type_Void">N/A</span></p>
  <p> </p>
  <h4>Example:</h4>
  <p class="code">stack = ds_stack_create();<br />
    ini_open(&quot;save.ini&quot;);<br />
    var str = ini_read_string(&quot;Stacks&quot;, &quot;0&quot;, &quot;&quot;);<br />
    if (str != &quot;&quot;)<br />
    {<br />
        ds_stack_read(stack, str);<br />
    }<br />
    ini_close();</p>
  <p>The above code creates a stack and stores the index in the variable &quot;stack&quot;. It then opens an <span class="inline">ini</span> file and reads a string from that, checking to make sure that the string is not returned as empty first. This string is then read into the newly created DS stack .</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Back: <a data-xref="{title}" href="DS_Stacks.htm">DS Stacks</a></div>
        <div style="float:right">Next: <a href="ds_stack_write.htm">ds_stack_write</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2025 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
ds_stack_read
-->
  <!-- TAGS
ds_stack_read
-->
</body>
</html>